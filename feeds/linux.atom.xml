<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My Note Book</title><link href="http://liugehao.github.io/" rel="alternate"></link><link href="http://liugehao.github.io/feeds/linux.atom.xml" rel="self"></link><id>http://liugehao.github.io/</id><updated>2013-12-24T00:00:00+01:00</updated><entry><title>linux/solr 4.6 和tomcat 8的安装</title><link href="http://liugehao.github.io/linuxsolr-46-he-tomcat-8de-an-zhuang.html" rel="alternate"></link><updated>2013-12-24T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-12-24:linuxsolr-46-he-tomcat-8de-an-zhuang.html</id><summary type="html">&lt;p&gt;=== tomcat ===
配置好jdk,解压tomcat,执行bin/startup.sh 启动&lt;/p&gt;
&lt;p&gt;=== solr安装 ===&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将 dist 下的solr.war 放到tomcat的webapps下。&lt;/li&gt;
&lt;li&gt;启动tomcat 此时报错，solr.war 解压 关闭tomcat 删除solr.war&lt;/li&gt;
&lt;li&gt;得到solr 目录&lt;/li&gt;
&lt;li&gt;配置solr_home  :将下载的solr包中解压的example/solr 文件夹copy到 /opt/solr(路径可以任意修改)。&lt;/li&gt;
&lt;li&gt;修改tomcat/webapps/solr/WEB-INFO/web.xml
   {{{
    &lt;env-entry&gt;
       &lt;env-entry-name&gt;solr/home&lt;/env-entry-name&gt;
       &lt;env-entry-value&gt;/opt/solr&lt;/env-entry-value&gt;
       &lt;env-entry-type&gt;java.lang.String&lt;/env-entry-type&gt;
    &lt;/env-entry&gt;
   }}}&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者/root/tomcat/conf/Catalina/localhost目录下建立solr文件
   {{{
    &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
      &lt;Context docBase="/root/tomcat/webapps/solr" &gt; 
      &lt;Environment name="solr/home" type="java.lang.String" value="/opt/solr" override="true" /&gt;
    &lt;/Context&gt;
   }}}
 1. copy 下载包中的 example\lib\ext 下的jar包全部放到tomcat根目录下 的lib目录下
 1. 启动tomcat&lt;/p&gt;
&lt;p&gt;=== 安装分词 ===
{{{
wget https://mmseg4j.googlecode.com/files/mmseg4j-1.9.1.zip -O mmseg4j
cp mmseg4j/dist/* /root/tomcat/webapps/solr/WEB-INFO/lib&lt;/p&gt;
&lt;p&gt;}}}
vi /opt/solr/collection1/conf/schema.xml
add this lines to "fields" and "fieldtypes"
{{{
&lt;field name="simple" type="textSimple" indexed="true" stored="true" multiValued="true" /&gt;
  &lt;field name="complex" type="textComplex" indexed="true" stored="true" multiValued="true" /&gt;
  &lt;field name="max" type="textMaxWord" indexed="true" stored="true" multiValued="true" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;fieldtype name="textComplex" class="solr.TextField" positionIncrementGap="100"&gt;
        &lt;analyzer&gt;
            &lt;tokenizer class="com.chenlb.mmseg4j.solr.MMSegTokenizerFactory" mode="complex" dicPath="dic"&gt;&lt;/tokenizer&gt;
        &lt;/analyzer&gt;
    &lt;/fieldtype&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;fieldtype&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;textMaxWord&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;solr.TextField&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;positionIncrementGap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;analyzer&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tokenizer&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.chenlb.mmseg4j.solr.MMSegTokenizerFactory&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;max-word&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;dicPath=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dic&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/tokenizer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/analyzer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/fieldtype&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;fieldtype&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;textSimple&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;solr.TextField&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;positionIncrementGap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;analyzer&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tokenizer&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;com.chenlb.mmseg4j.solr.MMSegTokenizerFactory&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;simple&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;dicPath=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dic&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/tokenizer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/analyzer&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/fieldtype&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}
open url "http://172.16.147.141:8080/solr/#/collection1/analysis" on Brower&lt;/p&gt;
&lt;p&gt;error:
{{{
TokenStream contract violation: reset()/close() call missing, reset() called multiple times, or subclass does not call super.reset(). Please see Javadocs of TokenStream class for more information about the correct consuming workflow.
}}}
solution:
{{{
find ./ -name MMSegTokenizer.java&lt;/p&gt;
&lt;p&gt;public void reset() throws IOException {
        //lucene 4.0
        //org.apache.lucene.analysis.Tokenizer.setReader(Reader)
        //setReader 自动被调用, input 自动被设置。
        super.reset();   //加这一句
        mmSeg.reset(input);
    }&lt;/p&gt;
&lt;p&gt;重新打包
mvn package 
root@debian:~/mmseg4j-1.9.1/mmseg4j-analysis/target# cp mmseg4j-analysis-1.9.2-SNAPSHOT.jar ~/tomcat/webapps/solr/WEB-INF/lib/mmseg4j-analysis-1.9.1.jar
}}}&lt;/p&gt;
&lt;p&gt;restart tomcat
open url "http://172.16.147.141:8080/solr/#/collection1/analysis" on Brower&lt;/p&gt;</summary></entry><entry><title>rehl5安装jdk</title><link href="http://liugehao.github.io/rehl5an-zhuang-jdk.html" rel="alternate"></link><updated>2013-12-24T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-12-24:rehl5an-zhuang-jdk.html</id><summary type="html">&lt;p&gt;{{{
解压jdk.tar.gz到任意目录&lt;/p&gt;
&lt;p&gt;/etc/profile文件   -- 全部用户有效&lt;/p&gt;
&lt;p&gt;在profile 文件的尾部面加入&lt;/p&gt;
&lt;p&gt;JAVA_HOME=/usr/java/jdk1.5.0_16  -- jdk 的安装路径
PATH=$JAVA_HOME/bin:$PATH
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar &lt;/p&gt;
&lt;p&gt;export JAVA_HOME
export PATH
export CLASSPATH
export CATALINA_HOME    &lt;/p&gt;
&lt;p&gt;保存 退出
在shell输入 source /etc/profile 
}}}&lt;/p&gt;
&lt;p&gt;set default jdk for debin
{{{&lt;/p&gt;
&lt;p&gt;sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-7-sun/bin/java 300&lt;br /&gt;
sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-7-sun/bin/javac 300&lt;br /&gt;
sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/java-7-sun/bin/jar 300 &lt;br /&gt;
sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/java-7-sun/bin/javah 300 &lt;br /&gt;
sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/java-7-sun/bin/javap 300   &lt;/p&gt;
&lt;p&gt;sudo update-alternatives --config java&lt;br /&gt;
}}}&lt;/p&gt;</summary></entry><entry><title>在这里详述 linux/hadoop python</title><link href="http://liugehao.github.io/zai-zhe-li-xiang-shu-linuxhadoop-python.html" rel="alternate"></link><updated>2013-11-28T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-11-28:zai-zhe-li-xiang-shu-linuxhadoop-python.html</id><summary type="html">&lt;p&gt;http://www.oschina.net/translate/a-guide-to-python-frameworks-for-hadoop&lt;/p&gt;
&lt;p&gt;python连接hadoop方式
 1. Hadoop流
 1. mrjob
 1. dumbo
 1. hadoopy
 1. pydoop
 1. 其它&lt;/p&gt;
&lt;p&gt;=== hadoop流：===&lt;/p&gt;
&lt;p&gt;在http://books.google.com/ngrams取得数据, 在hdfs上建立/ngrams 目录，CSV上传到/ngrams目录。&lt;/p&gt;
&lt;p&gt;mapper.py
{{{#!highlight python&lt;/p&gt;
&lt;h1&gt;! /usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import os
import re
import sys&lt;/p&gt;
&lt;h1&gt;determine value of n in the current block of ngrams by parsing the filename&lt;/h1&gt;
&lt;p&gt;input_file = os.environ['map_input_file']
expected_tokens = int(re.findall(r'([\d]+)gram', os.path.basename(input_file))[0])&lt;/p&gt;
&lt;p&gt;for line in sys.stdin:
    data = line.split('\t')&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# perform some error checking&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;

&lt;span class="cp"&gt;# unpack data&lt;/span&gt;
&lt;span class="n"&gt;ngram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cp"&gt;# more error checking&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ngram&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;expected_tokens&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;continue&lt;/span&gt;

&lt;span class="cp"&gt;# build key and emit&lt;/span&gt;
&lt;span class="n"&gt;pair&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;ngram&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ngram&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;expected_tokens&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%s&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;reducer.py
{{{#!highlight python&lt;/p&gt;
&lt;h1&gt;! /usr/bin/env python&lt;/h1&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;p&gt;total = 0
prev_key = False
for line in sys.stdin:
    data = line.split('\t')
    curr_key = '\t'.join(data[:3])
    count = int(data[3])&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# found a boundary; emit current sum&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;prev_key&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;curr_key&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;prev_key&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%s&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;%i&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prev_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;prev_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr_key&lt;/span&gt;
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
&lt;span class="cp"&gt;# same key; accumulate sum&lt;/span&gt;
&lt;span class="nl"&gt;else:&lt;/span&gt;
    &lt;span class="n"&gt;prev_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr_key&lt;/span&gt;
    &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;emit last key&lt;/h1&gt;
&lt;p&gt;if prev_key:
    print &amp;gt;&amp;gt;sys.stdout, "%s\t%i" % (prev_key, total)
}}}&lt;/p&gt;
&lt;p&gt;exec:
{{{
../hadoop64/bin/hadoop jar ../hadoop64/share/hadoop/tools/lib/hadoop-streaming-2.2.0.jar -input /ngrams  -output /output-streaming  -mapper mapper.py  -combiner reducer.py  -reducer reducer.py  -jobconf stream.num.map.output.key.fields=3   -jobconf stream.num.reduce.output.key.fields=3   -jobconf mapred.reduce.tasks=10  -file mapper.py   -file reducer.py
}}}&lt;/p&gt;</summary></entry><entry><title>== 在这里详述 linux/hadoop x64 编译。==</title><link href="http://liugehao.github.io/zai-zhe-li-xiang-shu-linuxhadoop-x64-bian-yi.html" rel="alternate"></link><updated>2013-11-28T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-11-28:zai-zhe-li-xiang-shu-linuxhadoop-x64-bian-yi.html</id><summary type="html">&lt;p&gt;{{{
参考：http://blog.csdn.net/bamuta/article/details/13506893
apt-get install autoconf automake libtool cmake
apt-get install libncurses5-dev
apt-get install libssl-dev&lt;/p&gt;
&lt;p&gt;安装maven
下载，并解压
http://maven.apache.org/download.cgi 
[root@hadoop01 stable]# mvapache-maven-3.1.1 /usr/local/
将/usr/local/apache-maven-3.1.1/bin加到环境变量中&lt;/p&gt;
&lt;p&gt;apt-get install libprotobuf-dev&lt;/p&gt;
&lt;p&gt;mvn package -Pdist,native -DskipTests -Dtar
}}}&lt;/p&gt;
&lt;p&gt;ubuntu :
http://blog.changecong.com/2013/10/ubuntu-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-hadoop-2-2-0/
{{{
apt-get install g++ autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev
下载最新的protobuf： https://code.google.com/p/protobuf/downloads/list
解压，依次运行
$ ./configure --prefix=/usr
$ sudo make
$ sudo make check
$ sudo make install
apt-get install maven
最新的2.2.0 的Source Code 压缩包解压出来的code有个bug 需要patch后才能编译。否则编译hadoop-auth 会提示下面错误：
https://issues.apache.org/jira/browse/HADOOP-10110
patch -p0 &amp;lt; HADOOP-10110.patch 
编译hadoop:
mvn package -Pdist,native -DskipTests -Dtar
}}}&lt;/p&gt;
&lt;p&gt;最新的2.2.0 的Source Code 压缩包解压出来的code有个bug 需要patch后才能编译。否则编译hadoop-auth 会提示下面错误：
{{{
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.5.1:testCompile (default-testCompile) on project hadoop-auth: Compilation failure: Compilation failure:
[ERROR] /home/chuan/trunk/hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/client/AuthenticatorTestCase.java:[84,13] cannot access org.mortbay.component.AbstractLifeCycle
[ERROR] class file for org.mortbay.component.AbstractLifeCycle not found
}}}
Patch :https://issues.apache.org/jira/browse/HADOOP-10110&lt;/p&gt;</summary></entry><entry><title>在这里详述 linux/Debian 7解决中文乱码。</title><link href="http://liugehao.github.io/zai-zhe-li-xiang-shu-linuxdebian-7jie-jue-zhong-wen-luan-ma.html" rel="alternate"></link><updated>2013-11-06T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-11-06:zai-zhe-li-xiang-shu-linuxdebian-7jie-jue-zhong-wen-luan-ma.html</id><summary type="html">&lt;p&gt;DEBIAN下中文显示&lt;/p&gt;
&lt;p&gt;一.首先检查LOCALE情况&lt;/p&gt;
&lt;p&gt;说明：DEBIAN因为基于GNU所以，对不同地域进行了不同的包支持，以LOCALE形式存在。&lt;/p&gt;
&lt;p&gt;1.挂载ISO文件包，前8个ISO包就可以（这里不在讲述）。&lt;/p&gt;
&lt;p&gt;2.启动终端&lt;/p&gt;
&lt;h1&gt;apt-get install locales&lt;/h1&gt;
&lt;p&gt;3.重新配置LOCALE&lt;/p&gt;
&lt;h1&gt;dpkg-reconfigure locales&lt;/h1&gt;
&lt;p&gt;在所有的语言包选择en_US.ISO-8859-1和zh_CN.GBK。其他en_US和zh_CN打头的也选上。然后选择zh_CN.GBK为默认的LOCALE，则系统为中文界面（这里也可以选en_US.ISO，使系统为英文界面）。&lt;/p&gt;
&lt;p&gt;3.运行LOCALE命令检查当前的LOCALE环境&lt;/p&gt;
&lt;h1&gt;locale&lt;/h1&gt;
&lt;p&gt;正确配置下会显式&lt;/p&gt;
&lt;p&gt;LANG =zh_CN.GBK&lt;/p&gt;
&lt;p&gt;........................以下显示略过&lt;/p&gt;
&lt;p&gt;ibus 没有输入窗口 错误 dpkg-reconfigure locales 选择zh-cn.UTF-8也可解决。&lt;/p&gt;</summary></entry><entry><title>Describe linux/no such file to load -- mkmf (LoadError) here.</title><link href="http://liugehao.github.io/describe-linuxno-such-file-to-load-mkmf-loaderror-here.html" rel="alternate"></link><updated>2013-11-05T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-11-05:describe-linuxno-such-file-to-load-mkmf-loaderror-here.html</id><summary type="html">&lt;p&gt;/usr/bin/ruby1.8 extconf.rb
extconf.rb:1:in `require': no such file to load -- mkmf (LoadError)
 from extconf.rb:1&lt;/p&gt;
&lt;p&gt;sudo apt-get install build-essential libopenssl-ruby ruby1.8-dev&lt;/p&gt;
&lt;p&gt;debian 7:
sudo apt-get install build-essential libopenssl-ruby ruby-dev&lt;/p&gt;</summary></entry><entry><title>Describe linux/sphinx写书 here.</title><link href="http://liugehao.github.io/describe-linuxsphinxxie-shu-here.html" rel="alternate"></link><updated>2013-10-29T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-10-29:describe-linuxsphinxxie-shu-here.html</id><summary type="html">&lt;p&gt;{{{
pip install sphinx
}}}&lt;/p&gt;
&lt;p&gt;生成项目
{{{
sphinx-quickstart
}}}&lt;/p&gt;
&lt;p&gt;生成pdf
{{{
apt-get install texlive-xetex # xelatex在此包中，先不安装下面的texlive试试
apt-get install latex-make&lt;/p&gt;
&lt;p&gt;apt-get install texlive # 先进行下面步骤，如果出错，安装texlive
make latex
cd builc/latex
xelatex [abc].tex #abc为tex文件名
}}}&lt;/p&gt;
&lt;p&gt;中文内容支持
{{{
fc-list :lang=zh #查看可用中文字体
l@x201i:~/tmp/abd$ fc-list :lang=zh
/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc: WenQuanYi Zen Hei,文泉驛正黑,文泉驿正黑:style=Regular
/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc: WenQuanYi Zen Hei Sharp,文泉驛點陣正黑,文泉驿点阵正黑:style=Regular
/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf: Droid Sans:style=Regular
/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc: WenQuanYi Zen Hei Mono,文泉驛等寬正黑,文泉驿等宽正黑:style=Regular&lt;/p&gt;
&lt;h1&gt;修改source/conf.py&lt;/h1&gt;
&lt;p&gt;latex_elements = {&lt;/p&gt;
&lt;h1&gt;Additional stuff for the LaTeX preamble.&lt;/h1&gt;
&lt;p&gt;'preamble': '''
\usepackage{xeCJK}
\setCJKmainfont[BoldFont=WenQuanYi Zen Hei, ItalicFont=WenQuanYi Zen Hei]{WenQuanYi Zen Hei}
\setCJKmonofont[Scale=0.9]{WenQuanYi Zen Hei}
\setCJKfamilyfont{song}[BoldFont=WenQuanYi Zen Hei]{WenQuanYi Zen Hei}
\setCJKfamilyfont{sf}[BoldFont=WenQuanYi Zen Hei]{WenQuanYi Zen Hei}
''',
}&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/SonarQube install on rhel5.7 here.</title><link href="http://liugehao.github.io/describe-linuxsonarqube-install-on-rhel57-here.html" rel="alternate"></link><updated>2013-10-18T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-10-18:describe-linuxsonarqube-install-on-rhel57-here.html</id><summary type="html">&lt;p&gt;用linux自带jdk出错
安装sun(oracle)jdk [[linux/rehl5安装jdk]]&lt;/p&gt;
&lt;p&gt;==　下载安装软件 ==
{{{
wget http://dist.sonar.codehaus.org/sonar-3.7.2.zip
unzip sonar-3.7.2.zip
mv sonar-3.7.2 /etc/sonar
/etc/sonar/bin/linux-x86-64/sonar.sh console //start sonar{console | start |stop |restart|status|dump}
}}}
打开浏览器，输入 http://localhost:9000/　可见软件界面安装完毕 (default System administrator credentials are admin/admin)。&lt;/p&gt;
&lt;p&gt;'''默认使用h2数据库，如果使用：mysql postgresql'''　http://docs.codehaus.org/display/SONAR/Installing+and+Configuring+SonarQube+Runner&lt;/p&gt;
&lt;p&gt;==== 更改数据库,改成自己要使用的数据库，及密码，其它数据库url注释 ====
{{{ 
vi conf/sonar.properties
sonar.jdbc.username:  sonarqube
sonar.jdbc.password:  mypassword
sonar.jdbc.url:       jdbc:postgresql://localhost/sonarqube
}}}
更改后，/etc/sonar/bin/linux-x86-64/sonar.sh start&lt;/p&gt;
&lt;p&gt;'''sonar-runner 的数据库连接conf/sonar-runner.properties也要做相应更改'''&lt;/p&gt;
&lt;p&gt;== 使用方法 ==
 1. 下载 SonarQube runner
    {{{
    wget http://repo1.maven.org/maven2/org/codehaus/sonar/runner/sonar-runner-dist/2.3/sonar-runner-dist-2.3.zip
    unzip sonar-runner-dist-2.3.zip -d /etc
    }}}
 1. 下载示例项目
    {{{
    wget https://github.com/SonarSource/sonar-examples/archive/master.zip
    unzip sonar-examples-master.zip
    }}}
 1. 进入项目目录执行sonar-runner
    {{{
    cd sonar-examples-master/projects/languages/java/sonar-runner/java-sonar-runner-simple
    /etc/sonar-runner-2.3/bin/sonar-runner
    }}}
 1. 刷新浏览器，可见"Projects"中出现"Simple Java project analyzed with the SonarQube Runner"&lt;/p&gt;
&lt;p&gt;== 安装插件 ==
admin/admin登录后，点击"settings","Update Center",查看已安装的插件及，可以安装的插件。&lt;/p&gt;
&lt;p&gt;== 本地化 ==
admin/admin登录后，点击"settings","Update Center","Available Plugins"向下接至"Localiztion",安装语言包
点击"General Settings","Localiztion"，更改设置。&lt;/p&gt;</summary></entry><entry><title>Describe linux/zeromq install on rhel6.4 with php extension here.</title><link href="http://liugehao.github.io/describe-linuxzeromq-install-on-rhel64-with-php-extension-here.html" rel="alternate"></link><updated>2013-10-14T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-10-14:describe-linuxzeromq-install-on-rhel64-with-php-extension-here.html</id><summary type="html">&lt;p&gt;=== zeromq install on rhel 6.4 x64 ===
{{{
cd /dev/yum.repo.d/
wget http://download.opensuse.org/repositories/home:/fengshuo:/zeromq/CentOS_CentOS-6/home:fengshuo:zeromq.repo
yum update
yum install zeromq
yum install zeromq-devel # for development
}}}&lt;/p&gt;
&lt;p&gt;=== php zermoq extension ===
{{{
yum install libxml2-devel&lt;/p&gt;
&lt;p&gt;wget http://cn2.php.net/distributions/php-5.5.4.tar.bz2
tar zxf php-5.5.4.tar.bz2
./configure
pear channel-discover pear.zero.mq
pecl install pear.zero.mq/zmq-beta&lt;/p&gt;
&lt;p&gt;cp ./php.ini-development /usr/local/lib/php.ini
vi /usr/local/lib/php.ini
}}}&lt;/p&gt;
&lt;h1&gt;add line  and save&lt;/h1&gt;
&lt;p&gt;{{{
extension=zmq.so
}}}&lt;/p&gt;
&lt;p&gt;=== php_zeromq_server.php ===
[[attachment:php_zeromq_server.php]]
{{{#!highlight php
&amp;lt;?php
$context = new ZMQContext(1);
// Socket to talk to clients
$responder = new ZMQSocket($context, ZMQ::SOCKET_REP);
$responder-&amp;gt;bind("tcp://*:5555");
while(true) {
// Wait for next request from client
$request = $responder-&amp;gt;recv();
//printf ("Received request: [%s]\n", $request);
// Do some 'work'
// Send reply back to client
$responder-&amp;gt;send("World");
}
}}}&lt;/p&gt;
&lt;p&gt;=== php_zeromq_client.php ===
[[attachment:php_zeromq_client.php]]
{{{#!highlight php
&amp;lt;?php
//count exec time
function time1(){
    list($a, $b) = explode(" ", microtime());
    return ((float)$a + (float)$b);
}
$start_time = time1();
$count = 100000;
$sucesscount = 0;
$context = new ZMQContext();
 //  Socket to talk to server
echo "Connecting to hello world server...\n";
$requester = new ZMQSocket($context, ZMQ::SOCKET_REQ);
$requester-&amp;gt;connect("tcp://localhost:5555");
for($request_nbr = 0; $request_nbr != $count; $request_nbr++) {
    //printf ("Sending request %d...\n", $request_nbr);
    $requester-&amp;gt;send("Hello");
    $reply = $requester-&amp;gt;recv();
    if($reply == "World")$sucesscount ++;
    //printf ("Received reply %d: [%s]\n", $request_nbr, $reply);
}
echo "\nseconds for send {$count} times 'hello' :" .  (time1()- $start_time)."\n sucesscount:{$sucesscount}";
}}}&lt;/p&gt;
&lt;p&gt;=== test ===
{{{
php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp; php php_zeromq_client.php &amp;amp;
}}}&lt;/p&gt;
&lt;p&gt;=== 测试结果  ==
单server进程，10客户进程并发，单进程１０Ｗ次发送接收，用时最快４２s，平均２０８３３/s　- ２３５００/s之间
{{{
seconds for send 100000 times 'hello' :42.54803109169
 sucesscount:100000
seconds for send 100000 times 'hello' :42.549309015274
 sucesscount:100000
seconds for send 100000 times 'hello' :42.571755886078
 sucesscount:100000
seconds for send 100000 times 'hello' :42.506102800369
 sucesscount:100000
seconds for send 100000 times 'hello' :42.516571998596
 sucesscount:100000
seconds for send 100000 times 'hello' :42.603147983551
 sucesscount:100000
seconds for send 100000 times 'hello' :42.622861862183
 sucesscount:100000
seconds for send 100000 times 'hello' :42.589258909225
 sucesscount:100000
seconds for send 100000 times 'hello' :42.608597040176
 sucesscount:100000
seconds for send 100000 times 'hello' :42.613350152969&lt;/p&gt;
&lt;p&gt;seconds for send 100000 times 'hello' :48.482357025146
 sucesscount:100000
seconds for send 100000 times 'hello' :48.780467987061
 sucesscount:100000
seconds for send 100000 times 'hello' :48.771656036377
 sucesscount:100000
seconds for send 100000 times 'hello' :48.794227838516
 sucesscount:100000
seconds for send 100000 times 'hello' :48.816515922546
 sucesscount:100000
seconds for send 100000 times 'hello' :48.832470178604
 sucesscount:100000
seconds for send 100000 times 'hello' :48.853888034821
 sucesscount:100000
seconds for send 100000 times 'hello' :48.85328912735
 sucesscount:100000
seconds for send 100000 times 'hello' :48.888187885284
 sucesscount:100000
seconds for send 100000 times 'hello' :48.886878013611
 sucesscount:100000&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/rabbitmq 安装 php扩展 here.</title><link href="http://liugehao.github.io/describe-linuxrabbitmq-an-zhuang-phpkuo-zhan-here.html" rel="alternate"></link><updated>2013-09-06T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-09-06:describe-linuxrabbitmq-an-zhuang-phpkuo-zhan-here.html</id><summary type="html">&lt;p&gt;{{{&lt;/p&gt;
&lt;p&gt;git clone https://github.com/alanxz/rabbitmq-c
cd rabbitmq-c/
git submodule init
git submodule update&lt;/p&gt;
&lt;p&gt;yum install cmake&lt;/p&gt;
&lt;p&gt;mkdir build &amp;amp;&amp;amp; cd build
cmake ..
cd .. &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/p&gt;
&lt;p&gt;wget http://pecl.php.net/get/amqp-1.2.0.tgz
 tar zxf amqp-1.2.0.tgz
 cd amqp-1.2.0
 phpize
 ./configure
 make -j 8
 make install&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;=== 开启web监控 ===
{{{
/opt/rabbitmq/sbin/rabbitmq-plugins enable rabbitmq_management
}}}
如果出错 ,创建/etc/rabbitmq目录及需要文件(touch),后再执行一次。&lt;/p&gt;
&lt;p&gt;=== 要安装amqp 的 C 库 rabbitmq-c，否则报下面的错误 ===
{{{
checking for amqp files in default path... not found
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/rhel 5.7 安装 rabbitmq here.</title><link href="http://liugehao.github.io/describe-linuxrhel-57-an-zhuang-rabbitmq-here.html" rel="alternate"></link><updated>2013-09-05T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-09-05:describe-linuxrhel-57-an-zhuang-rabbitmq-here.html</id><summary type="html">&lt;p&gt;=== 先安装erlang ===&lt;/p&gt;
&lt;p&gt;{{{
yum list|grep curses
rpm -ivh ncurses-devel-5.5-24.20060715.x86_64.rpm&lt;/p&gt;
&lt;p&gt;wget http://www.erlang.org/download/otp_src_R16B01.tar.gz
tar zxf otp_src_R16B01.tar.gz 
cd otp_src_R16B01
./configure
make &amp;amp;&amp;amp; make install&lt;/p&gt;
&lt;p&gt;}}}
=== 安装rabbitmq之前，设置环境变量 ===
{{{
export TARGET_DIR=/opt/rabbitmq
export SBIN_DIR=/opt/rabbitmq/sbin
export MAN_DIR=/opt/rabbitmq/man
}}}&lt;/p&gt;
&lt;p&gt;=== 安装rabbitmq ===
{{{
rpm -ivh xmlto-0.0.18-13.1.x86_64.rpm docbook-style-xsl-1.69.1-5.1.noarch.rpm w3m-0.5.1-18.el5.x86_64.rpm passivetex-1.25-5.1.1.noarch.rpm tetex-3.0-33.13.el5.x86_64.rpm xmltex-20020625-8.noarch.rpm tetex-fonts-3.0-33.13.el5.x86_64.rpm tetex-latex-3.0-33.13.el5.x86_64.rpm netpbm-progs-10.35.58-8.el5.x86_64.rpm tetex-dvips-3.0-33.13.el5.x86_64.rpm dialog-1.0.20051107-1.2.2.x86_64.rpm psutils-1.17-26.1.x86_64.rpm &lt;/p&gt;
&lt;p&gt;wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.1.5/rabbitmq-server-3.1.5.tar.gz
 tar zxf rabbitmq-server-3.1.5.tar.gz 
cd rabbitmq-server-3.1.5
make -j 8
make install&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;最后还要设置一下日志与消息持久化目录，命令如下，其中的myuser是你当前的用户名
{{{
mkdir /var/log/rabbitmq&lt;br /&gt;
chown myuser /var/log/rabbitmq&lt;br /&gt;
mkdir /var/lib/rabbitmq&lt;br /&gt;
chown myuser /var/lib/rabbitmq&lt;br /&gt;
}}}&lt;/p&gt;
&lt;p&gt;=== 启动 ===
{{{
cd /opt/rabbitmq/sbin&lt;br /&gt;
./rabbitmq-server
}}}
为启动方便，可以把/opt/rabbitmq/sbin下的命令在/usr/local/bin下做一个链接，命令如下
{{{
   sudo ln -s /opt/rabbitmq/sbin/rabbitmq-server /usr/local/bin/rabbitmq-server
}}}&lt;/p&gt;
&lt;p&gt;=== 错误 ===
如果出现
{{{
ERROR: epmd error for host "yournewhostname": timeout (timed out establishing tcp connection) 
}}}
原因是, 主机名和ip不匹配了，需要更改/etc/hosts 
{{{
127.0.0.1 yournewhostname
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/zeromq安装 here.</title><link href="http://liugehao.github.io/describe-linuxzeromqan-zhuang-here.html" rel="alternate"></link><updated>2013-08-30T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-30:describe-linuxzeromqan-zhuang-here.html</id><summary type="html">&lt;p&gt;{{{
apt-get install libtool autoconf automake uuid-dev g++
wget http://download.zeromq.org/zeromq-3.2.3.tar.gz
tar zxf zeromq-3.2.3.tar.gz
cd zeromq-3.2.3
./configure --build=sparc-linux
make
make install&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;pyzmq
{{{
pip install pyzmq
}}}
client.py
{{{#!highlight python
import sys
import zmq&lt;/p&gt;
&lt;h1&gt;Socket to talk to server&lt;/h1&gt;
&lt;p&gt;context = zmq.Context()
socket = context.socket(zmq.SUB)&lt;/p&gt;
&lt;p&gt;print "Collecting updates from weather server..."
socket.connect ("tcp://localhost:5556")&lt;/p&gt;
&lt;h1&gt;Subscribe to zipcode, default is NYC, 10001&lt;/h1&gt;
&lt;p&gt;zip_filter = sys.argv[1] if len(sys.argv) &amp;gt; 1 else "10001"
socket.setsockopt(zmq.SUBSCRIBE, zip_filter)&lt;/p&gt;
&lt;h1&gt;Process 5 updates&lt;/h1&gt;
&lt;p&gt;total_temp = 0
for update_nbr in range (5):
    string = socket.recv()
    zipcode, temperature, relhumidity = string.split()
    total_temp += int(temperature)
    print "Average temperature for zipcode '%s' was %dF" % (zip_filter, total_temp / update_nbr)
}}}&lt;/p&gt;
&lt;p&gt;server.py
{{{#!highlight python
import zmq
import random&lt;/p&gt;
&lt;p&gt;context = zmq.Context()
socket = context.socket(zmq.PUB)
socket.bind("tcp://*:5556")&lt;/p&gt;
&lt;p&gt;while True:
    zipcode = random.randrange(1,100000)
    temperature = random.randrange(1,215) - 80
    relhumidity = random.randrange(1,50) + 10&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d %d %d&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zipcode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temperature&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;relhumidity&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>linux/bash/awk中RS,ORS,FS,OFS区别与联系</title><link href="http://liugehao.github.io/linuxbashawkzhong-rsorsfsofsqu-bie-yu-lian-xi.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:linuxbashawkzhong-rsorsfsofsqu-bie-yu-lian-xi.html</id><summary type="html">&lt;p&gt;学习awk时，一定要记得动手去实践，只有在实践中才能发现问题，以下就我在学习中和实践中的经验，总结一下RS,ORS,FS,OFS的区别和联系。&lt;/p&gt;
&lt;p&gt;'''一，RS与ORS'''&lt;/p&gt;
&lt;p&gt;1，RS是记录分隔符，默认的分隔符是\n，具体用法看下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[root@krlcgcms01 mytest]# cat test1     /&lt;em&gt; //测试文件 &lt;/em&gt;/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2，RS默认分割符\n&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[root@krlcgcms01 mytest]# awk '{print $0}' test1  /&lt;em&gt; //awk 'BEGIN{RS="\n"}{print $0}' test1 这二个是一样的 &lt;/em&gt;/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实你可以把'''上面test1文件里的内容理解为，111 222\n333 444\n555 6666，利用\n进行分割'''。看下一个例子&lt;/p&gt;
&lt;p&gt;3，自定义RS分割符&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ echo "111 222|333 444|555 666"|awk 'BEGIN{RS="|"}{print $0,RT}'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222 |&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444 |&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结合上面一个例子，就很容易理解RS的用法了。&lt;/p&gt;
&lt;p&gt;4，RS也可能是正则表达式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ echo "111 222a333 444b555 666"|awk 'BEGIN{RS="[a-z]+"}{print $1,RS,RT}'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 [a-z]+ a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 [a-z]+ b&lt;/li&gt;
&lt;li&gt;555 [a-z]+&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从例3和例4，我们可以发现一点，'''当RT是利用RS匹配出来的内容。如果RS是某个固定的值时，RT就是RS的内容'''。&lt;/p&gt;
&lt;p&gt;5，RS为空时&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ cat -n test2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1  111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;2&lt;/li&gt;
&lt;li&gt;3  333 444&lt;/li&gt;
&lt;li&gt;4  333 444&lt;/li&gt;
&lt;li&gt;5&lt;/li&gt;
&lt;li&gt;6&lt;/li&gt;
&lt;li&gt;7  555 666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{RS=""}{print $0}' test2&lt;/li&gt;
&lt;li&gt;111 222&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{RS="";}{print "&amp;lt;",$0,"&amp;gt;"}' test2  /&lt;em&gt; //这个例子看着比较明显 &lt;/em&gt;/&lt;/li&gt;
&lt;li&gt;&amp;lt; 111 222 &amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt; 333 444     /&lt;em&gt; //这一行和下面一行，是一行 &lt;/em&gt;/&lt;/li&gt;
&lt;li&gt;333 444 &amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt; 555 666 &amp;gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从这个例子，'''可以看出当RS为空时，awk会自动以多行来做为分割符'''。&lt;/p&gt;
&lt;p&gt;6，ORS记录输出分符符，默认值是\n&lt;/p&gt;
&lt;p&gt;'''把ORS理解成RS反过程，这样更容易记忆和理解'''，看下面的例子。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ awk 'BEGIN{ORS="\n"}{print $0}' test1  /&lt;em&gt; //awk '{print $0}' test1二者是一样的 &lt;/em&gt;/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{ORS="|"}{print $0}' test1&lt;/li&gt;
&lt;li&gt;111 222|333 444|555 666|&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;'''二，FS与OFS'''&lt;/p&gt;
&lt;p&gt;1，FS指定列分割符&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ echo "111|222|333"|awk '{print $1}'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111|222|333&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ echo "111|222|333"|awk 'BEGIN{FS="|"}{print $1}'&lt;/li&gt;
&lt;li&gt;111&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2，FS也可以用正则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ echo "111||222|333"|awk 'BEGIN{FS="[|]+"}{print $1}'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3，FS为空的时候&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ echo "111|222|333"|awk 'BEGIN{FS=""}{NF++;print $0}'&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 1 1 | 2 2 2 | 3 3 3&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;'''当FS为空的时候，awk会把一行中的每个字符，当成一列来处理'''。&lt;/p&gt;
&lt;p&gt;4，RS被设定成非\n时，\n会成FS分割符中的一个&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ cat test1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{RS="444";}{print $2,$3}' test1&lt;/li&gt;
&lt;li&gt;222 333&lt;/li&gt;
&lt;li&gt;666&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;'''222和333之间是有一个\n的，当RS设定成444后，222和333被认定成同一行的二列了，其实按常规思想是二行的一列才对'''。&lt;/p&gt;
&lt;p&gt;5，OFS列输出分隔符&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ awk 'BEGIN{OFS="|";}{print $1,$2}' test1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111|222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333|444&lt;/li&gt;
&lt;li&gt;555|666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{OFS="|";}{print $1 OFS $2}' test1&lt;/li&gt;
&lt;li&gt;111|222&lt;/li&gt;
&lt;li&gt;333|444&lt;/li&gt;
&lt;li&gt;555|666&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;'''test1只有二列，如果100列，都写出来太麻烦了吧。'''&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[zhangy@localhost test]$ awk 'BEGIN{OFS="|";}{print $0}' test1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;111 222&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;333 444&lt;/li&gt;
&lt;li&gt;555 666&lt;/li&gt;
&lt;li&gt;[zhangy@localhost test]$ awk 'BEGIN{OFS="|";}{NF=NF;print $0}' test1&lt;/li&gt;
&lt;li&gt;111|222&lt;/li&gt;
&lt;li&gt;333|444&lt;/li&gt;
&lt;li&gt;555|666&lt;/li&gt;
&lt;/ol&gt;</summary></entry><entry><title>章节3 课时 42 讲解proc-sysctl</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-42-jiang-jie-proc-sysctl.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-42-jiang-jie-proc-sysctl.html</id><summary type="html">&lt;p&gt;proc 目录,是内存中的数值,没有来源，只是入口，到内存结构中，
proc目录下只是一个接口，不可更改，以文件形式存在，&lt;/p&gt;
&lt;p&gt;mount -t proc　none /aaa&lt;/p&gt;
&lt;p&gt;/proc/sys 下文件多数可更改，少数不能改
更改之后马上第一次，但下次启动无效（因为更改的是内存的值），这里只提供入口方法&lt;/p&gt;
&lt;h1&gt;echo 1 &amp;gt; icmp_echo_ignore_all　//使机器不可ping&lt;/h1&gt;
&lt;h1&gt;sysctl -w net.ipv4.icmp_echo_ignore_all=1 //功能同上&lt;/h1&gt;
&lt;h1&gt;cat /proc/sys/net/ipv4/net.ipv4.icmp_echo_ignore_all&lt;/h1&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;h1&gt;vi /etc/sysctl.conf&lt;/h1&gt;
&lt;p&gt;net.ipv4.icmp_echo_ignore_all=1&lt;/p&gt;
&lt;h1&gt;sysctl -p //把sysctl.conf中的重写一遍到proc/sys&lt;/h1&gt;
&lt;h1&gt;sysctl -a //把所有可更改的内核参数显示出来&lt;/h1&gt;
&lt;p&gt;ip_forward //数据包转发&lt;/p&gt;
&lt;h1&gt;sysctl -p -f /tmp/a.sysctl //把a.sysctl刷到内核&lt;/h1&gt;
&lt;p&gt;常用参数
 * file-max 打开最大数量文件参数
 * shm 共享内存　sysctl-a |grep shm
 * syn 防止洪水攻击设置
 * icmp ,broadcasts 广播包
   ping 192.168.0.0 -b 
 * cat /proc/meminfo 查看内存
   free 命令
 * vmstat 机器慢时，查看原因
   (vmsat 1 10 间隔一秒做１０次，系统状态显示出来)
   si so(swap in out)　如果占用率高，内存不足，频繁使用swap
   bi bo block设备读出与入，free 内存占用，cpu用户进程占用cpu
   us 用户空间进程
   sy 占用高，可能网络受攻击
   id 剩余cpu
   wa IO wait ，cpu等待硬盘寻道完成找到数据
 * top &amp;lt;,&amp;gt;上现翻页
 * ps aux
   a 显示所有终端上的程序
   u 显示项目更多
   x 后面守护进程全部显示
     带方括号的，内核线程
 * ps pstree top,都是查/proc下的进程，数字文件夹为内核进程id 
 * df 查看磁盘使用 
 * hostname 也是设置在内核中(/proc)
   hostname abc 更改hostname
   vi /etc/sysconfig/network //永久更改
 * uname -a 
   32bit pae内核支持大内存不好，
   4ＧＢ支持大于于 安装 kernel-PAE内核（软件内存管理）
   大内存安装x86_64 硬件支持大内存，支持比３２位好
 * uptime 负载（top中也可看到）
   1,5,15分钟等待执行任务的个数
   数字不应该多于cpu个数
 * swapon 打开swap
   swapon -s 可以看所有swap空间使用情况
 * pmap 查看内存情况
   pmap -p 1 调用了哪些库，占用内存情况
 * du -s /etc 看一个目录多大
   du -sh /etc ／／h以Ｍ,Ｇ,Ｋ方式显示
 * fdisk -l
 * iostat 1 10 //要安装sysstat这个包，查看每个硬盘io情况&lt;br /&gt;
 * cat /proc/bus/pci/devices 查看所有的ＰＣＩ设备
   lspic 同上
 * lsusb 查看现在有哪些ＵＳＢ设备连接，都是去/proc找相应文件
 * dmidecode 查看BIOS返回的信息（硬件版本号等）
 * x86info 查看cpu标准特性,比如指令集的支持等&lt;/p&gt;</summary></entry><entry><title>章节3 课时 43 讲解modprobe.conf</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-43-jiang-jie-modprobeconf.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-43-jiang-jie-modprobeconf.html</id><summary type="html">&lt;p&gt;内核模块加载方法多种
  1. kernel kernel.org 下载内核源码make menuconfig
     demsg | more
  1. initrd mkinitrd 制作驱动映象，（启动相关驱动放在initrd或者kernel中）
  1. /etc/rc.d/rc.sysinit 驱动的80-90%在这里配置
  1. /etc/modprobe.conf 放和启动无关的驱动，生产驱动，网卡驱动
     grep modprobe /etc/rc.d/rc.sysinit&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;depmod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;bond&lt;/span&gt; &lt;span class="err"&gt;查找内核模块&lt;/span&gt; &lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;depmond&lt;/span&gt; &lt;span class="err"&gt;加载所有内核模块）&lt;/span&gt;

 &lt;span class="err"&gt;网卡多链路，&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;块网卡当一块用&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;modprobe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
 &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;bond0&lt;/span&gt; &lt;span class="n"&gt;bonding&lt;/span&gt; &lt;span class="err"&gt;加载&lt;/span&gt;&lt;span class="n"&gt;bonding&lt;/span&gt;&lt;span class="err"&gt;模块，别名&lt;/span&gt;&lt;span class="n"&gt;bond0&lt;/span&gt;
 &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="n"&gt;bond0&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;负载均衡模式&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;高可用方式&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="err"&gt;加载某个模块，时设置参数&lt;/span&gt;
 &lt;span class="n"&gt;ifenslave&lt;/span&gt; &lt;span class="n"&gt;bond0&lt;/span&gt; &lt;span class="n"&gt;eth1&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt; &lt;span class="err"&gt;执行命令才生效，把它放在&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;
 &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="err"&gt;设置&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tui&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="err"&gt;或者&lt;/span&gt;&lt;span class="n"&gt;netocnfig&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;bond0&lt;/span&gt;

 &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="err"&gt;交换机要支持多链路&lt;/span&gt;

 &lt;span class="n"&gt;hba&lt;/span&gt;&lt;span class="err"&gt;光纤卡也可以&lt;/span&gt;&lt;span class="n"&gt;bond&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;实现负载均衡&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>章节3 课时 44 讲解mod-tools</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-44-jiang-jie-mod-tools.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-44-jiang-jie-mod-tools.html</id><summary type="html">&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;rpm -qf /sbin/lsmod&lt;/h1&gt;
&lt;p&gt;module-init-tools-3.3-0.pre3.1.60.el5&lt;/p&gt;
&lt;h1&gt;rpm -qfl /sbin/lsmod //l 显示该包中的所有文件&lt;/h1&gt;
&lt;p&gt;lsmod 显示所有模块
加载内核模块
modprobe usb-storage 
insmod 加载不上就报错
lsmod |grep fat&lt;/p&gt;
&lt;p&gt;modprobe  vfat 加载vfat,同时加载fat ,vfat 依赖fat
modprobe -r vfat 卸载vfat,fat&lt;/p&gt;
&lt;p&gt;insmod /lib/modules/2.6.18-194.el5/kernel/fs/vfat/vfat.ko  出错&lt;/p&gt;
&lt;p&gt;insmod /lib/modules/2.6.18-194.el5/kernel/fs/fat/fat.ko
insmod /lib/modules/2.6.18-194.el5/kernel/fs/vfat/vfat.ko 成功&lt;/p&gt;
&lt;p&gt;rmmod vfat 卸载
rmmod fat &lt;/p&gt;
&lt;p&gt;depmod -a 把所有系统中的所有内核版本，内核模块分别注册在各自版本内核模块中
depmod 2.6.18-194.el5 把内核2.6.18-194.el5的模块全部注册&lt;/p&gt;
&lt;p&gt;modinfo 查看模块信息&lt;/p&gt;
&lt;p&gt;如果由厂商提供设备的驱动模块（不在内核中）
cp xxx /lib/modules/2.6.18-194.el5/kernel/... 
modprobe xxx&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;insmod /tmp/abc.ko &lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 45 讲解devices-file-dd</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-45-jiang-jie-devices-file-dd.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-45-jiang-jie-devices-file-dd.html</id><summary type="html">&lt;p&gt;{{{
一切皆文件&lt;/p&gt;
&lt;p&gt;/proc/xxx 
／&lt;/p&gt;
&lt;p&gt;ls -l 时第一字节
b block型设备文件
c 字符型设备文件
s 网络类型文件
p 管道类型文件
d 目录
- 普通文件&lt;/p&gt;
&lt;p&gt;root@x201i:/dev# ls -l /dev/sda /dev/tty1
brw-rw---T 1 root disk 8, 0 Aug 27 08:48 /dev/sda 主设备号8，辅助设备号0 
crw-rw 1 root tty  4, 1 Aug 27 08:48 /dev/tty1&lt;/p&gt;
&lt;p&gt;cat /dev/sda 时
kernel 去找文件 /proc/devices -&amp;gt;找block类型主设备号8
modules(driver) sd 对应sd_mod.ko模块
控制权交给模块sd_mod,  辅助设备号0 ,找0标号设备
然后输出&lt;/p&gt;
&lt;p&gt;monod /opt/myhd b 8 0 //创建了和/sda一样的设备文件
cat /opt/myhd //输出和cat /dev/sda一样&lt;/p&gt;
&lt;p&gt;mknod /opt/mytty c 4 1 和/dev/tty1一样的设备文件
＊ root创建文件权限644，如果创建了文件，其它用户可以访问，其它用户dd到一个镜像，在其它机器mount后，可以访问没有权限访问的文件。&lt;/p&gt;
&lt;p&gt;mknod /opt/ppp p 管道&lt;/p&gt;
&lt;p&gt;vi kernel|source/Documention/devices.txt内核源码 ，有设备号约写&lt;/p&gt;
&lt;p&gt;start_udev(udev) 搜索所有内核模块,在/dev目录下重建所有设备文件&lt;/p&gt;
&lt;p&gt;dd if=/dev/sda of=/dev/sdb bs=1024  count=xxx //bs块大小,count块数
dd if=/dev/zero of=/dev/sda2 bs=1M //把分区中数据清0,数据无法恢复&lt;/p&gt;
&lt;p&gt;cat /dev/sda &amp;gt; /dev/null 丢弃数据，重定向到/dev/null
tar cf /tmp/a.tar /etc/passwd &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 正确错误输出都到/dev/null
tar cf /tmp/a.tar /etc/passwd &amp;amp;&amp;gt;/dev/null 同上&lt;/p&gt;
&lt;p&gt;常见设备
tty1 c 4 1
tty2 c 4 3
tty0 c 4 0 //当前控制台
hda b 3 0 //硬盘设备号64个，最多可创建63个分区，再多无法区分
hdb b 3 64 
}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 46 讲解network-fconfig-ip-route-config</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-46-jiang-jie-network-fconfig-ip-route-config.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-46-jiang-jie-network-fconfig-ip-route-config.html</id><summary type="html">&lt;p&gt;{{{
ifconfig 看不到没有设置IP的网卡
ifconfig eth1 192.168.0.11
ifconfig eth1 down
ifconfig eth1 up&lt;/p&gt;
&lt;p&gt;ip ad sh = ip address show 命令显示IP地址，功能比ifconfig 强大&lt;/p&gt;
&lt;p&gt;ip ad help 帮助
ip ad add 192.168.1.254 dev eth1 添加一个IP ，ifconfig看不到
{{{
root@x201i:/tmp# ip help
Usage: ip [ OPTIONS ] OBJECT { COMMAND | help }
       ip [ -force ] -batch filename
where  OBJECT := { link | addr | addrlabel | route | rule | neigh | ntable | tunnel | tuntap | maddr | mroute | mrule | monitor | xfrm | netns | l2tp }
       OPTIONS := { -V[ersion] | -s[tatistics] | -d[etails] | -r[esolve] | -f[amily] { inet | inet6 | ipx | dnet | link } | -l[oops] { maximum-addr-flush-attempts } | -o[neline] | -t[imestamp] | -b[atch] [filename] | -rc[vbuf] [size]
root@x201i:/tmp# ip link help
}}}
ip ifconfig 命令重启后，丢弃。解决方法添加到rc.local或者创建/etc/sysconfig/network-scripts/ifcfg-ethx 文件。&lt;/p&gt;
&lt;p&gt;策略路由：
  百分之几的流量走路由1，百分之几的流量走路由2 ....&lt;/p&gt;
&lt;p&gt;查看哪个网卡插了网线&lt;br /&gt;
mii-tool -v 有的网卡支持mii-tool,有的不支持
mii-tool -F 强制10/100m，全，半双工任一模式&lt;/p&gt;
&lt;p&gt;/etc/sysconfig/network-scripts/ifcfg-eth0 网卡配置文件
添加IP地址
cp ifcfg-eth0 ifcfg-eth0:1 //后面数据随便
vi ifcfg-eth0:1
DEVICE=eth0:1
IPADDR=192.168.1.12&lt;/p&gt;
&lt;p&gt;BOOTPROTO=static (dhcp) static可以删除IP设置
ONBOOT=yes (no) 系统启动会自动启动接口，
保存文件后
service network restart 生效
system-config-network-tui(gui)
netconfig命令 默认没有安装
netconfig -d eth0:2 192.168.1.23 永久添加
netconfig -d eth0 192.168.1.23 永久更改&lt;/p&gt;
&lt;p&gt;ip ad add 10.0.0.1/8 dev eth0&lt;/p&gt;
&lt;p&gt;chkconfig network on&lt;/p&gt;
&lt;p&gt;init
3完整多用户模式
4没人用
5图型界面&lt;/p&gt;
&lt;p&gt;chkconfig network on
关掉iptables或者-F 清掉iptables
chkconfig iptables off
iptables -F &lt;/p&gt;
&lt;p&gt;vi /etc/resolv.conf 设置dns地址
nameserver 8.8.8.8
nameserver 8.8.4.4
search abc.com //搜索域中主机&lt;/p&gt;
&lt;p&gt;vi /etc/sysconfig/network 设置网关地址
GATEWAY＝
vi /etc/sysconfig/network-scripts/ifcfg-eth0  设置网关
不管设置了几个网关，只有一条生效，另外的是备用的
root@x201i:/tmp# route -n //最上面的生效
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         10.20.57.1      0.0.0.0         UG    0      0        0 wlan1
0.0.0.0         0.0.0.0         0.0.0.0         U     1002   0        0 eth0
10.20.57.0      0.0.0.0         255.255.255.0   U     0      0        0 wlan1
169.254.0.0     0.0.0.0         255.255.0.0     U     0      0        0 eth0
169.254.0.0     0.0.0.0         255.255.0.0     U     1000   0        0 wlan1
192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0&lt;/p&gt;
&lt;p&gt;数据包发送，看走哪个路由，决定由哪个网卡发送。
多个网卡不要设置同一网段IP，不要设置2个默认网关&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路由 
   route add -net 20.0.0.0 netmask 255.255.255.0 gw 192.168.0.200
   当发送数据包给20.0.0.0 子网掩码 255.255.255.0 (20.0.0.1-254)时，把数据包发给192.168.0.200，让它转发
   route del -net 20.0.0.0 netmask 255.255.255.0
   route del default gw 192.168.1.12 删除默认路由
   route del -net 0.0.0.0 netmask 0.0.0.0 gw 10.20.57.1 同上
   route -n 显示路由&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 47 讲解network-command-troubleshooting</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-47-jiang-jie-network-command-troubleshooting.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-47-jiang-jie-network-command-troubleshooting.html</id><summary type="html">&lt;p&gt;{{{
ping -b 10.20.57.0 //ping广播包
traceroute www.sina.com.cn //看哪里不通
mtr www.sina.com //可以看到经过哪些路由，哪个路由的掉包率&lt;/p&gt;
&lt;p&gt;ping www.sina.com.cn
dig www.sina.com.cn
host www.sina.com.cn
nslookup www.sina.com.cn&lt;/p&gt;
&lt;p&gt;nslookup&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;www.sina.com.cn
set q=ns //q=a记录
set q=ns
com ／／查询根
Server:     8.8.4.4
Address:    8.8.4.4#53&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Non-authoritative answer:
com nameserver = j.gtld-servers.net.
com nameserver = l.gtld-servers.net.
com nameserver = c.gtld-servers.net.
com nameserver = b.gtld-servers.net.
com nameserver = d.gtld-servers.net.
com nameserver = g.gtld-servers.net.
com nameserver = f.gtld-servers.net.
com nameserver = e.gtld-servers.net.
com nameserver = h.gtld-servers.net.
com nameserver = a.gtld-servers.net.
com nameserver = i.gtld-servers.net.
com nameserver = k.gtld-servers.net.
com nameserver = m.gtld-servers.net.&lt;/p&gt;
&lt;p&gt;Authoritative answers can be found from:&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;ftp lftp命令比ftp好用&lt;/p&gt;
&lt;p&gt;telnet ip port 测试端口是否打开&lt;/p&gt;
&lt;p&gt;tcpdump port 22 抓包，检测网络&lt;/p&gt;
&lt;p&gt;elinks links 访问对方网站
wget 下载，可以下载整站，可以下载限制层数&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 48 讲解dhclient-nmap</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-48-jiang-jie-dhclient-nmap.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-48-jiang-jie-dhclient-nmap.html</id><summary type="html">&lt;p&gt;{{{
抓包图形界面
ethercal&lt;/p&gt;
&lt;p&gt;文本
tcpdump&lt;/p&gt;
&lt;p&gt;nmap -sS -P0 -o 192.168.0.1
nmap -sS -O -P0 192.168.0.254 -p 1-65535
cat /etc/services  应用程序的默认端口说明
cat /etc/protocols internet协议内容&lt;/p&gt;
&lt;p&gt;dhclient //dhcp 服务器指定&lt;/p&gt;
&lt;p&gt;dhclient -s 192.168.0.1 获取指定服务器指定的IP地址&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 49 讲解autofs-nis-ruser</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-49-jiang-jie-autofs-nis-ruser.html" rel="alternate"></link><updated>2013-08-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-27:zhang-jie-3-ke-shi-49-jiang-jie-autofs-nis-ruser.html</id><summary type="html">&lt;p&gt;{{{
fstab 系统不启动，不能正常运行
root帐号,mount -a &lt;/p&gt;
&lt;p&gt;autofs 
/etc/auto.master /etc/auto.misc&lt;/p&gt;
&lt;p&gt;mount /dev/cdrom /misc/cd&lt;/p&gt;
&lt;p&gt;vi /etc/auto.master
   /misc /etc/auto.misc
vi /etc/auto.misc
cd  -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom //cd自动加载。/misc目录下cd目录（一访问cd目录自动加载光盘),nosuid,nodev控制权限
service autofs restart
chkconfig autofs on&lt;/p&gt;
&lt;p&gt;例子：
linux   -ro,soft,intr ftp.example.org:/pub/linux
removable   -fstype=ext2  :/dev/hdd
boot    -fstype=ext2    :/dev/hda1
floppy  -fstype=auto    :/dev/fd0
floppy  -fstype=ext2    :/dev/fd0
ser1    -ro,soft,intr   192.168.0.1:/var/abc  //intr可以中断方式，soft软方式，ro只读,nfs&lt;/p&gt;
&lt;p&gt;服务器192.168.0.1：
useradd -d /rhome/shrek shrek //添加用户设置主目录/rhome/shrek
vi /etc/exports
 /rhome 192.168.0.0/255.255.255.0(rw,async)
service nfs restart&lt;/p&gt;
&lt;p&gt;另一台服务器 192.168.0.2
vi /etc/auto.master
 /rhome /etc/auto.rhome
vi /etc/auto.rhome
 *  -rw,intr,soft   192.168.0.1:/rhome/&amp;amp;&lt;/p&gt;
&lt;p&gt;service autofs restart
 chkconfig autofs on
登录192.168.0.2时，自动挂载192.168.0.1 机器上的用户主目录&lt;/p&gt;
&lt;p&gt;ls /rhome/shrek
以上配置相当于以下挂载语句
 mount -o intr,soft,rw 192.168.0.1:/rhome/shrek /rhome/shrek&lt;/p&gt;
&lt;p&gt;rpm -ql autfs
 查看文档
 man 5 autfs //查看第五号文档&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/gwan 网页接收与发送的最大字节数设置 here.</title><link href="http://liugehao.github.io/describe-linuxgwan-wang-ye-jie-shou-yu-fa-song-de-zui-da-zi-jie-shu-she-zhi-here.html" rel="alternate"></link><updated>2013-08-26T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-26:describe-linuxgwan-wang-ye-jie-shou-yu-fa-song-de-zui-da-zi-jie-shu-she-zhi-here.html</id><summary type="html">&lt;p&gt;更改MAX_ENTITY_SIZE的值。&lt;/p&gt;
&lt;p&gt;{{{#!highlight c
// ============================================================================
// C servlet example for the G-WAN Web Application Server (http://www.gwan.ch/)
// 
// entity_size.c: how to modify the maximum HTTP entity size accepted by G-WAN
//
//           Many production servers disable entities to avoid abuse. G-WAN so
//           far used a limit slightly larger than 4KiB.
//
//           This example shows how to modify this (server-global) limit from 
//           a servlet but this can also be done in the init() or the main()
//           calls of a connection handler:
//
//           u32 &lt;em&gt;max_entity_size = (int&lt;/em&gt;)get_env(argv, MAX_ENTITY_SIZE);
//           *max_entity_size = 200 * 1024; // new size in bytes (200 KiB)
//
//           You can change the limit at any time (even for the time a given 
//           user is connected) by using filtering in a connection handler.
//           Your servlets will decide what to do with the entity anyway so
//           you can dispose or store on disk or do real-time processing, see
//           the entity.c example.
// ============================================================================&lt;/p&gt;
&lt;h1&gt;include "gwan.h"   // G-WAN exported functions&lt;/h1&gt;
&lt;p&gt;int main(int argc, char &lt;em&gt;argv[])
{
   u32 &lt;/em&gt;old_entity_size = (u32*)get_env(argv, MAX_ENTITY_SIZE);
   u32  new_entity_size = 2 * 1024 * 1024 * 1024; // 2 MiB&lt;/p&gt;
&lt;p&gt;xbuf_xcat(get_reply(argv), 
             "&lt;pre&gt;\n"
             "Old entity size: %llk\n"
             "New entity size: %llk\n" // "New entity size: 2.00 MiB"
             "&lt;/pre&gt;",           &lt;br /&gt;
             *old_entity_size, new_entity_size);&lt;/p&gt;
&lt;p&gt;*old_entity_size = new_entity_size; // raise the limit to 2 MiB&lt;/p&gt;
&lt;p&gt;return 200; // return an HTTP code (200:'OK')
}
// ============================================================================
// End of Source Code
// ============================================================================&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 41 讲解init-chkconfig</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-41-jiang-jie-init-chkconfig.html" rel="alternate"></link><updated>2013-08-26T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-26:zhang-jie-3-ke-shi-41-jiang-jie-init-chkconfig.html</id><summary type="html">&lt;p&gt;ls /sbin/init //初始化程序 ,桌面，图标，输入法加载，...
{{{
/etc/inittab //init主配置文件
  /etc/rc.d/rc.sysinit //首先访问
  /etc/rc.d/rc X
    /etc/rc.d/rcX.d/Sxxxx start(软链接/etc/rc.d/init.d/xxxx)
    /etc/rc.d/rc.local (系统开机运行程序放置位置，profile是bash启动运行程序配置）
  minigetty /dev/tty1-6
     login -&amp;gt; bash
         /etc/profile ~/.bash_profile&lt;/p&gt;
&lt;p&gt;init 5: gdm (图型界面)&lt;/p&gt;
&lt;p&gt;init 运行级别　，init $1 第一个参数如果不写，默认为９，
id:5:initdefault:  //默认进入系统　设置６不停重启　0开机后立即关机&lt;/p&gt;
&lt;p&gt;si::sysinit:/etc/init.d/rcS（rc.sysinit ）　//默认执行
 －》mount -a //用到/etc/fstab 如果此处出错，rc.sysinit出错，检测文件系统
 －》mount -o rw,remount /dev/sda2 /  //加载文件系统，scsi驱动等&lt;/p&gt;
&lt;p&gt;echo -en "\033[0;31m" aa //设成红色
echo -en "\033[0;3４m" Ｂlue Hat　//蓝色&lt;/p&gt;
&lt;p&gt;1:2345:respawn:/sbin/getty 38400 tty1
2:23:respawn:/sbin/getty 38400 tty2
3:23:respawn:/sbin/getty 38400 tty3
4:23:respawn:/sbin/getty 38400 tty4
5:23:respawn:/sbin/getty 38400 tty5
6:23:respawn:/sbin/getty 38400 tty6&lt;/p&gt;
&lt;p&gt;12:23:respawn:/usr/bin/top 一直执行top,如果停止，会重新启动&lt;/p&gt;
&lt;p&gt;respawn 进程被杀掉后会重新启动
x:5:respawn:/etc/X11/prefdm -nodaemon //运行级别５(init 5 )以respawn 方式运行prefdm ，显示图型界面&lt;/p&gt;
&lt;p&gt;init 3 (./rc 3)
/etc/rc.d/rc3.d/S&lt;em&gt; 
如果K开头的脚本开启了，init关闭K开闲脚本，启动Ｓ开关不脚本。
ls /etc/rc.d/rc3.d/&lt;/em&gt;sshd /etc/rc.d/rc5.d/*sshd
/etc/rc.d/rc3.dK25sshd /etc/rc.d/rc5.d/S55sshd&lt;/p&gt;
&lt;p&gt;ls /etc/rc.d/rc3.d/&lt;em&gt;sshd /etc/rc.d/rc5.d/&lt;/em&gt;sshd
/etc/rc.d/rc3.dK25sshd --&amp;gt;../init.d/sshd
/etc/rc.d/rc5.d/S55sshd --&amp;gt;../init.d/sshd
软链接，Ｋ开头，默认关闭，Ｓ开头默认开启&lt;/p&gt;
&lt;p&gt;开启关闭 执行　/etc/rc.d/rc 3 
时运行/etc/rc.d/rc3.d/K开头脚本 stop
/etc/rc.d/rc3.d/S开头脚本 start&lt;/p&gt;
&lt;p&gt;pf::pwoerfail 有ups时停电延时关机，
pr:12345:pwoerkwait　如果来电，停止关机&lt;/p&gt;
&lt;p&gt;更改/etc/inittab 使其生效　init q&lt;/p&gt;
&lt;p&gt;h}}}
chkconfig 更改状态
{{{
/etc/init.d/mysql8
服务启动脚本支持chkconfig 必须有如下２行，虽然是注释&lt;/p&gt;
&lt;h1&gt;chkconfig: - 55 45&lt;/h1&gt;
&lt;h1&gt;description: mysql database server.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;默认关闭　启动顺序５５，关闭顺序４５&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;chkconfig: 35 55 45&lt;/h1&gt;
&lt;p&gt;35是指运行级别为３，５时开启&lt;/p&gt;
&lt;p&gt;chkconfig --add mysql8 //添加到启动列表　会添加软件链接/etc/rc.d/rc3.d/S55mysql8
chkconfig mysql8 off //默认不启动　会添加软件链接/etc/rc.d/rc3.d/L55mysql8
}}}&lt;/p&gt;</summary></entry><entry><title>章节3 课时 39 讲解grub-kernel-root</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-39-jiang-jie-grub-kernel-root.html" rel="alternate"></link><updated>2013-08-25T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-25:zhang-jie-3-ke-shi-39-jiang-jie-grub-kernel-root.html</id><summary type="html">&lt;p&gt;grub&amp;gt;
root (hd0,0)
kernel /vmlinuz-2.6.18-194.el5 ro root=LABEL=/ rhgb quiet
initrd /initrd-2.6.18-194.el5.img&lt;/p&gt;
&lt;p&gt;root (hd0,0) //hda,sda 是设备文件，驱动之后的设备。grub 第一个硬盘hd0,第一个分区0
kernel /vmlinuz-2.6.18-194.el5 此/指hd0,0
kernel vmlinuz-2.6.18-194.el5 root=/dev/sda2 //root=根分区,可以启动不同分区的linux
ro 只读方式，不写ro也是只读&lt;/p&gt;
&lt;p&gt;rhgb 显示图型，隐藏开机输出字符, rhel 专有。可以去掉
quite 内核安静，不显示内核信息　。可以去掉&lt;/p&gt;
&lt;p&gt;mkinitrd 打包驱动模块到initrd...img&lt;/p&gt;
&lt;p&gt;root (hd0,&lt;TAB&gt;) //可以使用tab键查看
kernel /vmli&lt;TAB&gt;
initrd /initrd-&lt;TAB&gt;
boot //输入完成后，boot启动
help
rootnoverify (hd0,3) 启动另一个bootloader(bootloader 有很多种，grub是其中一种)&lt;/p&gt;
&lt;p&gt;{{{
kernel /vmlinuz-2.6.18-194.el5 ro root=LABEL=/ rhgb quiet vga=0x314 selinux=off acpi=off hello
selinux=off(0) 不确定是off ,0
acpi 电源管理
有效参数被内核加载，如果不认识的参数，原封传给init
init 1 ／／init进入单用户模式，不需要输入密码（红旗安全模式4）
init 6 //关机
}}}&lt;/p&gt;
&lt;p&gt;default=0
timeout=5
splashimage=(hd0,0)/grub/splash.xpm.gz //显示开机图片
password --md5 $1$djfksdSFAdskajfd 
//不加md5则为明文密码，它人登录后可见
//如果按c,或e编辑，可进入单用户模式，加上密码后必须输入密码才能进单用户模式&lt;/p&gt;
&lt;p&gt;生成密码命令 grubmd5-crypt&lt;/p&gt;
&lt;p&gt;可以把密码加在title下，输入密码才可以启动系统。&lt;/p&gt;
&lt;p&gt;kernel /vmlinuz-2.6.18-194.el5 ro root=LABEL=/ init=/bin/bash
init=/bin/bash 最简启动，不启动/sbin/init,直接启动bash,省掉其它初始化&lt;/p&gt;</summary></entry><entry><title>章节3 课时 40 讲解initrd-usb-scsi</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-40-jiang-jie-initrd-usb-scsi.html" rel="alternate"></link><updated>2013-08-25T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-25:zhang-jie-3-ke-shi-40-jiang-jie-initrd-usb-scsi.html</id><summary type="html">&lt;p&gt;initrd = init ram disk &lt;/p&gt;
&lt;p&gt;grub 把kernel initrd从硬盘读出，放入内存，把引导交给kernel, 载入驱动initrd&lt;/p&gt;
&lt;p&gt;mkinitrd --with usb_mod&lt;/p&gt;
&lt;p&gt;root@x201i:/lib/modules/3.2.0-4-amd64/kernel/drivers/usb/host#
3种usb2.0驱动uhci ehci ohci&lt;/p&gt;
&lt;p&gt;加载驱动，写入到a.img镜像，内核版本号文件
mkinitrd --with uhci-hck --with usb-storage --with sd_mod --with scsi_mod /boot/a.img 2.6.18-194.el&lt;/p&gt;
&lt;p&gt;更改 /boot/grub/grub.conf
加载a.img 替换原来initrd...img&lt;/p&gt;
&lt;p&gt;initrd..img 是个压缩包，里面有很多文件&lt;/p&gt;
&lt;p&gt;.ko　文件　内核模块&lt;/p&gt;
&lt;p&gt;默认编译内核驱动模块
./configure
make
make install
如果没有make install 脚本　，
cp xxxx.ko /lib/modules/2.6.18...el5(版本号)/kernel/drivers/scsi(如果是scsi驱动)
然后执行　depmod ,扫描所有的内核驱动模块，放在注册文件中
然后可以运行mkinitrd　--with，重新生成内核驱动&lt;/p&gt;</summary></entry><entry><title>章节3 课时 34 screen文本控制台的窗口操作</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-34-screenwen-ben-kong-zhi-tai-de-chuang-kou-cao-zuo.html" rel="alternate"></link><updated>2013-08-23T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-23:zhang-jie-3-ke-shi-34-screenwen-ben-kong-zhi-tai-de-chuang-kou-cao-zuo.html</id><summary type="html">&lt;p&gt;相当于nohup 后台运行，不会因为连接断开而中断运行。但是可以恢复执行状态，切换多个进程。&lt;/p&gt;
&lt;p&gt;screen 命令　　执行运行时间长的命令，以防止网络中断　&lt;/p&gt;
&lt;p&gt;screen bash&lt;/p&gt;
&lt;p&gt;screen 直接打开screen&lt;/p&gt;
&lt;p&gt;pstree |grep screen&lt;/p&gt;
&lt;p&gt;screen -r  恢复到原来的任务&lt;/p&gt;
&lt;p&gt;screen -dr 终止连接退回bash　，但不中止程序运行.&lt;/p&gt;
&lt;p&gt;screen -r pid 多个screen时恢复到指定的screen&lt;/p&gt;
&lt;p&gt;在screen中，CTRL+a ，开一个新的screen窗体。&lt;/p&gt;
&lt;p&gt;screen -x 恢复到最近断开的screen&lt;/p&gt;
&lt;p&gt;pstree | grep -A2 -B2 screen 查看screen以及上下２行&lt;/p&gt;
&lt;p&gt;在一个screen中，CTRL+a 按下n，在多个窗口中切换&lt;/p&gt;
&lt;p&gt;在screen中，CTRL+a　c 打开新窗口&lt;/p&gt;
&lt;p&gt;screen CTRL +a d 退出screen 用-r 恢复&lt;/p&gt;
&lt;p&gt;在screen中bash中exit后，如此此screen中没有了窗口，　-r 连接不上，可以杀掉此screen进程&lt;/p&gt;
&lt;p&gt;screen CTRL+a \ 后　屏幕没反应，过一会回到最初bash （杀掉了自己）　&lt;/p&gt;</summary></entry><entry><title>章节3 课时 35 讲解syslog</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-35-jiang-jie-syslog.html" rel="alternate"></link><updated>2013-08-23T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-23:zhang-jie-3-ke-shi-35-jiang-jie-syslog.html</id><summary type="html">&lt;p&gt;tail -f /var/log/messages messages是程序首选信息输出。监视messages, 服务有问题，服务启动有问题　，首先看messages&lt;/p&gt;
&lt;p&gt;相似的，如果邮件出不去　，查看地邮件日志 /var/log/maillog&lt;/p&gt;
&lt;p&gt;apache /var/log/httpd/error_log &lt;/p&gt;
&lt;p&gt;syslog 有２个组件 klogd syslogd&lt;/p&gt;
&lt;p&gt;klogd kernel日志,kernel 直接写日志　通过dmesg看日志缓存
{{{
dmesg　当前缓存
cat /var/log/dmesg 缓存写到文件中
}}}
syslogd &lt;/p&gt;
&lt;p&gt;klogd man 2 syslog&lt;/p&gt;
&lt;p&gt;syslogd 配置文件 /etc/syslog.conf&lt;/p&gt;
&lt;p&gt;syslogd man 3 syslog&lt;/p&gt;
&lt;p&gt;syslogd,klogd 共同配置文件　/etc/sysconfig/syslog&lt;/p&gt;
&lt;p&gt;syslog库，syslogd服务
/etc/syslog.conf&lt;/p&gt;
&lt;p&gt;authpriv.*   /var/log/secure&lt;/p&gt;
&lt;p&gt;内容.级别　　写到哪个文件&lt;/p&gt;
&lt;p&gt;*.info;mail.none;authpriv.none;cron.none /var/log/messages
所有的info及以上级别日志，除了mail.none... 与到messages&lt;/p&gt;
&lt;p&gt;'''日志写入：'''
{{{
root@x201i:/home/l# logger " &lt;code&gt;date&lt;/code&gt; backup finish ....."
root@x201i:/home/l# tail -1 /var/log/messages
Aug 23 11:11:57 x201i l:  Fri Aug 23 11:11:57 CST 2013 backup finish .....
}}}&lt;/p&gt;
&lt;p&gt;'''可以远程日志'''&lt;/p&gt;
&lt;p&gt;'''不要把大量的日志，写入到日志服务器（或者应用程序日志）
紧急、报警日志写到日志服务器'''
syslogd -r &lt;/p&gt;
&lt;p&gt;日志服务器 192.168.0.1 
{{{
vi /etc/sysconfig/syslog
SYSLOGD_OPTIONS="-m 0 -r"  #-m 0 不进行mark
service syslogd restart
}}}&lt;/p&gt;
&lt;p&gt;服务器１　/etc/syslog.conf
*.alert @192.168.0.1
logwatch
netstat --antup&lt;/p&gt;</summary></entry><entry><title>章节3 课时 36 讲解cron-anacron</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-36-jiang-jie-cron-anacron.html" rel="alternate"></link><updated>2013-08-23T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-23:zhang-jie-3-ke-shi-36-jiang-jie-cron-anacron.html</id><summary type="html">&lt;p&gt;atd 简单的，轻量级，可控性小
chkconfig adt off 关闭
//只执行一次的任务，使用率不高&lt;/p&gt;
&lt;h1&gt;at 12:00&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;echo '12' 
CTRL +d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;crond 
 * crond
  cron 
  i. 用户执行 crontab -e
    /var/spool/cron 保存用户cron配置,文件名为
    crontab -u shrek -e //root 可更改其它用户cron
    crontab -e 
    前五个位置放时间：分钟　小时　日　月　周　命令
    1 5 * * * dump -3uf /tmp/boot.dump /boot //每天５点１分执行备份,或者使用tar。'''dump可以识别分区　dump -3uf /tmp/boot.dump /dev/boot. dump 可以增量备份'''
    0uf 完整备份文件　3uf 增量备份　4uf 对３的增量　
    每天都做3uf 差量备份，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;0u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;1u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;2u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;3u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;4u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="err"&gt;每一天的差量备份，恢复时间增加（按顺序一个一个恢复）。&lt;/span&gt;

&lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;dump&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0u&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+%&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt; 
&lt;span class="err"&gt;每周日备份一次完整的&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="err"&gt;到磁盘，最后每个月保留一个备份文件&lt;/span&gt;

&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="err"&gt;*/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;lover&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;i miss you again `date`&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;周一到周五，每隔２小时发一封邮件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;i. 系统执行 /etc/cron.d/&lt;em&gt;
    /etc/cron. 下保存系统cron
    /etc/crontab 配置文件
    {{{
    01 *    * &lt;/em&gt; *   root    run-parts /etc/cron.hourly
    #root 以root用户执行，run-parts 执行/etc/cron.hourly目录下所有文件
    #要考虑权限问题，可执行，用户环境变量等&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="n"&gt;root&lt;/span&gt;    &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anacron&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;daily&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;47&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="n"&gt;root&lt;/span&gt;    &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anacron&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekly&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;52&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="n"&gt;root&lt;/span&gt;    &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anacron&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthly&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="n"&gt;sysstat&lt;/span&gt; &lt;span class="err"&gt;包，安装后可用每１０分钟执行　可用&lt;/span&gt;&lt;span class="n"&gt;sar&lt;/span&gt;&lt;span class="err"&gt;查看系统状态&lt;/span&gt;
&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="err"&gt;　&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;//每几个小时，或者每几分钟执行&lt;/span&gt;
&lt;span class="c1"&gt;// 该文件权限一定要 -rw---　600,非周期执行&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spamassassin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tee&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="c1"&gt;//每天４点１０分执行脚本&lt;/span&gt;

&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;daily&lt;/span&gt; &lt;span class="err"&gt;用得最多的&lt;/span&gt;
&lt;span class="n"&gt;tmpwatch&lt;/span&gt; &lt;span class="err"&gt;删除&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="err"&gt;目录下１０天没用的&lt;/span&gt;
&lt;span class="n"&gt;logrotate&lt;/span&gt; &lt;span class="err"&gt;截断日志&lt;/span&gt;
&lt;span class="n"&gt;mlocate&lt;/span&gt;&lt;span class="err"&gt;　执行&lt;/span&gt;&lt;span class="n"&gt;updatedb&lt;/span&gt;

&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="err"&gt;查找可执行文件&lt;/span&gt;
&lt;span class="n"&gt;locate&lt;/span&gt; &lt;span class="n"&gt;shadow&lt;/span&gt; &lt;span class="err"&gt;查找所有文件　，正则表达式&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="err"&gt;$&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;updatedb&lt;/span&gt; &lt;span class="err"&gt;把所有文件查找一遍存储文件&lt;/span&gt;

   &lt;span class="c1"&gt;//system&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;anacrond
  会把以前没有执行的计划补回来,比如每点４点执行的程序，因为每天晚上关机，所以开机会补&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>章节3 课时 37 讲解cups-setenforcing</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-37-jiang-jie-cups-setenforcing.html" rel="alternate"></link><updated>2013-08-23T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-23:zhang-jie-3-ke-shi-37-jiang-jie-cups-setenforcing.html</id><summary type="html">&lt;p&gt;cups 通用unix打印系统，响应本机或者外界打印&lt;/p&gt;
&lt;p&gt;chkconfig --list cups 查看是否运行服务&lt;/p&gt;
&lt;p&gt;chkconfig --list |grep cups &lt;/p&gt;
&lt;p&gt;lpd 老式打印系统，&lt;/p&gt;
&lt;p&gt;cups 有收费版本，为了兼容lpd，有服务cpus-ltd&lt;/p&gt;
&lt;p&gt;system-config-printer 配置打印机&lt;/p&gt;
&lt;p&gt;system-config--....
{{{
seLinux &lt;/p&gt;
&lt;h1&gt;getenforce&lt;/h1&gt;
&lt;p&gt;Permissive&lt;/p&gt;
&lt;h1&gt;setenforce 0 //半闭selinux&lt;/h1&gt;
&lt;h1&gt;getenforce&lt;/h1&gt;
&lt;p&gt;Enforcing&lt;/p&gt;
&lt;p&gt;//永久关闭selinux
vi /etc/selinux/config
SELINUX=disabled&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;LANG= 回车，语言改成默认英文&lt;/p&gt;</summary></entry><entry><title>章节3 课时 38 讲解grub-grub-troubleshooting</title><link href="http://liugehao.github.io/zhang-jie-3-ke-shi-38-jiang-jie-grub-grub-troubleshooting.html" rel="alternate"></link><updated>2013-08-23T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-23:zhang-jie-3-ke-shi-38-jiang-jie-grub-grub-troubleshooting.html</id><summary type="html">&lt;p&gt;开机过程
BIOS--&amp;gt;Bootloader --&amp;gt; Kernel--&amp;gt; init --&amp;gt; service --&amp;gt; login --&amp;gt; bash&lt;/p&gt;
&lt;p&gt;智能手机
Bootloader(bios+bootloader)-&amp;gt;Kernel-&amp;gt;&lt;/p&gt;
&lt;p&gt;window xp bootloader ntldr
boot.ini 引导多个windows&lt;/p&gt;
&lt;p&gt;sector 512byte
 446 MBR
  64 DPT
   2 55AA&lt;/p&gt;
&lt;p&gt;/boot/grub/stage1 512byte　//出问题，硬盘不可引导
 /boot/grub/stage1_5_ext3 　　//出问题，屏幕出到“GRUB ”无反应，或者屏幕不停刷gurb
 上面２个已经写入硬盘最前面
 /boot/grub/stage2 写在分区里，不可删除，如果删除系统无法启动&lt;/p&gt;
&lt;p&gt;／boot/grub/grub.conf 如果手工编译grub的话文件名为：1stmenu&lt;/p&gt;
&lt;p&gt;''' 修复'''
stage1 stage1_5出问题
grub-install /dev/sda&lt;/p&gt;
&lt;p&gt;stage5出问题　，光盘启动　linux rescue
chroot /mnt/sysimage //默认要分区挂载位置
rpm -ivh grub....&lt;/p&gt;
&lt;p&gt;grub.conf(1stmenu)找不到,
grub&amp;gt;  //手动方式引导&lt;/p&gt;</summary></entry><entry><title>Describe linux/gwan g-wan keyvalue store zlib base64 here.</title><link href="http://liugehao.github.io/describe-linuxgwan-g-wan-keyvalue-store-zlib-base64-here.html" rel="alternate"></link><updated>2013-08-22T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-22:describe-linuxgwan-g-wan-keyvalue-store-zlib-base64-here.html</id><summary type="html">&lt;p&gt;requests post数据时，进行了escape, 所以在http服务器端要unescape才是原数据。&lt;/p&gt;
&lt;p&gt;file kv4.c
{{{#!highlight c&lt;/p&gt;
&lt;h1&gt;include "gwan.h" // G-WAN exported functions&lt;/h1&gt;
&lt;h1&gt;include &lt;malloc.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;string.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;stdlib.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;base64.c&gt;&lt;/h1&gt;
&lt;p&gt;typedef struct record_s // this is a user-defined 'record' structure
{
    char *content; 
    u64 tm;
} record_t;&lt;/p&gt;
&lt;p&gt;int main(int argc, char &lt;em&gt;argv[])
{
    xbuf_t &lt;/em&gt;reply = get_reply(argv);
    char &lt;em&gt;act="", &lt;/em&gt;content="", *tm="";&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;get_arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;act=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;get_arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;content=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;get_arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txm=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;tm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;






&lt;span class="nx"&gt;kv_t&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;US_VHOST_DATA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//persistent ptr&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;forum_store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//convenience pointer (var-&amp;gt;m instead of (*var)-&amp;gt;m)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;kv_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="n"&gt;forum_store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;



&lt;span class="nx"&gt;u64&lt;/span&gt; &lt;span class="n"&gt;txm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;act&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;xbuf_xcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;%s %s %llu&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;txm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;kv_item&lt;/span&gt; &lt;span class="nb"&gt;item&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;record_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//printf(&amp;quot;before unescape:%d\n&amp;quot;,strlen(content));&lt;/span&gt;
    &lt;span class="nx"&gt;unescape_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//printf(&amp;quot;unescaped:%d\n&amp;quot;,strlen(content));&lt;/span&gt;
    &lt;span class="c1"&gt;//char tmp[strlen(content)];&lt;/span&gt;
    &lt;span class="c1"&gt;//printf(&amp;quot;content:%s\n&amp;quot;, content);&lt;/span&gt;

    &lt;span class="c1"&gt;//base64_decode(tmp, content, strlen(content));&lt;/span&gt;

    &lt;span class="c1"&gt;//printf(&amp;quot;content(tmp):%s\n&amp;quot;, tmp);&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record_t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record_t&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;strdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//content ,tmp&lt;/span&gt;
    &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;tm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;txm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//printf(&amp;quot;bin len:%d\n&amp;quot;, strlen(record-&amp;gt;content));&lt;/span&gt;
    &lt;span class="n"&gt;item.key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;tm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;item.klen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//sizeof(str) - 1; // faster&lt;/span&gt;
    &lt;span class="n"&gt;item.val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;item.flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;kv_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;forum_store&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// add an entry to the name_dat Store index&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;act&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="nx"&gt;record_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;record_t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;kv_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;forum_store&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;txm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u64&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;xbuf_xcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;record&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;content&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;//xbuf_xcat(reply, &amp;quot;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;Count&amp;lt;/b&amp;gt;: %d key(s) in KV store&amp;lt;br&amp;gt;&amp;quot;,&lt;/span&gt;
&lt;span class="c1"&gt;//            forum_store-&amp;gt;nbr_items);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;return 200; // return an HTTP code (200:'OK')&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}}}
python file:
{{{#!highlight python&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;h1&gt;-&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/h1&gt;
&lt;p&gt;import MySQLdb, zlib, requests, os, base64&lt;/p&gt;
&lt;p&gt;conn = MySQLdb.connect(host='127.0.0.1', user='root', passwd='liuyou', db='base')
cur1 =conn.cursor()&lt;/p&gt;
&lt;h1&gt;cur1.execute("select distinct tm from smi limit 1000000;")&lt;/h1&gt;
&lt;p&gt;tmp = "".join(os.popen('mysql -h localhost -uroot -pliuyou base --execute="select * from smi limit 10000,10"', 'r').readlines()[1:])
tmp = tmp.replace("\t0\t","\t\t").replace("\t0\t","\t\t").replace("\t0.0000\t","\t\t").replace("0000-00-00 00:00:00","")
tmp = zlib.compress(tmp, 9)
"""
print "\n%s\n" % tmp
tmp1 = zlib.compress(tmp, 9)
print "\n%s\n" % tmp1
tmp = base64.b64encode(tmp1)
print "\n%s\n" % tmp
print zlib.decompress(base64.b64decode(tmp))&lt;/p&gt;
&lt;h1&gt;tmp = zlib.compress(tmp, 9)&lt;/h1&gt;
&lt;h1&gt;tmp = zlib.compress(str(os.popen('mysql -h localhost -uroot -pliuyou base --execute="select * from smi limit 10000,10"', 'r').readlines()[1:]))&lt;/h1&gt;
&lt;p&gt;"""&lt;/p&gt;
&lt;h1&gt;while 1:&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#row = cur1.fetchone()&lt;/span&gt;
&lt;span class="c"&gt;#if row is None:&lt;/span&gt;
&lt;span class="c"&gt;#    break&lt;/span&gt;
&lt;span class="c"&gt;#print row[0]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;for i in xrange(1,100000):
    print i,len(tmp)
    requests.post("http://127.0.0.1:8080/?kv4.c&amp;amp;act=a&amp;amp;txm=%d" % i, data={
        "content": tmp
    },timeout=3 , verify=False)
}}}&lt;/p&gt;
&lt;p&gt;base64.c
{{{#!highlight c&lt;/p&gt;
&lt;h1&gt;include &lt;string.h&gt;&lt;/h1&gt;
&lt;p&gt;char b64string[] =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";&lt;/p&gt;
&lt;p&gt;long base64_encode (to, from, len)
    char &lt;em&gt;to, &lt;/em&gt;from;
    unsigned int len;
{
    char &lt;em&gt;fromp = from;
    char &lt;/em&gt;top = to;
    unsigned char cbyte;
    unsigned char obyte;
    char end[3];&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0011 0000 */&lt;/span&gt;

    &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;          &lt;span class="cm"&gt;/* 0000 1111 */&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x3C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0011 1100 */&lt;/span&gt;

    &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;          &lt;span class="cm"&gt;/* 0000 0011 */&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x3F&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;&lt;span class="cm"&gt;/* 0011 1111 */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0011 0000 */&lt;/span&gt;

    &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0x3C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0011 1100 */&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;/&lt;em&gt; badchar(): check if c is decent; puts either the &lt;/em&gt;/
/&lt;em&gt; location of c or null into p.                  &lt;/em&gt;/&lt;/p&gt;
&lt;h1&gt;define badchar(c,p) (!(p = memchr(b64string, c, 64)))&lt;/h1&gt;
&lt;p&gt;long base64_decode (to, from, len)
    char &lt;em&gt;to, &lt;/em&gt;from;
    unsigned int len;
{
    char &lt;em&gt;fromp = from;
    char &lt;/em&gt;top = to;
    char *p;
    unsigned char cbyte;
    unsigned char obyte;
    int padding = 0;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;badchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* 1111 1100 */&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;badchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0000 0011 */&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* 1111 0000 */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;badchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="cm"&gt;/* 0000 1111 */&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* 1100 0000 */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;fromp&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;badchar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cbyte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;cbyte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b64string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;obyte&lt;/span&gt; &lt;span class="o"&gt;|=&lt;/span&gt; &lt;span class="n"&gt;cbyte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="cm"&gt;/* 0011 1111 */&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obyte&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/rhce视频/31-33 终端 sudo autologin respawn terminal here.</title><link href="http://liugehao.github.io/describe-linuxrhceshi-pin-31-33-zhong-duan-sudo-autologin-respawn-terminal-here.html" rel="alternate"></link><updated>2013-08-21T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-21:describe-linuxrhceshi-pin-31-33-zhong-duan-sudo-autologin-respawn-terminal-here.html</id><summary type="html">&lt;p&gt;== 31 tty pts ttys0 terminal ==&lt;/p&gt;
&lt;p&gt;tty1 tty2 tty3 ...虚拟控制台&lt;/p&gt;
&lt;p&gt;/dev/ttyS0 com口&lt;/p&gt;
&lt;p&gt;pstree 命令查看进程树时，所有进程的父进程为init(/etc/inittab)&lt;/p&gt;
&lt;p&gt;运行级别为2345时&lt;/p&gt;
&lt;p&gt;respawn 反复打开子进程 ,如果它监视的子进程被关闭，会自动启动&lt;/p&gt;
&lt;p&gt;运行/sbin/mingetty 打开虚拟控制台&lt;/p&gt;
&lt;h1&gt;/sbin/mingetty tty12 //执行此命令后，准备好tty12控制台&lt;/h1&gt;
&lt;p&gt;/sbin/agetty ttyS0 //com&lt;/p&gt;
&lt;p&gt;xwindows下终端，伪终端 pts/0&lt;/p&gt;
&lt;p&gt;/dev/pts/ 多伪终端一个登录，多一个文件&lt;/p&gt;
&lt;p&gt;skill -9 pts/2 //杀掉进程及子进程&lt;/p&gt;
&lt;p&gt;== 32 讲解autologin-respawn　==
x:5:respawnn:/etc/X11/prefdm --nodaemon #gdm kdm xdm
 图形界面&lt;/p&gt;
&lt;p&gt;6a:2345:respawn:/sbin/mingetty tty10 --autologin shrek 
 自动登录,F10控制台, exit后又重新登录&lt;/p&gt;
&lt;p&gt;init q 
 重载/etc/inittab&lt;/p&gt;
&lt;p&gt;== 33 用户权限体系及sudo ==
dd &amp;lt; /dev/zero &amp;gt; /dev/sda 硬盘用０填充，数据没有了，也恢复不了&lt;/p&gt;
&lt;p&gt;dd &amp;lt; /dev/zero &amp;gt; /tmp/aa  用０填充aa文件&lt;/p&gt;
&lt;p&gt;相当于 dd if=/dev/zero of /tmp/aa&lt;/p&gt;
&lt;p&gt;visudo 命令实际是编辑/etc/sudo文件&lt;/p&gt;
&lt;p&gt;命令别名，一组命令&lt;/p&gt;
&lt;p&gt;主机别名，一些主机&lt;/p&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;p&gt;shrek ALL = /bin/hostname //shrek用户从所有地方来，可以运行hostname&lt;/p&gt;
&lt;p&gt;%shrek ALL = /bin/hostname //%开头用户组&lt;/p&gt;
&lt;p&gt;shrek ALL = NOPASSWD: /sbin/hostname //不用输入密码&lt;/p&gt;</summary></entry><entry><title>Describe linux/vi上下左右键变abcd .bashrc here.</title><link href="http://liugehao.github.io/describe-linuxvishang-xia-zuo-you-jian-bian-abcd-bashrc-here.html" rel="alternate"></link><updated>2013-08-21T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-21:describe-linuxvishang-xia-zuo-you-jian-bian-abcd-bashrc-here.html</id><summary type="html">&lt;p&gt;ubuntu使用的是默认的vim-tiny，那么你可以在终端中输入如下命令：
{{{
export TERM=linux
}}}
'''terminal 类型位于 /usr/share/terminfo目录下'''&lt;/p&gt;
&lt;p&gt;这样可以解决上下左右键变成ABCD这些，ubuntu11.04默认的是TERM=xterm，你可以使用echo $term来查看一下。如果不是最新的11.4，上述操作不能成功的话，尝试使用export TERM=vt100试试。&lt;/p&gt;
&lt;p&gt;如果你安装过了vim，那么找到vimrc_example.vim拷贝的用户目录下，改名为.vimrc。&lt;/p&gt;
&lt;p&gt;==== 最好方案 ====
{{{
apt-get isntall vim
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/bash 笔记 here.</title><link href="http://liugehao.github.io/describe-linuxbash-bi-ji-here.html" rel="alternate"></link><updated>2013-08-17T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-17:describe-linuxbash-bi-ji-here.html</id><summary type="html">&lt;p&gt;=== 命令组合 ===
 ||管道|| | ||
 ||&amp;lt;|4&amp;gt;重定向|| &amp;lt; 重定向输入。指定文件读取数据，而不是键盘输入||
 ||&amp;gt; &amp;gt;&amp;gt; 重定向输出。将输出结果覆盖、追加到指定文件 ||
 ||2&amp;gt; 2&amp;gt;&amp;gt; 标准错误输出。　结果覆盖、追加到指定文件||
 ||&amp;amp;&amp;gt; &amp;amp;&amp;gt;&amp;gt; 将标准输出和错误信息覆盖、追加到指定文件 ||&lt;/p&gt;
&lt;p&gt;下面２条相同结果
{{{
find / -name shrek &amp;gt; /tmp/find 2&amp;gt;&amp;amp;1
find / -name shrek &amp;amp;&amp;gt; /tmp/find 
cat &amp;lt;&amp;lt; EEE
skjdf
sfd
EEE(^D)&lt;/p&gt;
&lt;p&gt;}}}
 多条命令的逻辑关系
 || 逻辑与 ||&amp;amp;&amp;amp; 语名都执行成功。前面成功，执行后面的。如果前面失败，后面的不执行。||
 ||逻辑或 ||　｜｜ 前面成功不执行后面。前面失败，执行后面的。||
 ||逻辑分隔||；　按顺序执行多条语句 ||
===　3 变量 ===&lt;/p&gt;
&lt;p&gt;环境变量，系统变量，用户变量.__env__查看所有变量
 || 双引号 || " ||　允许引用、转义\ ||
 ||单引号 ||'|| 不允许引用、转义||
 ||反撇号 ||` $() ||以命令输出替换||&lt;/p&gt;
&lt;p&gt;|| $? || 前一条命令状态值　０为正常，其它为出错  ||
 || $０ || 脚本自身程序名  ||
 || $１－９ || 命令的１－９个参数  ||
 || $* || 命令行所有参数的内容  ||
 || $# || 命令行所有参数的个数  ||
{{{&lt;/p&gt;
&lt;h1&gt;./t.sh abc def //输入 #?２个参数，第一个$1 abc，第二个$2是def #*是abc def&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;=== 数值运算及处理 ===
'''expr''' expr 数值１　运算符　数值２
'''$[]'''  $[数值１　运算符　数值２]
{{{
expr 2 + 3
expr 2 - 3
expr 2 * 3  *号是bash通配符，需转义
expr 2 / 3
x = 2;y =3;
echo $[ 3 * 3] 不需转义
echo $[x * y]
expr $x * $y
}}}&lt;/p&gt;
&lt;p&gt;let 变量名++、let 变量名-- 
{{{
x = 4
let x++;echo $x
let x+=2; echo $x
}}}
随机数
random 变量　
{{{
echo $RANDOM 默认范围0-32767
echo $[RANDOM % 100] 0-100
}}}
生成数字序列　
seq 首数　末数　#从１开始，首数可省略
{{{&lt;/p&gt;
&lt;h1&gt;seq 3&lt;/h1&gt;
&lt;p&gt;1
2
3&lt;/p&gt;
&lt;h1&gt;seq 3 5&lt;/h1&gt;
&lt;p&gt;3
4
5
}}}
seq 首数 增量 末数
{{{&lt;/p&gt;
&lt;h1&gt;seq 3 2 10&lt;/h1&gt;
&lt;p&gt;3
5
7
9
}}}&lt;/p&gt;
&lt;p&gt;小数运算
将计算交给'''bc'''
{{{
echo "34.3 - 3.4" | bc
echo "scale=4;10/3" | bc #scale　限制小数位数
}}}&lt;/p&gt;
&lt;p&gt;=== 字符串截取 ===&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录命令
  . dirname 路径　不包括文件名或者最后的目录名
  . basenme 文件名或者最后的路径名
    {{{
    #Var1 = "/etc/nginx/nginx.conf"
    #dirname $Var1
    /etc/nginx
    #basename $Var1
    nginx.conf
    }}}&lt;/li&gt;
&lt;li&gt;字符串替换
  . expr substr $var1 开始位置 截取长度 //起始位置从１开始
  . ${变量名称:起始位置:截取长度}  //起始位置从0开始
  . 
{{{&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Var1 = "0123456739"&lt;/h1&gt;
&lt;h1&gt;expr substr 4 3&lt;/h1&gt;
&lt;p&gt;456&lt;/p&gt;
&lt;h1 Var:4:3="Var:4:3"&gt;echo $&lt;/h1&gt;
&lt;p&gt;567&lt;/p&gt;
&lt;h1&gt;echo ${Var::3} //从开头取&lt;/h1&gt;
&lt;p&gt;123
}}}
  . ${Var1/3/0} //第一个３替换同成０
  . ${Var1//3/0}　//所有的３都替换成０
}}}
 * 随机字符串
  . 从/dev/urandom 获取随机字符（有可能乱码），能过/usr/bin/md5sum 生成纯ascii字符，再通过/usr/bin/cut截取固定长度的字符。cat urandom会一直出字符，只取第一行生成md5
    {{{
　　　head -1 /dev/urandom | md5sum
      echo $var1 | cut -b 起始位置-结束位置 //开头字符可省略 cut -b -5；最后８个字符时，cut -b 18-
      head-1 /dev/urandom |md5sum |cut -b -8 //取８个随机字符
    }}}&lt;/p&gt;
&lt;p&gt;=== 17 输入输出管道及重定向 ===&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;过滤器命令&lt;/span&gt;
&lt;span class="err"&gt;输入输出重定向&lt;/span&gt;
&lt;span class="err"&gt;输入源　输出到屏幕　&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;标准正确输出&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;标准错误输出&lt;/span&gt;

&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="err"&gt;编写文件　Ｃ&lt;/span&gt;&lt;span class="n"&gt;trl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="err"&gt;结束&lt;/span&gt;
&lt;span class="err"&gt;下面２条相同结果&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;shrek&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;shrek&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; 
&lt;span class="p"&gt;}}}&lt;/span&gt;

&lt;span class="err"&gt;编辑器　&lt;/span&gt;&lt;span class="n"&gt;vi&lt;/span&gt;

&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;EEE&lt;/span&gt;
&lt;span class="n"&gt;skjdf&lt;/span&gt;
&lt;span class="n"&gt;sfd&lt;/span&gt;
&lt;span class="n"&gt;EEE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="err"&gt;写入&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;EEE&lt;/span&gt;
&lt;span class="n"&gt;sdfsd&lt;/span&gt;
&lt;span class="n"&gt;sfd&lt;/span&gt;
&lt;span class="n"&gt;EEE&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a-z&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A-Z&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;小写变大写&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;a-z&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;A-Z&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt;

&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etcl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="err"&gt;在管道使用的时候，复制一份，&lt;/span&gt;&lt;span class="n"&gt;tee&lt;/span&gt; &lt;span class="err"&gt;。比如想看下中间结果&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;x201i&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tee&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;
&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mi"&gt;512304&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;    &lt;span class="mi"&gt;221287&lt;/span&gt; &lt;span class="n"&gt;Nov&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;  &lt;span class="mi"&gt;2010&lt;/span&gt; &lt;span class="n"&gt;aliedit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;      &lt;span class="mi"&gt;8942&lt;/span&gt; &lt;span class="n"&gt;Jun&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt; &lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;      &lt;span class="mi"&gt;7307&lt;/span&gt; &lt;span class="n"&gt;Aug&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt; &lt;span class="n"&gt;pgadmin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="mi"&gt;524288000&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="err"&gt;密码替换&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;x201i&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a-m&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;N-Z&amp;quot;&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;N-Z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;a-m&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;love&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;very&lt;/span&gt; &lt;span class="n"&gt;much&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="n"&gt;YBIR&lt;/span&gt; &lt;span class="n"&gt;LBH&lt;/span&gt; &lt;span class="n"&gt;IREL&lt;/span&gt; &lt;span class="n"&gt;ZHPU&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="err"&gt;加密文件&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a-m&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;N-Z&amp;quot;&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;N-Z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;a-m&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="err"&gt;　&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bak&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="err"&gt;加密码后邮件发出&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a-m&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;N-Z&amp;quot;&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;N-Z&amp;quot;&amp;quot;A-M&amp;quot;&amp;quot;n-z&amp;quot;&amp;quot;a-m&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;for you &amp;quot;&lt;/span&gt; &lt;span class="n"&gt;abc&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;baidu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;== 6 条件测试 ==&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;测试操作规范
  . 测试的本质
  　　. 是一条命令
  　　. 根据　$?　返回前一条命令返回的状态。成功为0,再则不成功
  . 操作规范
     . 格式1 test 条件表达式
     . 格式2: [ 条件表达式 ]
  . 练习方法
    . 直接跟 &amp;amp;&amp;amp; echo YES 判断结果
    . 用法： [ 条件表达式 ] &amp;amp;&amp;amp; echo YES
    {{{
        l@x201i:~$ ls -dl /etc/grub/ /boot/grub
        ls: cannot access /etc/grub/: No such file or directory
        drwxr-xr-x 5 root root 5120 Jul 30 07:30 /boot/grub
        l@x201i:~$ [-d "/etc/grub" ] &amp;amp;&amp;amp; echo YES //前面要有空格，-d 是否为目录
        bash: [-d: command not found
        l@x201i:~$ [ -d "/etc/grub" ] &amp;amp;&amp;amp; echo YES
        l@x201i:~$ [ -d "/boot/grub" ] &amp;amp;&amp;amp; echo YES
        YES&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件状态检测
   . 存在及识别
    . -e: 目标是否存在 (Exist)
    . -d: 是否为目录 (Directory)
    . -f: 是否为文件（File)
  . 权限的检测
    . -r:　是否有读取的权限(Read)
    . -w: 是否有写入权限(Write)
    . -x: 是否有执行权限(eXcute)
    {{{
      ls -l /etc/shadow //只有root用户有写入权限，root组也无读取权限。文件所有者可写文件
      [ -x "/etc/shadow"] &amp;amp;&amp;amp; echo YES
    }}}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;整数值比较、字母匹配
  . -eq: 等于 (Equal)
  . -ne: 不等于 (Not Equal)
  . -gt: 大于　(Greater Than)
  . -lt: 小于 (Lesser Than)
  . -ge: 大于或等于 (Greater or Equal)
  . -le: 小于或等于 (Lesser or Equal)
  {{{
        root@x201i:/home/l# who |wc -l
        3
        root@x201i:/home/l# [ $(who | wc -l ) -eq 2] &amp;amp;&amp;amp; echo YES
        bash: [: missing `]' //方括号前附近都要有空格
        root@x201i:/home/l# [ $(who | wc -l ) -eq 2 ] &amp;amp;&amp;amp; echo YES
        root@x201i:/home/l# [ $(who | wc -l ) -eq 3 ] &amp;amp;&amp;amp; echo YES
        YES
        root@x201i:/home/l#
  }}}&lt;/li&gt;
&lt;li&gt;字符串匹配
  . =:  两人个字符串相同
  . !=: 两个字符串不相同
  . 字符串可以用&amp;lt;、&amp;gt;，不常用
  {{{
    root@x201i:/home/l# echo $USER
    root
    root@x201i:/home/l# [ $USER != "root" ] &amp;amp;&amp;amp; echo YES
    root@x201i:/home/l# [ $USER = "root" ] &amp;amp;&amp;amp; echo YES
    YES
  }}}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;== 使用if判断结构 ==&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;程序流控制
  . 执行过程顺序化、自动化&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单分支／双分支的if应用
   . 单分支结构
   {{{
     if 条件测试
         then 命令序列
     fi
     //检查目录/opt/mrepo是否存在，不存在则创建
     BACK_DIR="/opt/mrepo"
     if [ ! -d $BACK_DIR ] 
     then
       mkdir -p $BACK_DIR
     fi&lt;/p&gt;
&lt;p&gt;//双分支&lt;/p&gt;
&lt;p&gt;if 条件测试
 then 命令序列1
 else 命令序列2
 fi
 检查目标主机是否存活，显示检测结果
 #!/bin/bash
 ping -c 3 -i 0.2 -W 3 $1 &amp;amp;&amp;gt; /dev/null
 if [ $? -eq 0 ]
 then 
     echo "host $1 is up."
 else
     echo "host $1 is down."
 fi
   }}}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多重分支的应用
   {{{
     if 条件测试１
         then 命令序列１
     elif 条件测试２
         then 命令序列２
     ... ...
     else
         命令序列
     fi&lt;/p&gt;
&lt;p&gt;#!/bin/bash
 read -p "请输入您的分数（0-100）：" GRADE
 if [ $GRADE -ge 85 ]  &amp;amp;&amp;amp; [ $GRADE -le 100 ]; then
     echo "$GRADE 分!优秀"
 elif [ $GRADE -ge 70 ] &amp;amp;&amp;amp; [ $GRADE -le 84 ]; then
     echo "$GRADE 分,合格"
 else
     echo "$GRADE 分？不合格"
 fi&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== 8 使用for循环 ==&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;for语句结构
   {{{
     for 变量名 in 取值列表
     do
         命令序列
     done&lt;/p&gt;
&lt;p&gt;for i in "1st" "2nd" "3rd"
 do
   echo $i;
 done&lt;/p&gt;
&lt;p&gt;逐词输出/etc/host.conf
 for i in $(cat /etc/host.conf)
 do
   echo $i
 done&lt;/p&gt;
&lt;p&gt;给一个users.txt 每行一个用户名称，初始口令1223456, 首次登录必须改密码,chage 更改密码天数
 for i in $(cat /root/users.txt)
 do
   useradd $i
   echo "123456" | passwd --stdin $i
   chage -d 0 $i
 done&lt;/p&gt;
&lt;p&gt;检测一个ＩＰ范围主机状态192.168.1.1 -192.168.1.10&lt;/p&gt;
&lt;p&gt;IP_PRE="192.168.1."
 for IP in $(seq 1 10)
 do
   ping -c 3 -i 0.2 -W 3 ${IP_PRE}$IP &amp;amp;&amp;gt; /dev/null
   if [ $? -eq 0 ]; then
     echo "${IP_PRE}$IP is up."
   else
     echo "${IP_PRE}$IP is down."
   fi
 done&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;== 9 使用case分支 ==
 * 服务脚本格式
    {{{
    case 变量值 in 
    模式１）
        命令序列１
        ;;
    模式２）
        命令序列２
        ;;
        ......&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;默认命令序列&lt;/span&gt;
&lt;span class="n"&gt;esac&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;span class="p"&gt;{{{&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="err"&gt;控制参数&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt;
&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;启动ＸＸ服务&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;停止ＸＸ服务&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="p"&gt;......&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;显示服务脚本的用法&lt;/span&gt;
&lt;span class="n"&gt;esac&lt;/span&gt;
&lt;span class="p"&gt;}}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;例子
    {{{
    #!/bin/bash
    read -p "请输入一个字符，并按回车确认：" KEY
    case "$KEY" in
    [a-z]|[A-Z])
        echo "您输入的是字母。"
        ;;
    [0-9])
        echo "您输入的是数字。"
        ;;
    *)
        echo "您输入的是空格、功能键或控制字母。"
    esac&lt;/p&gt;
&lt;h1&gt;!/bin/bash&lt;/h1&gt;
&lt;p&gt;case "$1" in
start)
    sleep 3600 &amp;amp;
    ;;
stop)
    pkill -x "sleep"
    ;;
*)
    echo "用法： $0 (start|stop|"
esac
}}}
运行：
{{{
l@x201i:~/tmp/bash$ ./sleep.sh start
l@x201i:~/tmp/bash$ pgrep -lx "sleep"
6788 sleep
l@x201i:~/tmp/bash$ ./sleep.sh stop
l@x201i:~/tmp/bash$ pgrep -lx "sleep"
l@x201i:~/tmp/bash$ ./sleep.sh 
用法： ./sleep.sh (start|stop|
}}}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加为系统服务
    在脚本开头设置chkconfig参数&lt;/p&gt;
&lt;p&gt;checkconfig： - 90 10
告诉checkconfig需要哪几个运行级别。切换运行级别时启动进程顺序是９０，停止顺序是１０
description: Daemon script for sleepd Server
说明&lt;/p&gt;
&lt;p&gt;系统服务文件放在/etc/init.d目录下
{{{&lt;/p&gt;
&lt;h1&gt;cat /etc/init.d/sleepd&lt;/h1&gt;
&lt;h1&gt;!/bin/bash&lt;/h1&gt;
&lt;p&gt;checkconfig： - 90 10
description: Daemon script for sleepd Server
case "$1" in
start)
    sleep 3600 &amp;amp;
    ;;
stop)
    pkill -x "sleep"
    ;;
*)
    echo "用法： $0 (start|stop|"
esac&lt;/p&gt;
&lt;h1&gt;chkconfig --add sleepd　／／设置开机自动运行&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;=== １０  awk 文本处理工具 ===
 * awk基本命令格式
    awk '模式  {操作}' 文件１  文件２
    NR  当前处理行的序数（行号）
    FS  字段间隔，缺省为空格或ＴＡＢ
    $n  当前行的第n个字段
    $0  当前行的所有文本内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;常见用法示例
    awk 'NR==1{print}' /etc/hosts
    head -1 /etc/hosts&lt;/p&gt;
&lt;p&gt;NR指行号,相当于head,但输出第３行head做不到
{{{
l@x201i:~/tmp/bash$ cat file.txt 
1 This is the first line.
2 Hello, Everybody!
3 192.168.4.2 w2k8.benet.com
4 hunter:x:504:504::/home/hunter:/bin/bash
}}}
. awk 'NR==1,NR==3{print}' file.txt    输出第１至３行&lt;/p&gt;
&lt;p&gt;. awk '(NR==1)||(NR==3){print}' file.txt    输出第一行和第三行&lt;/p&gt;
&lt;p&gt;. awk '(NR%2)==1{print}' file.txt    输出奇数行&lt;/p&gt;
&lt;p&gt;. awk '(NR%2)==0{print}' file.txt    输出偶数行&lt;/p&gt;
&lt;p&gt;. awk '/2/{print}' file.txt&lt;/p&gt;
&lt;p&gt;. awk '/bash$/{print}' file.txt     正则表达式&lt;/p&gt;
&lt;p&gt;. awk "NR==2,NR==3{print $1,$3}' file.txt    输出第二行到第三行的第１，３列 &lt;/p&gt;
&lt;p&gt;. awk -F. '$5=="benet"{print $0}' file.txt    点分隔，第五字段等于benet的行&lt;/p&gt;
&lt;p&gt;{{{
l@x201i:~/tmp/bash$ awk '(NR==1)||(NR==3){print}' file.txt
1 This is the first line.
3 192.168.4.2 w2k8.benet.com
l@x201i:~/tmp/bash$ awk 'NR==1,NR==3{print}' file.txt
1 This is the first line.
2 Hello, Everybody!
3 192.168.4.2 w2k8.benet.com
}}}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;=== sed 替换文本内容 ===
 * 语法格式
  . sed '编辑指令' 文件１　文件２　......
  . sed -n '编辑指令' 文件１　文件２　......
  . sed -i '编辑指令' 文件１　文件２　......
  . -n 只输出编辑指令影响的行
  . -i 直接修改源文件内容。不加-i,修改结果输出，不会修改有源文件
  . sed -n '3,5p' /etc/host //p 相当于awk中的print,第３到５行
  . 格式：[地址１[,地址２]操作类型
  . 多条指令之间以分号隔开
  　{{{
  　sed -n '3p;5p' /etc/host
  　打印第３行；打印第５行
  　}}}
  . p 输出/打印文件行
  . n 取下一行文本（跳过当前行)
  . d 删除
  . s 字符串替换
  . a 追加新文本
  . sed -n 'p;n' file.txt //隔行输出, 奇数行
  . sed -n 'n;p' file.txt //偶数行
  . sed -n '/w2k8/.$p' file.txt //正则 从包含w2k8的行开始到最后，输出。$最后一行
  . sed -n '/\&amp;lt;This&gt;/p' file.txt 包含单词This的行
  . sed '2,3d' file.txt //输出删除第２到第三行文本后的结果，没有-i 不影响原文件
  . sed '/w2k8/d;$d' file.txt //删除包含w2k8的行，删除最后一行
  . sed '/ne/!d' file.txt //删除不符合条件的行
  . sed '3,4s/hunter/BADBOY/g' file.txt //g 替换所有的，否则替换每行第一个。替换第３到第４行。行数省略，默认所有行。
  . sed '1,2s/^/#/g' file.txt　//第１到２行，添加＃号
  . sed 's/ter//g' file.txt //删除所有ter&lt;/p&gt;</summary></entry><entry><title>Describe linux/Linux查看系统配置常用命令 here.</title><link href="http://liugehao.github.io/describe-linuxlinuxcha-kan-xi-tong-pei-zhi-chang-yong-ming-ling-here.html" rel="alternate"></link><updated>2013-08-15T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-15:describe-linuxlinuxcha-kan-xi-tong-pei-zhi-chang-yong-ming-ling-here.html</id><summary type="html">&lt;p&gt;{{{
系统&lt;/p&gt;
&lt;h1&gt;uname -a               # 查看内核/操作系统/CPU信息&lt;/h1&gt;
&lt;h1&gt;head -n 1 /etc/issue   # 查看操作系统版本&lt;/h1&gt;
&lt;h1&gt;cat /proc/cpuinfo      # 查看CPU信息&lt;/h1&gt;
&lt;h1&gt;hostname               # 查看计算机名&lt;/h1&gt;
&lt;h1&gt;lspci -tv              # 列出所有PCI设备&lt;/h1&gt;
&lt;h1&gt;lsusb -tv              # 列出所有USB设备&lt;/h1&gt;
&lt;h1&gt;lsmod                  # 列出加载的内核模块&lt;/h1&gt;
&lt;h1&gt;env                    # 查看环境变量&lt;/h1&gt;
&lt;p&gt;资源&lt;/p&gt;
&lt;h1&gt;free -m                # 查看内存使用量和交换区使用量&lt;/h1&gt;
&lt;h1&gt;df -h                  # 查看各分区使用情况&lt;/h1&gt;
&lt;h1&gt;du -sh &amp;lt;目录名&amp;gt;        # 查看指定目录的大小&lt;/h1&gt;
&lt;h1&gt;grep MemTotal /proc/meminfo   # 查看内存总量&lt;/h1&gt;
&lt;h1&gt;grep MemFree /proc/meminfo    # 查看空闲内存量&lt;/h1&gt;
&lt;h1&gt;uptime                 # 查看系统运行时间、用户数、负载&lt;/h1&gt;
&lt;h1&gt;cat /proc/loadavg      # 查看系统负载&lt;/h1&gt;
&lt;p&gt;磁盘和分区&lt;/p&gt;
&lt;h1&gt;mount | column -t      # 查看挂接的分区状态&lt;/h1&gt;
&lt;h1&gt;fdisk -l               # 查看所有分区&lt;/h1&gt;
&lt;h1&gt;swapon -s              # 查看所有交换分区&lt;/h1&gt;
&lt;h1&gt;hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)&lt;/h1&gt;
&lt;h1&gt;dmesg | grep IDE       # 查看启动时IDE设备检测状况&lt;/h1&gt;
&lt;p&gt;网络&lt;/p&gt;
&lt;h1&gt;ifconfig               # 查看所有网络接口的属性&lt;/h1&gt;
&lt;h1&gt;iptables -L            # 查看防火墙设置&lt;/h1&gt;
&lt;h1&gt;route -n               # 查看路由表&lt;/h1&gt;
&lt;h1&gt;netstat -lntp          # 查看所有监听端口&lt;/h1&gt;
&lt;h1&gt;netstat -antp          # 查看所有已经建立的连接&lt;/h1&gt;
&lt;h1&gt;netstat -s             # 查看网络统计信息&lt;/h1&gt;
&lt;p&gt;进程&lt;/p&gt;
&lt;h1&gt;ps -ef                 # 查看所有进程&lt;/h1&gt;
&lt;h1&gt;top                    # 实时显示进程状态&lt;/h1&gt;
&lt;p&gt;用户&lt;/p&gt;
&lt;h1&gt;w                      # 查看活动用户&lt;/h1&gt;
&lt;h1&gt;id &amp;lt;用户名&amp;gt;            # 查看指定用户信息&lt;/h1&gt;
&lt;h1&gt;last                   # 查看用户登录日志&lt;/h1&gt;
&lt;h1&gt;cut -d: -f1 /etc/passwd   # 查看系统所有用户&lt;/h1&gt;
&lt;h1&gt;cut -d: -f1 /etc/group    # 查看系统所有组&lt;/h1&gt;
&lt;h1&gt;crontab -l             # 查看当前用户的计划任务&lt;/h1&gt;
&lt;p&gt;服务&lt;/p&gt;
&lt;h1&gt;chkconfig --list       # 列出所有系统服务&lt;/h1&gt;
&lt;h1&gt;chkconfig --list | grep on    # 列出所有启动的系统服务&lt;/h1&gt;
&lt;h1&gt;chkconfig nginx on|off&lt;/h1&gt;
&lt;p&gt;程序&lt;/p&gt;
&lt;h1&gt;rpm -qa                # 查看所有安装的软件包&lt;/h1&gt;
&lt;p&gt;全部脚印不留脚印
}}}&lt;/p&gt;</summary></entry><entry><title>linux/rhce视频/18 解决linux访问比较慢的问题</title><link href="http://liugehao.github.io/linuxrhceshi-pin-18-jie-jue-linuxfang-wen-bi-jiao-man-de-wen-ti.html" rel="alternate"></link><updated>2013-08-14T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-14:linuxrhceshi-pin-18-jie-jue-linuxfang-wen-bi-jiao-man-de-wen-ti.html</id><summary type="html">&lt;p&gt;{{{
icmp协议：
ping www.sina.com.cn
traceroute www.sina.com.cn
mtr www.sina.com.cn
通路　，掉包率&lt;/p&gt;
&lt;p&gt;查看本机
top
vmstat 
netstat
netstat -antup
  tcp listen
  udp 无状态&lt;/p&gt;
&lt;p&gt;特别多的　ESTABLISHED　，有可能多人在看网站，也可能是ＣＣ攻击（恶意访问，查看ＩＰ，同一ＩＰ数多为ＣＣ）
如果连接中ESTABLISHED占少数，syn-flood DDOS攻击&lt;/p&gt;
&lt;p&gt;抓包工具
iptraf tcpdump wireshark&lt;/p&gt;
&lt;p&gt;arping 网关ＩＰ　
如果有２个mac地址，有arp欺骗，（一般情况下，出现次数多的mac为假网关）&lt;/p&gt;
&lt;p&gt;arp -s ip mac 绑定网关&lt;/p&gt;
&lt;p&gt;ifconfig eth0:1 192.168.1.2 网卡添加多地址
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/RHEL6/CentOS6/Scientific Linux 6虚拟机克隆导致的网卡问题解决方法 here.</title><link href="http://liugehao.github.io/describe-linuxrhel6centos6scientific-linux-6xu-ni-ji-ke-long-dao-zhi-de-wang-qia-wen-ti-jie-jue-fang-fa-here.html" rel="alternate"></link><updated>2013-08-13T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-13:describe-linuxrhel6centos6scientific-linux-6xu-ni-ji-ke-long-dao-zhi-de-wang-qia-wen-ti-jie-jue-fang-fa-here.html</id><summary type="html">&lt;p&gt;刚才在VM虚拟机里测试Scientific Linux 6（RHEL6的重编译版，相当于CentOS 6），看看是否可用于生产环境。因为镜像是在家里的电脑安装的，复制过来启动系统发现网卡启动失败，提示：&lt;/p&gt;
&lt;p&gt;Bringing up interface eth0: Device eth0 does not seem to be present, delaying initialization.   [FAILED]&lt;/p&gt;
&lt;p&gt;Google了一下，发现是网卡mac地址写入硬件问题导致。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;环境：&lt;/span&gt;&lt;span class="n"&gt;Virtualbox&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;RHEL&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;x64&lt;/span&gt;
&lt;span class="err"&gt;用&lt;/span&gt;&lt;span class="n"&gt;VirtualBox&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="n"&gt;vboxmanager&lt;/span&gt;&lt;span class="err"&gt;克隆的虚拟机，操作系统&lt;/span&gt;&lt;span class="n"&gt;RHEL6&lt;/span&gt;&lt;span class="err"&gt;，启动后发现网卡不能用了。重启网络服务，报以下错误&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Bringing&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;seem&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delaying&lt;/span&gt; &lt;span class="n"&gt;initialization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FAILED&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="err"&gt;在&lt;/span&gt;&lt;span class="n"&gt;RHEL5&lt;/span&gt;&lt;span class="err"&gt;里也发生类似事情，因为复制虚拟机&lt;/span&gt;&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="err"&gt;会重新生成，但是操作系统的&lt;/span&gt;&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="err"&gt;却写在&lt;/span&gt;&lt;span class="n"&gt;ifcfg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ethx&lt;/span&gt;&lt;span class="err"&gt;里，造成了不一致，所以不能启动网络接口，在&lt;/span&gt;&lt;span class="n"&gt;RHEL5&lt;/span&gt;&lt;span class="err"&gt;里可以使用&lt;/span&gt;&lt;span class="n"&gt;kudzu&lt;/span&gt;&lt;span class="err"&gt;或者注释网卡配置文件的&lt;/span&gt;&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="err"&gt;字段来解决这个问题。但是在&lt;/span&gt;&lt;span class="n"&gt;RHEL6&lt;/span&gt;&lt;span class="err"&gt;里，&lt;/span&gt;&lt;span class="n"&gt;kudzu&lt;/span&gt;&lt;span class="err"&gt;已经被&lt;/span&gt;&lt;span class="n"&gt;hal&lt;/span&gt;&lt;span class="err"&gt;服务取代了。虽然&lt;/span&gt;&lt;span class="n"&gt;lspci&lt;/span&gt;&lt;span class="err"&gt;能够正常认到网卡，但是却无法使用&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="err"&gt;来启动服务。尝试注释&lt;/span&gt;&lt;span class="n"&gt;ifcfg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="n"&gt;MAC&lt;/span&gt;&lt;span class="err"&gt;字段，还是报错。查看了下&lt;/span&gt;&lt;span class="n"&gt;udev&lt;/span&gt;&lt;span class="err"&gt;的规则，发现了问题的所在。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{{{
    [root@Oracle ~]# cat /etc/udev/rules.d/70-persistent-net.rules
    # This file was automatically generated by the /lib/udev/write_net_rules
    # program, run by the persistent-net-generator.rules rules file.
    #
    # You can modify it, as long as you keep each rule on a single
    # line, and change only the value of the NAME= key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# net device () (custom name provided by external tool)&lt;/span&gt;
&lt;span class="n"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DRIVERS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;?*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;

&lt;span class="cp"&gt;# net device ()&lt;/span&gt;
&lt;span class="n"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DRIVERS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;?*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth1&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Oracle&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}
    原来UDEV这里把克隆前的MAC当成了当前虚拟机的eth0 MAC，而重新生成的08:00:27:32:66:63是eth1的MAC。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;解决这个问题，只要删除旧的&lt;/span&gt;&lt;span class="n"&gt;UDEV&lt;/span&gt;&lt;span class="err"&gt;配置，修改为：&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;{{{
    [root@Oracle ~]# cat /etc/udev/rules.d/70-persistent-net.rules
    # This file was automatically generated by the /lib/udev/write_net_rules
    # program, run by the persistent-net-generator.rules rules file.
    #
    # You can modify it, as long as you keep each rule on a single
    # line, and change only the value of the NAME= key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# net device () (custom name provided by external tool)&lt;/span&gt;
&lt;span class="n"&gt;SUBSYSTEM&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DRIVERS&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="o"&gt;?*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ATTR&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="err"&gt;″&lt;/span&gt;

&lt;span class="err"&gt;重启&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="err"&gt;服务有时可以有时不行，重启系统就一切&lt;/span&gt;&lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="err"&gt;！试过多次！&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Oracle&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;span class="n"&gt;Shutting&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Shutting&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt; &lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Bringing&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Bringing&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Oracle&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;ifconfig&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt;
&lt;span class="n"&gt;eth0&lt;/span&gt; &lt;span class="n"&gt;Link&lt;/span&gt; &lt;span class="n"&gt;encap&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;HWaddr&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;
&lt;span class="n"&gt;inet&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;172.16.100.3&lt;/span&gt; &lt;span class="n"&gt;Bcast&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;172.16.100.255&lt;/span&gt; &lt;span class="n"&gt;Mask&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;255.255.255.0&lt;/span&gt;
&lt;span class="n"&gt;inet6&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fe80&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;a00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;27ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fe32&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6663&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="n"&gt;Scope&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Link&lt;/span&gt;
&lt;span class="n"&gt;UP&lt;/span&gt; &lt;span class="n"&gt;BROADCAST&lt;/span&gt; &lt;span class="n"&gt;RUNNING&lt;/span&gt; &lt;span class="n"&gt;MULTICAST&lt;/span&gt; &lt;span class="n"&gt;MTU&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="n"&gt;Metric&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;206&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;packets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;203&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;dropped&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;overruns&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;carrier&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="nl"&gt;collisions:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;txqueuelen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="n"&gt;RX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;21157&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;20.6&lt;/span&gt; &lt;span class="n"&gt;KiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;TX&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24515&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;23.9&lt;/span&gt; &lt;span class="n"&gt;KiB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}
参考：http://bbs.chinaunix.net/viewthread.php?tid=1918368&lt;/p&gt;
&lt;p&gt;我的测试环境是VMware Workstation 7.1 + SL 6 x64
最简单的解决办法是直接删除70-persistent-net.rules配置文件
{{{
rm -fr /etc/udev/rules.d/70-persistent-net.rules
reboot
}}}
重启系统就ok了，系统会自动生成一个新的。&lt;/p&gt;</summary></entry><entry><title>Describe linux/rhel/redhat笔记 here.</title><link href="http://liugehao.github.io/describe-linuxrhelredhatbi-ji-here.html" rel="alternate"></link><updated>2013-08-13T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-13:describe-linuxrhelredhatbi-ji-here.html</id><summary type="html">&lt;p&gt;echo "aaa" &amp;gt; tty1　＃输出内容到tty终端&lt;/p&gt;
&lt;p&gt;vi /etc/inittab
id:3:initdefault  #3默认不启动xwindow,5开机启动xwindow&lt;/p&gt;
&lt;p&gt;1:2345:respawn:/sbin/ningetty tty1 #tty终端数量&lt;/p&gt;
&lt;p&gt;===9 10 课时，系统命令初步 ===
linux一切皆文件，硬件也抽象成文件形式
{{{
cd ~abc 进入abc家目录
touch a 更改文件时间，如果没有文件则创建
touch /tmp/{a,b} 创建a,b２个文件
stat a 查看文件a的时间
pws 显示当前路径
ls -F 增加标记。可执行文件加/,可执行文件加*...
alias ls='ls --color=tty'　增加颜色
unalias 取消别名
source .bashrc 升效
cp -r 文件夹
rm -i 交互模式，是否删除
rm -r 删除文件夹
rm -rf 删除文件夹和文件不询问
rm -f 不问是否删除
cp -r 文件夹
rmdir 删除空文件夹
pstree 查看进程树&lt;/p&gt;
&lt;p&gt;hostname 查看、更改主机名（不保存，下次重启变回原来主机名）
/etc/ssconfig/network 主机名信息&lt;/p&gt;
&lt;p&gt;ifconfig 查看更改ＩＰ
ifconfig eth0 192.168.1.12 (不永久第一次)
vi /etc/sysconfig/network-scraipts/ifcfg-eth0 网络配置文件&lt;/p&gt;
&lt;p&gt;netconfig 改文件，自动改ifconfig的配置到配置文件，再service network restart 升效&lt;/p&gt;
&lt;p&gt;file /bin/ls ＃file 文件名，查看文件类型
file p.img
p.img: Linux rev 1.0 ext4 filesystem data, UUID=c6f89be8-9267-4953-b4f5-ff368c58d9c4 (extents) (huge files)&lt;/p&gt;
&lt;p&gt;使用cifs 需要先安装 cifs-utils包&lt;/p&gt;
&lt;p&gt;mount /dev/cdrom /mnt
mount -t iso9660 /dev/cdrom /mnt
mount -t cifs //192.168.0.1/tools /mnt
mount -t cifs -o username=administrator //192.168.0.1/tools /mnt #win share
mount 192.168.0.254:/var/ftp/pub /mnt #nfs linux共享。nfs速度快&lt;/p&gt;
&lt;p&gt;cat /dev/cdrom &amp;gt;a.iso 做镜象文件
mount -t iso9660 -o loop a.iso /mnt #loop 虚拟成一个回环设备&lt;/p&gt;
&lt;p&gt;ls -l 不是文件实际占的大小，文件夹４Ｋ，
du -s 看文件夹大小，汇总　-h 显示k,m,g&lt;/p&gt;
&lt;p&gt;shutdown -h 16:00 ＃１６点关机
init 0 关闭服务，然后调halt -p -f 断电。自己用机器，直接init 0关机&lt;/p&gt;
&lt;p&gt;shutdown -r now　会调用
init 6&lt;/p&gt;
&lt;p&gt;}}}
=== 用户及组管理初步 ===
useradd shrek
添加用户，做下列量系列动作：
{{{
/etc/passwd
/etc/shadow
/etc/group
/etc/gshadow&lt;/p&gt;
&lt;p&gt;mkdir /home/shrek
cp -r /etc/skel/.* /home/shrek
chown -R shrek:shrek /home/shrek
}}}&lt;/p&gt;
&lt;p&gt;/etc/passwd
l:x:1000:1000:liugehao,,,:/home/l:/bin/bash
用户名:密码(x表示有密码):用户id:组ＩＤ:用户全名注释:家目录:用户所用shell
/sbin/nologin 表示不允许登录&lt;/p&gt;
&lt;p&gt;/etc/shadow
l:$6$2WQbK4Hs$Ai12QpRxzKwxurcjkhseUQtnX1H4cN6yEJZBFAcGAc1Cwmyuir.M.xNHerZCptZ.pQaLbutBF7yp3/qVld7Wj1:15913:0:99999:7:::
用户名：单向加密后的密码：19700101天数:密码最短历史:密码最长历史天数:密码过期天数通知:帐号禁用的unix天数::&lt;/p&gt;
&lt;p&gt;/etc/group
l:x:1000:
libvirt-qemu:x:124:libvirt-qemu,l
组名：是否有组密码：组ＩＤ：用户,用户&lt;/p&gt;
&lt;p&gt;linux 只有２种用户，一种是ＩＤ为０的root,另一种是ＵＩＤ不为０的，把普通用户加到root组，只是某些文件管理权限。&lt;/p&gt;
&lt;p&gt;/etc/gshadow
组密码文件&lt;/p&gt;
&lt;p&gt;/etc/login.defs
修改默认密码天数，过期警告天数等&lt;/p&gt;
&lt;p&gt;userdel shrek 删除用户
userdel -r shrek 彻底删除用户，一并删除主目录，email&lt;/p&gt;
&lt;p&gt;usermod 更改用户主目录,passwd,comment
usermod -G root,bin,todd shrek 把shrek加入到oot,bin,todd 组。-a append &lt;/p&gt;
&lt;p&gt;id l
uid=1000(l) gid=1000(l) groups=1000(l),122(kvm),123(libvirt),124(libvirt-qemu),125(vde2-net)&lt;/p&gt;
&lt;p&gt;gpasswd -M l,root,shrek root 多个用户加入到一个组&lt;/p&gt;
&lt;p&gt;usermod -g 切换组ＩＤ，一个用户只有一个组ＩＤ，可以有多个组&lt;/p&gt;
&lt;p&gt;删除/etc/passwd后，单用户模式登录后，用/etc/passwd-恢复，(/etc/shadow)&lt;/p&gt;
&lt;p&gt;Alt-Fx 控制台tty1，
xwindow 登录或者远程登录后，打开terminal 控制台是pts/1...
skill -9 pts/3 杀掉pts/3的登录&lt;/p&gt;
&lt;p&gt;查看用户
users 
w
who&lt;/p&gt;
&lt;p&gt;write pts/2 root 给pts2用户发消息
echo aaaaksdjf &amp;gt; pts/2
mesg y 打开write
wall xxxkjfdskfjs 发送给所有人&lt;/p&gt;
&lt;p&gt;last　查看用户登录日志&lt;/p&gt;
&lt;p&gt;lastlog 每个用户最后一次登录时间&lt;/p&gt;
&lt;p&gt;finger shrek 看某个用户的登录时间，信息,email等&lt;/p&gt;
&lt;p&gt;=== １６课时　文本处理及正则表达式　===
 * 命令 cat tail head less more
{{{
tail -f 监视文件，如果文件发生变化，显示发生变化
cut -d: -f1 /etc/passwd //　-d以冒号为分隔符，　-f显示第一列
cut -d: -f1 /etc/passwd |grep root //显示第一列，并且第一列中包括root的行
cut -d: -f7 /etc/passwd　显示shell
}}}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep 
-v 反向选择
-R 对目录下文件和子文件夹下文件进行筛选
-l 只显示文件外
''正则表达式用单引号
-c 显示行号
-A2　显示上下文中下面２行
-B2　显示上下文中上面２行&lt;/li&gt;
&lt;li&gt;grep 正则
||. ||表示任何一个字符 ||
||.＊ ||表示０个或者任意个字符 ||
||^a ||a开头的行 ||
||a$ ||表示以a结束的行 ||
||&lt;good ||表示以good开头的单词 ||
||sh&gt; ||表示以sh结尾的单词 ||
||[abc] ||表示当前位置是a,b或者c ||
||[^abc] ||表示除a b c以外的字符 ||
||a*||空,a,aa,aaa,.... ||
||a? ||表示０个或者一个a ||
||a+ ||表示a,aa,aaa,... ||
||a{n} ||表示n个a ||&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;grep '.{40,}' /usr/share/dict/words　取超过４０字符的单词
  grep '^i.{18}n$' /usr/share/dict/words 查看i18n的单词
  查看配置文件，过滤注释行和空行
  grep -v '^#' /etc/nginx/nginx.conf | grep -v '^$'
  cut -d: -f2-4 -c1-5 冒号分隔符，显示第二到第四段,1-5个字符
  -r 反向排序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;locate -r '' 正则查找文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sort 
  -r 反向排序
  -t:　以冒号分隔符
  -n 数字形式排序
  +3 从第二列开始排　//-k3
  sort -t: -k3nr /etc/passwd   按第三列数字方式排倒序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wc 统计
  -l 行
  -w 单词
  -c 字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;uniq 统计
  cut -d: -f7 /etc/passwd |sort | uniq 第７列排序后　distinct。-c 统计行数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;diff 文件对比,可以生成patch文件
  patch -p0 &amp;lt; pathch文件　// -p 级别&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Describe linux/linux显示历史命令 here.</title><link href="http://liugehao.github.io/describe-linuxlinuxxian-shi-li-shi-ming-ling-here.html" rel="alternate"></link><updated>2013-08-09T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-09:describe-linuxlinuxxian-shi-li-shi-ming-ling-here.html</id><summary type="html">&lt;p&gt;使用 HISTTIMEFORMAT 显示时间戳&lt;/p&gt;
&lt;p&gt;当你从命令行执行 history 命令后，通常只会显示已执行命令的序号和命令本身。如果你想要查看命令历史的时间戳，那么可以执行：
{{{&lt;/p&gt;
&lt;h1&gt;export HISTTIMEFORMAT='%F %T '&lt;/h1&gt;
&lt;h1&gt;history | more&lt;/h1&gt;
&lt;p&gt;1 2008-08-05 19:02:39 service network restart
2 2008-08-05 19:02:39 exit
3 2008-08-05 19:02:39 id
4 2008-08-05 19:02:39 cat /etc/redhat-release
}}}
注意：这个功能只能用在当 HISTTIMEFORMAT 这个环境变量被设置之后，之后的那些新执行的 bash 命令才会被打上正确的时间戳。在此之前的所有命令，都将会显示成设置 HISTTIMEFORMAT 变量的时间。&lt;/p&gt;</summary></entry><entry><title>Describe linux/gwan g-wan key value store here.</title><link href="http://liugehao.github.io/describe-linuxgwan-g-wan-key-value-store-here.html" rel="alternate"></link><updated>2013-08-07T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-07:describe-linuxgwan-g-wan-key-value-store-here.html</id><summary type="html">&lt;p&gt;add data: http://localhost:8080/?kv4.c&amp;amp;act=a&lt;/p&gt;
&lt;p&gt;get data:  http://localhost:8080/?kv4.c&amp;amp;body=999999&lt;/p&gt;
&lt;p&gt;首先定义结构　record_t　指针，分配内存空间，存储数据，添加进k/v存储。&lt;/p&gt;
&lt;p&gt;{{{#!highlight c&lt;/p&gt;
&lt;h1&gt;include "gwan.h" // G-WAN exported functions&lt;/h1&gt;
&lt;h1&gt;include &lt;malloc.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;string.h&gt;&lt;/h1&gt;
&lt;h1&gt;include &lt;stdlib.h&gt;&lt;/h1&gt;
&lt;p&gt;typedef struct record_s // this is a user-defined 'record' structure
{
   char &lt;em&gt;name;  // the Key(name) is a field of the Value(name, email)
   char &lt;/em&gt;email; 
   u32   id;    &lt;br /&gt;
} record_t;&lt;/p&gt;
&lt;p&gt;int main(int argc, char &lt;em&gt;argv[])
{
    xbuf_t &lt;/em&gt;reply = get_reply(argv);
    char &lt;em&gt;act="", &lt;/em&gt;body="";
    get_arg("act=", &amp;amp;act, argc, argv);&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;get_arg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;xbuf_xcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-- %s --- %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;act&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;kv_t&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;US_VHOST_DATA&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//persistent ptr&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;forum_store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//convenience pointer (var-&amp;gt;m instead of (*var)-&amp;gt;m)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;vhost_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kv_t&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="c1"&gt;//threads and posts stored here&lt;/span&gt;

    &lt;span class="nx"&gt;kv_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;users&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="n"&gt;forum_store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;vhost_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;act&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;kv_item&lt;/span&gt; &lt;span class="nb"&gt;item&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;record_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;u32&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="err"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    char email&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;;
    while(i&lt;span class="nt"&gt;&amp;lt; 15000000&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="na"&gt;sprintf&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;str&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;%&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;,&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="err"&gt;);&lt;/span&gt;
        &lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="na"&gt;sprintf&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;%&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;,&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="na"&gt;3&lt;/span&gt;&lt;span class="err"&gt;);&lt;/span&gt;
        &lt;span class="na"&gt;record =&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="s"&gt;(record_t*)malloc(sizeof(record_t));&lt;/span&gt;
        &lt;span class="na"&gt;record-&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;name = (char*)strdup(str);
        record-&amp;gt;email = (char*)strdup(email);
        record-&amp;gt;id = i;
        item.key = (char *)&lt;span class="ni"&gt;&amp;amp;record-&amp;gt;id;&lt;/span&gt;
        item.klen = sizeof(u32);//sizeof(str) - 1; // faster
        item.val = (char*)record;
        item.flags = 0;
        kv_add(forum_store, &lt;span class="ni"&gt;&amp;amp;item);&lt;/span&gt; // add an entry to the name_dat Store index

        i++;
    }
}
xbuf_xcat(reply, &amp;quot;&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Count&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;: %d key(s) in KV store&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&amp;quot;,
forum_store-&amp;gt;nbr_items);

u32 val=atof(body);
//printf(&amp;quot;%s, %d\n&amp;quot;, body, val);
record_t *record = (record_t*)kv_get(forum_store, (char*)&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;val, sizeof(u32));

xbuf_xcat(reply,
        &amp;quot;&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;record with id = &amp;#39;%u&amp;#39; name&amp;#39;s field: \&amp;quot;%s\&amp;quot;, email: %s &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&amp;quot;,
        val,
        record ? record-&amp;gt;name : &amp;quot;&lt;span class="nt"&gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;#ff4040&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;not found&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;&amp;quot;,
record ? record-&amp;gt;email : &amp;quot;&lt;span class="nt"&gt;&amp;lt;font&lt;/span&gt; &lt;span class="na"&gt;color=&lt;/span&gt;&lt;span class="s"&gt;#ff4040&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;not found&lt;span class="nt"&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;&amp;quot;);

//char n&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; = &amp;quot;100010&amp;quot;;
//record_t *p = (record_t *)kv_get(forum_store, body, 6); // 0:not found
//      xbuf_xcat(reply, &amp;quot;&lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;pierre&amp;#39;s email address: %s &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&amp;quot;, p-&amp;gt;email);

return 200; // return an HTTP code (200:&amp;#39;OK&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/weighttp install here.</title><link href="http://liugehao.github.io/describe-linuxweighttp-install-here.html" rel="alternate"></link><updated>2013-08-07T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-08-07:describe-linuxweighttp-install-here.html</id><summary type="html">&lt;p&gt;wiki: http://redmine.lighttpd.net/projects/weighttp/wiki
{{{
git clone git://git.lighttpd.net/weighttp
cd weighttp
./waf configure
}}}
{{{
checking for libary ev :not found
}}}
libev: http://dist.schmorp.de/libev/
{{{
wget http://dist.schmorp.de/libev/libev-4.15.tar.gz
tar -zxf libev-4.15.tar.gz
cd libev-4.15 
./configure
make &amp;amp;&amp;amp; make install
ldconfig
}}}
{{{
./waf build&lt;/p&gt;
&lt;p&gt;./waf install #root
}}}&lt;/p&gt;
&lt;p&gt;{{{
[root@localhost lib]# weighttp
weighttp: error while loading shared libraries: libev.so.4: cannot open shared object file: No such file or directory&lt;/p&gt;
&lt;p&gt;[root@localhost libev-4.15]# find / -name libev.so.4
/usr/local/lib/libev.so.4&lt;/p&gt;
&lt;p&gt;ln -s /usr/local/lib/libev.so.4 /usr/lib/libev.so.4&lt;/p&gt;
&lt;p&gt;or &lt;/p&gt;
&lt;p&gt;vi /etc/ld.so.conf.d/local.conf
add a line
/usr/local/lib
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/rhel6 install apache here.</title><link href="http://liugehao.github.io/describe-linuxrhel6-install-apache-here.html" rel="alternate"></link><updated>2013-07-30T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-30:describe-linuxrhel6-install-apache-here.html</id><summary type="html">&lt;p&gt;{{{
wget ftp://ftp.pbone.net/mirror/ftp.sourceforge.net/pub/sourceforge/f/fu/fuduntu/sources/apr-1.4.6-1.fu2013.src.rpm
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
wget ftp://ftp.pbone.net/mirror/ftp.sourceforge.net/pub/sourceforge/f/fu/fuduntu/sources/apr-util-1.4.1-3.fu2013.src.rpm
./configure --with-apr=/usr/local/apr &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
wget &lt;apache.src&gt;
./configure --prefix=/usr/local/apache --enable-so --enable-mods-shared=most --with-mpm=worker 
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/debian安装wn722n(ath9k-htc) here.</title><link href="http://liugehao.github.io/describe-linuxdebianan-zhuang-wn722nath9k-htc-here.html" rel="alternate"></link><updated>2013-07-29T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-29:describe-linuxdebianan-zhuang-wn722nath9k-htc-here.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;Add a "non-free" component to /etc/apt/sources.list, for example:
{{{&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Debian 7.0 "Wheezy"&lt;/h1&gt;
&lt;p&gt;deb http://http.debian.net/debian/ wheezy main contrib non-free
}}}
 1. Update the list of available packages and install the firmware-atheros package:
{{{&lt;/p&gt;
&lt;h1&gt;apt-get update &amp;amp;&amp;amp; apt-get install firmware-atheros&lt;/h1&gt;
&lt;p&gt;}}}
 1. Connect the device to your system. The ath9k_htc kernel module is automatically loaded for supported devices.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure your wireless interface as appropriate. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多相关：[[http://wiki.debian.org/ath9k_htc]]&lt;/p&gt;</summary></entry><entry><title>Describe linux/AB 测试nginx socket: Too many open files (24) here.</title><link href="http://liugehao.github.io/describe-linuxab-ce-shi-nginx-socket-too-many-open-files-24-here.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-28:describe-linuxab-ce-shi-nginx-socket-too-many-open-files-24-here.html</id><summary type="html">&lt;p&gt;su - root&lt;/p&gt;
&lt;p&gt;ulimit -n 35768(要改的数)&lt;/p&gt;
&lt;p&gt;PS:这应该不难理解，linux是通过文件来对设备进行管理，ulimit -n是设置同时打开文件的最大数值，ab中每一个连接打开一个设备文件，所以设置这个值就可以解决了。&lt;/p&gt;
&lt;p&gt;详细配置：[[linux/sysctl.conf limits.conf]]&lt;/p&gt;</summary></entry><entry><title>Describe linux/apache ab 测试 here.</title><link href="http://liugehao.github.io/describe-linuxapache-ab-ce-shi-here.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-28:describe-linuxapache-ab-ce-shi-here.html</id><summary type="html">&lt;p&gt;{{{
sudo apt-get install apache2-utils&lt;/p&gt;
&lt;p&gt;ab -n 10000 -c 500 http://www.baidu.com/
-c 并发用户数
-n 请求总数
}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/debian中文乱码 here.</title><link href="http://liugehao.github.io/describe-linuxdebianzhong-wen-luan-ma-here.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-28:describe-linuxdebianzhong-wen-luan-ma-here.html</id><summary type="html">&lt;p&gt;{{{
apt-get install ttf-wqy-zenhei（安装字体） 　　
apt-get install ibus ibus-gtk ibus-pinyin（安装输入法）
打开终端，执行命令： &lt;/p&gt;
&lt;p&gt;dpkg-reconfigure locales
安装时选择的是英语，会缺少中文字体，用以下命令安装字体：&lt;/p&gt;
&lt;p&gt;apt-get install xfonts-intl-chinese wqy* &lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>Describe linux/flash安装 here.</title><link href="http://liugehao.github.io/describe-linuxflashan-zhuang-here.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-28:describe-linuxflashan-zhuang-here.html</id><summary type="html">&lt;p&gt;Installing using the plugin tar.gz:
 1. Unpack the plugin tar.gz and copy the files to the appropriate location.&lt;br /&gt;
 1. Save the plugin tar.gz locally and note the location the file was saved to.
 1. Launch terminal and change directories to the location the file was saved to.
 1. Unpack the tar.gz file.  Once unpacked you will see the following:
     libflashplayer.so
     /usr
 1. Identify the location of the browser plugins directory, based on your Linux distribution and Firefox version
 1. Copy libflashplayer.so to the appropriate browser plugins directory.  At the prompt type:
        + cp libflashlayer.so &lt;BrowserPluginsLocation&gt;
 1. Copy the Flash Player Local Settings configurations files to the /usr directory.  At the prompt type:
        + sudo cp -r usr/* /usr&lt;/p&gt;</summary></entry><entry><title>Describe linux/sysctl.conf limits.conf here.</title><link href="http://liugehao.github.io/describe-linuxsysctlconf-limitsconf-here.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-07-28:describe-linuxsysctlconf-limitsconf-here.html</id><summary type="html">&lt;p&gt;vi /etc/security/limits.conf
{{{
&lt;em&gt; soft    nproc   2047
&lt;/em&gt; hard    nproc   16384
&lt;em&gt; soft    nofile  65536
&lt;/em&gt; hard    nofile  65536
&lt;em&gt; soft   memlock  unlimited
&lt;/em&gt; hard   memlock  unlimited
}}}&lt;/p&gt;
&lt;p&gt;vi /etc/sysctl.conf
{{{
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
fs.file-max = 6815744
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.wmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_max = 1048576
fs.aio-max-nr = 1048576&lt;/p&gt;
&lt;p&gt;net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_syncookies = 1
}}}&lt;/p&gt;</summary></entry><entry><title>smb.conf</title><link href="http://liugehao.github.io/smbconf.html" rel="alternate"></link><updated>2013-06-13T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-06-13:smbconf.html</id><summary type="html">&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;Sample configuration file for the Samba suite for Debian GNU/Linux.&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;This is the main Samba configuration file. You should read the&lt;/h1&gt;
&lt;h1&gt;smb.conf(5) manual page in order to understand the options listed&lt;/h1&gt;
&lt;h1&gt;here. Samba has a huge number of configurable options most of which&lt;/h1&gt;
&lt;h1&gt;are not shown in this example&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;Some options that are often worth tuning have been included as&lt;/h1&gt;
&lt;h1&gt;commented-out examples in this file.&lt;/h1&gt;
&lt;h1&gt;- When such options are commented with ";", the proposed setting&lt;/h1&gt;
&lt;h1&gt;differs from the default Samba behaviour&lt;/h1&gt;
&lt;h1&gt;- When commented with "#", the proposed setting is the default&lt;/h1&gt;
&lt;h1&gt;behaviour of Samba but the option is considered important&lt;/h1&gt;
&lt;h1&gt;enough to be mentioned here&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;NOTE: Whenever you modify this file you should run the command&lt;/h1&gt;
&lt;h1&gt;"testparm" to check that you have not made any basic syntactic&lt;/h1&gt;
&lt;h1&gt;errors.&lt;/h1&gt;
&lt;h1&gt;A well-established practice is to name the original file&lt;/h1&gt;
&lt;h1&gt;"smb.conf.master" and create the "real" config file with&lt;/h1&gt;
&lt;h1&gt;testparm -s smb.conf.master &amp;gt;smb.conf&lt;/h1&gt;
&lt;h1&gt;This minimizes the size of the really used smb.conf file&lt;/h1&gt;
&lt;h1&gt;which, according to the Samba Team, impacts performance&lt;/h1&gt;
&lt;h1&gt;However, use this with caution if your smb.conf file contains nested&lt;/h1&gt;
&lt;h1&gt;"include" statements. See Debian bug #483187 for a case&lt;/h1&gt;
&lt;h1&gt;where using a master file is not a good idea.&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;======================= Global Settings =======================&lt;/h1&gt;
&lt;p&gt;[global]&lt;/p&gt;
&lt;h2&gt;Browsing/Identification&lt;/h2&gt;
&lt;h1&gt;Change this to the workgroup/NT-domain name your Samba server will part of&lt;/h1&gt;
&lt;p&gt;workgroup = WORKGROUP
   display charset =UTF-8
   unix charset=UTF-8
   doc charset = cp936
   client lanman auth = yes
   lanman auth = yes&lt;/p&gt;
&lt;h1&gt;server string is the equivalent of the NT Description field&lt;/h1&gt;
&lt;p&gt;server string = %h server (Samba, Ubuntu)&lt;/p&gt;
&lt;h1&gt;Windows Internet Name Serving Support Section:&lt;/h1&gt;
&lt;h1&gt;WINS Support - Tells the NMBD component of Samba to enable its WINS Server&lt;/h1&gt;
&lt;h1&gt;wins support = no&lt;/h1&gt;
&lt;h1&gt;WINS Server - Tells the NMBD components of Samba to be a WINS Client&lt;/h1&gt;
&lt;h1&gt;Note: Samba can be either a WINS Server, or a WINS Client, but NOT both&lt;/h1&gt;
&lt;p&gt;;   wins server = w.x.y.z&lt;/p&gt;
&lt;h1&gt;This will prevent nmbd to search for NetBIOS names through DNS.&lt;/h1&gt;
&lt;p&gt;dns proxy = no&lt;/p&gt;
&lt;h1&gt;What naming service and in what order should we use to resolve host names&lt;/h1&gt;
&lt;h1&gt;to IP addresses&lt;/h1&gt;
&lt;p&gt;;   name resolve order = lmhosts host wins bcast&lt;/p&gt;
&lt;h4&gt;Networking&lt;/h4&gt;
&lt;h1&gt;The specific set of interfaces / networks to bind to&lt;/h1&gt;
&lt;h1&gt;This can be either the interface name or an IP address/netmask;&lt;/h1&gt;
&lt;h1&gt;interface names are normally preferred&lt;/h1&gt;
&lt;p&gt;;   interfaces = 127.0.0.0/8 eth0&lt;/p&gt;
&lt;h1&gt;Only bind to the named interfaces and/or networks; you must use the&lt;/h1&gt;
&lt;h1&gt;'interfaces' option above to use this.&lt;/h1&gt;
&lt;h1&gt;It is recommended that you enable this feature if your Samba machine is&lt;/h1&gt;
&lt;h1&gt;not protected by a firewall or is a firewall itself.  However, this&lt;/h1&gt;
&lt;h1&gt;option cannot handle dynamic or non-broadcast interfaces correctly.&lt;/h1&gt;
&lt;p&gt;;   bind interfaces only = yes&lt;/p&gt;
&lt;h4&gt;Debugging/Accounting&lt;/h4&gt;
&lt;h1&gt;This tells Samba to use a separate log file for each machine&lt;/h1&gt;
&lt;h1&gt;that connects&lt;/h1&gt;
&lt;p&gt;log file = /var/log/samba/log.%m&lt;/p&gt;
&lt;h1&gt;Cap the size of the individual log files (in KiB).&lt;/h1&gt;
&lt;p&gt;max log size = 1000&lt;/p&gt;
&lt;h1&gt;If you want Samba to only log through syslog then set the following&lt;/h1&gt;
&lt;h1&gt;parameter to 'yes'.&lt;/h1&gt;
&lt;h1&gt;syslog only = no&lt;/h1&gt;
&lt;h1&gt;We want Samba to log a minimum amount of information to syslog. Everything&lt;/h1&gt;
&lt;h1&gt;should go to /var/log/samba/log.{smbd,nmbd} instead. If you want to log&lt;/h1&gt;
&lt;h1&gt;through syslog you should set the following parameter to something higher.&lt;/h1&gt;
&lt;p&gt;syslog = 0&lt;/p&gt;
&lt;h1&gt;Do something sensible when Samba crashes: mail the admin a backtrace&lt;/h1&gt;
&lt;p&gt;panic action = /usr/share/samba/panic-action %d&lt;/p&gt;
&lt;h6&gt;# Authentication&lt;/h6&gt;
&lt;h1&gt;"security = user" is always a good idea. This will require a Unix account&lt;/h1&gt;
&lt;h1&gt;in this server for every user accessing the server. See&lt;/h1&gt;
&lt;h1&gt;/usr/share/doc/samba-doc/htmldocs/Samba3-HOWTO/ServerType.html&lt;/h1&gt;
&lt;h1&gt;in the samba-doc package for details.&lt;/h1&gt;
&lt;p&gt;security = share
   username map =/etc/samba/smbusers&lt;/p&gt;
&lt;h1&gt;You may wish to use password encryption.  See the section on&lt;/h1&gt;
&lt;h1&gt;'encrypt passwords' in the smb.conf(5) manpage before enabling.&lt;/h1&gt;
&lt;p&gt;encrypt passwords = true&lt;/p&gt;
&lt;h1&gt;If you are using encrypted passwords, Samba will need to know what&lt;/h1&gt;
&lt;h1&gt;password database type you are using.&lt;/h1&gt;
&lt;p&gt;passdb backend = tdbsam
   obey pam restrictions = yes&lt;/p&gt;
&lt;h1&gt;This boolean parameter controls whether Samba attempts to sync the Unix&lt;/h1&gt;
&lt;h1&gt;password with the SMB password when the encrypted SMB password in the&lt;/h1&gt;
&lt;h1&gt;passdb is changed.&lt;/h1&gt;
&lt;p&gt;unix password sync = yes&lt;/p&gt;
&lt;h1&gt;For Unix password sync to work on a Debian GNU/Linux system, the following&lt;/h1&gt;
&lt;h1&gt;parameters must be set (thanks to Ian Kahan &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#60;&amp;#107;&amp;#97;&amp;#104;&amp;#97;&amp;#110;&amp;#64;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#114;&amp;#109;&amp;#97;&amp;#116;&amp;#105;&amp;#107;&amp;#46;&amp;#116;&amp;#117;&amp;#45;&amp;#109;&amp;#117;&amp;#101;&amp;#110;&amp;#99;&amp;#104;&amp;#101;&amp;#110;&amp;#46;&amp;#100;&amp;#101;"&gt;&amp;lt;&amp;#107;&amp;#97;&amp;#104;&amp;#97;&amp;#110;&amp;#64;&amp;#105;&amp;#110;&amp;#102;&amp;#111;&amp;#114;&amp;#109;&amp;#97;&amp;#116;&amp;#105;&amp;#107;&amp;#46;&amp;#116;&amp;#117;&amp;#45;&amp;#109;&amp;#117;&amp;#101;&amp;#110;&amp;#99;&amp;#104;&amp;#101;&amp;#110;&amp;#46;&amp;#100;&amp;#101;&lt;/a&gt; for&lt;/h1&gt;
&lt;h1&gt;sending the correct chat script for the passwd program in Debian Sarge).&lt;/h1&gt;
&lt;p&gt;passwd program = /usr/bin/passwd %u
   passwd chat = &lt;em&gt;Enter\snew\s&lt;/em&gt;\spassword:&lt;em&gt; %n\n &lt;/em&gt;Retype\snew\s&lt;em&gt;\spassword:&lt;/em&gt; %n\n &lt;em&gt;password\supdated\ssuccessfully&lt;/em&gt; .&lt;/p&gt;
&lt;h1&gt;This boolean controls whether PAM will be used for password changes&lt;/h1&gt;
&lt;h1&gt;when requested by an SMB client instead of the program listed in&lt;/h1&gt;
&lt;h1&gt;'passwd program'. The default is 'no'.&lt;/h1&gt;
&lt;p&gt;pam password change = yes&lt;/p&gt;
&lt;h1&gt;This option controls how unsuccessful authentication attempts are mapped&lt;/h1&gt;
&lt;h1&gt;to anonymous connections&lt;/h1&gt;
&lt;p&gt;map to guest = bad user&lt;/p&gt;
&lt;h6&gt;#### Domains&lt;/h6&gt;
&lt;h1&gt;Is this machine able to authenticate users. Both PDC and BDC&lt;/h1&gt;
&lt;h1&gt;must have this setting enabled. If you are the BDC you must&lt;/h1&gt;
&lt;h1&gt;change the 'domain master' setting to no&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;;   domain logons = yes&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;The following setting only takes effect if 'domain logons' is set&lt;/h1&gt;
&lt;h1&gt;It specifies the location of the user's profile directory&lt;/h1&gt;
&lt;h1&gt;from the client point of view)&lt;/h1&gt;
&lt;h1&gt;The following required a [profiles] share to be setup on the&lt;/h1&gt;
&lt;h1&gt;samba server (see below)&lt;/h1&gt;
&lt;p&gt;;   logon path = \%N\profiles\%U&lt;/p&gt;
&lt;h1&gt;Another common choice is storing the profile in the user's home directory&lt;/h1&gt;
&lt;h1&gt;(this is Samba's default)&lt;/h1&gt;
&lt;h1&gt;logon path = \%N\%U\profile&lt;/h1&gt;
&lt;h1&gt;The following setting only takes effect if 'domain logons' is set&lt;/h1&gt;
&lt;h1&gt;It specifies the location of a user's home directory (from the client&lt;/h1&gt;
&lt;h1&gt;point of view)&lt;/h1&gt;
&lt;p&gt;;   logon drive = H:&lt;/p&gt;
&lt;h1&gt;logon home = \%N\%U&lt;/h1&gt;
&lt;h1&gt;The following setting only takes effect if 'domain logons' is set&lt;/h1&gt;
&lt;h1&gt;It specifies the script to run during logon. The script must be stored&lt;/h1&gt;
&lt;h1&gt;in the [netlogon] share&lt;/h1&gt;
&lt;h1&gt;NOTE: Must be store in 'DOS' file format convention&lt;/h1&gt;
&lt;p&gt;;   logon script = logon.cmd&lt;/p&gt;
&lt;h1&gt;This allows Unix users to be created on the domain controller via the SAMR&lt;/h1&gt;
&lt;h1&gt;RPC pipe.  The example command creates a user account with a disabled Unix&lt;/h1&gt;
&lt;h1&gt;password; please adapt to your needs&lt;/h1&gt;
&lt;p&gt;; add user script = /usr/sbin/adduser --quiet --disabled-password --gecos "" %u&lt;/p&gt;
&lt;h1&gt;This allows machine accounts to be created on the domain controller via the&lt;/h1&gt;
&lt;h1&gt;SAMR RPC pipe.&lt;/h1&gt;
&lt;h1&gt;The following assumes a "machines" group exists on the system&lt;/h1&gt;
&lt;p&gt;; add machine script  = /usr/sbin/useradd -g machines -c "%u machine account" -d /var/lib/samba -s /bin/false %u&lt;/p&gt;
&lt;h1&gt;This allows Unix groups to be created on the domain controller via the SAMR&lt;/h1&gt;
&lt;h1&gt;RPC pipe.&lt;/h1&gt;
&lt;p&gt;; add group script = /usr/sbin/addgroup --force-badname %g&lt;/p&gt;
&lt;h6&gt;#### Printing&lt;/h6&gt;
&lt;h1&gt;If you want to automatically load your printer list rather&lt;/h1&gt;
&lt;h1&gt;than setting them up individually then you'll need this&lt;/h1&gt;
&lt;h1&gt;load printers = yes&lt;/h1&gt;
&lt;h1&gt;lpr(ng) printing. You may wish to override the location of the&lt;/h1&gt;
&lt;h1&gt;printcap file&lt;/h1&gt;
&lt;p&gt;;   printing = bsd
;   printcap name = /etc/printcap&lt;/p&gt;
&lt;h1&gt;CUPS printing.  See also the cupsaddsmb(8) manpage in the&lt;/h1&gt;
&lt;h1&gt;cupsys-client package.&lt;/h1&gt;
&lt;p&gt;;   printing = cups
;   printcap name = cups&lt;/p&gt;
&lt;h6&gt;###### Misc&lt;/h6&gt;
&lt;h1&gt;Using the following line enables you to customise your configuration&lt;/h1&gt;
&lt;h1&gt;on a per machine basis. The %m gets replaced with the netbios name&lt;/h1&gt;
&lt;h1&gt;of the machine that is connecting&lt;/h1&gt;
&lt;p&gt;;   include = /home/samba/etc/smb.conf.%m&lt;/p&gt;
&lt;h1&gt;Most people will find that this option gives better performance.&lt;/h1&gt;
&lt;h1&gt;See smb.conf(5) and /usr/share/doc/samba-doc/htmldocs/Samba3-HOWTO/speed.html&lt;/h1&gt;
&lt;h1&gt;for details&lt;/h1&gt;
&lt;h1&gt;You may want to add the following on a Linux system:&lt;/h1&gt;
&lt;h1&gt;SO_RCVBUF=8192 SO_SNDBUF=8192&lt;/h1&gt;
&lt;h1&gt;socket options = TCP_NODELAY&lt;/h1&gt;
&lt;h1&gt;The following parameter is useful only if you have the linpopup package&lt;/h1&gt;
&lt;h1&gt;installed. The samba maintainer and the linpopup maintainer are&lt;/h1&gt;
&lt;h1&gt;working to ease installation and configuration of linpopup and samba.&lt;/h1&gt;
&lt;p&gt;;   message command = /bin/sh -c '/usr/bin/linpopup "%f" "%m" %s; rm %s' &amp;amp;&lt;/p&gt;
&lt;h1&gt;Domain Master specifies Samba to be the Domain Master Browser. If this&lt;/h1&gt;
&lt;h1&gt;machine will be configured as a BDC (a secondary logon server), you&lt;/h1&gt;
&lt;h1&gt;must set this to 'no'; otherwise, the default behavior is recommended.&lt;/h1&gt;
&lt;h1&gt;domain master = auto&lt;/h1&gt;
&lt;h1&gt;Some defaults for winbind (make sure you're not using the ranges&lt;/h1&gt;
&lt;h1&gt;for something else.)&lt;/h1&gt;
&lt;p&gt;;   idmap uid = 10000-20000
;   idmap gid = 10000-20000
;   template shell = /bin/bash&lt;/p&gt;
&lt;h1&gt;The following was the default behaviour in sarge,&lt;/h1&gt;
&lt;h1&gt;but samba upstream reverted the default because it might induce&lt;/h1&gt;
&lt;h1&gt;performance issues in large organizations.&lt;/h1&gt;
&lt;h1&gt;See Debian bug #368251 for some of the consequences of &lt;em&gt;not&lt;/em&gt;&lt;/h1&gt;
&lt;h1&gt;having this setting and smb.conf(5) for details.&lt;/h1&gt;
&lt;p&gt;;   winbind enum groups = yes
;   winbind enum users = yes&lt;/p&gt;
&lt;h1&gt;Setup usershare options to enable non-root users to share folders&lt;/h1&gt;
&lt;h1&gt;with the net usershare command.&lt;/h1&gt;
&lt;h1&gt;Maximum number of usershare. 0 (default) means that usershare is disabled.&lt;/h1&gt;
&lt;p&gt;;   usershare max shares = 100&lt;/p&gt;
&lt;h1&gt;Allow users who've been granted usershare privileges to create&lt;/h1&gt;
&lt;h1&gt;public shares, not just authenticated ones&lt;/h1&gt;
&lt;p&gt;usershare allow guests = yes&lt;/p&gt;
&lt;h1&gt;======================= Share Definitions =======================&lt;/h1&gt;
&lt;h1&gt;Un-comment the following (and tweak the other settings below to suit)&lt;/h1&gt;
&lt;h1&gt;to enable the default home directory shares.  This will share each&lt;/h1&gt;
&lt;h1&gt;user's home directory as \server\username&lt;/h1&gt;
&lt;p&gt;;[homes]
;   comment = Home Directories
;   browseable = no&lt;/p&gt;
&lt;h1&gt;By default, the home directories are exported read-only. Change the&lt;/h1&gt;
&lt;h1&gt;next parameter to 'no' if you want to be able to write to them.&lt;/h1&gt;
&lt;p&gt;;   read only = yes&lt;/p&gt;
&lt;h1&gt;File creation mask is set to 0700 for security reasons. If you want to&lt;/h1&gt;
&lt;h1&gt;create files with group=rw permissions, set next parameter to 0775.&lt;/h1&gt;
&lt;p&gt;;   create mask = 0700&lt;/p&gt;
&lt;h1&gt;Directory creation mask is set to 0700 for security reasons. If you want to&lt;/h1&gt;
&lt;h1&gt;create dirs. with group=rw permissions, set next parameter to 0775.&lt;/h1&gt;
&lt;p&gt;;   directory mask = 0700&lt;/p&gt;
&lt;h1&gt;By default, \server\username shares can be connected to by anyone&lt;/h1&gt;
&lt;h1&gt;with access to the samba server.  Un-comment the following parameter&lt;/h1&gt;
&lt;h1&gt;to make sure that only "username" can connect to \server\username&lt;/h1&gt;
&lt;h1&gt;This might need tweaking when using external authentication schemes&lt;/h1&gt;
&lt;p&gt;;   valid users = %S&lt;/p&gt;
&lt;h1&gt;Un-comment the following and create the netlogon directory for Domain Logons&lt;/h1&gt;
&lt;h1&gt;(you need to configure Samba to act as a domain controller too.)&lt;/h1&gt;
&lt;p&gt;;[netlogon]
;   comment = Network Logon Service
;   path = /home/samba/netlogon
;   guest ok = yes
;   read only = yes
;   share modes = no&lt;/p&gt;
&lt;h1&gt;Un-comment the following and create the profiles directory to store&lt;/h1&gt;
&lt;h1&gt;users profiles (see the "logon path" option above)&lt;/h1&gt;
&lt;h1&gt;(you need to configure Samba to act as a domain controller too.)&lt;/h1&gt;
&lt;h1&gt;The path below should be writable by all users so that their&lt;/h1&gt;
&lt;h1&gt;profile directory may be created the first time they log on&lt;/h1&gt;
&lt;p&gt;;[profiles]
;   comment = Users profiles
;   path = /home/samba/profiles
;   guest ok = no
;   browseable = no
;   create mask = 0600
;   directory mask = 0700&lt;/p&gt;
&lt;p&gt;[printers]
   comment = All Printers
   browseable = no
   path = /var/spool/samba
   printable = yes
   guest ok = no
   read only = yes
   create mask = 0700&lt;/p&gt;
&lt;h1&gt;Windows clients look for this share name as a source of downloadable&lt;/h1&gt;
&lt;h1&gt;printer drivers&lt;/h1&gt;
&lt;p&gt;[print$]&lt;/p&gt;
&lt;p&gt;comment = Printer Drivers
   path = /var/lib/samba/printers
   browseable = yes
   read only = yes
   guest ok = no&lt;/p&gt;
&lt;h1&gt;Uncomment to allow remote administration of Windows print drivers.&lt;/h1&gt;
&lt;h1&gt;You may need to replace 'lpadmin' with the name of the group your&lt;/h1&gt;
&lt;h1&gt;admin users are members of.&lt;/h1&gt;
&lt;h1&gt;Please note that you also need to set appropriate Unix permissions&lt;/h1&gt;
&lt;h1&gt;to the drivers directory for these users to have write rights in it&lt;/h1&gt;
&lt;p&gt;;   write list = root, @lpadmin&lt;/p&gt;
&lt;h1&gt;A sample share for sharing your CD-ROM with others.&lt;/h1&gt;
&lt;p&gt;;[cdrom]
;   comment = Samba server's CD-ROM
;   read only = yes
;   locking = no
;   path = /cdrom
;   guest ok = yes&lt;/p&gt;
&lt;h1&gt;The next two parameters show how to auto-mount a CD-ROM when the&lt;/h1&gt;
&lt;h1&gt;cdrom share i/s accesed. For this to work /etc/fstab must contain&lt;/h1&gt;
&lt;h1&gt;an entry like this:&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;/dev/scd0   /cdrom  iso9660 defaults,noauto,ro,user   0 0&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;The CD-ROM gets unmounted automatically after the connection to the&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;If you don't want to use auto-mounting/unmounting make sure the CD&lt;/h1&gt;
&lt;h1&gt;is mounted on /cdrom&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;;   preexec = /bin/mount /cdrom
;   postexec = /bin/umount /cdrom&lt;/p&gt;
&lt;p&gt;[share]&lt;/p&gt;
&lt;p&gt;comment=/home/ggjjlldd
browseable=yes
writeable=yes
public = yes
path=/&lt;/p&gt;
&lt;h1&gt;valid users=ggjjlldd&lt;/h1&gt;
&lt;p&gt;guest ok = yes
client lanman auth = yes
lanman auth = yes
}}}&lt;/p&gt;</summary></entry><entry><title>drupal安装模块上传错误</title><link href="http://liugehao.github.io/drupalan-zhuang-mo-kuai-shang-chuan-cuo-wu.html" rel="alternate"></link><updated>2013-06-07T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-06-07:drupalan-zhuang-mo-kuai-shang-chuan-cuo-wu.html</id><summary type="html">&lt;p&gt;装好drupal7后，安装模块时出现了这样的错误：
{{{&lt;/p&gt;
&lt;p&gt;WARNING: You are not using an encrypted connection, so your password will be sent in plain text. Learn more.&lt;/p&gt;
&lt;p&gt;To continue, provide your server connection details&lt;/p&gt;
&lt;p&gt;Connection method&lt;/p&gt;
&lt;p&gt;FTP CONNECTION SETTINGS
.....&lt;/p&gt;
&lt;p&gt;etc
}}}&lt;/p&gt;
&lt;p&gt;以前wordpress安装插件时也出现过类似的错误，我觉得可能是权限的问题，于是我给了整个module目录777的权限，再试，错误还在。&lt;/p&gt;
&lt;p&gt;于是上网找解决方法，发现有一个外国朋友的解决方案，如下：&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;p&gt;I had the same problem with drupal 7rc4 on ubuntu and nginx and for me just were the permissions of drupal files&lt;/p&gt;
&lt;p&gt;I solved it as follows&lt;/p&gt;
&lt;p&gt;open a termninal and write&lt;/p&gt;
&lt;p&gt;sudo chown www-data:www-data -R /var/www/drupal&lt;/p&gt;
&lt;p&gt;where www-data is nginx user (maybe is the same with apache) and /var/www/drupal is the path drupal installation&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;他也出现了同样的错误，不过是在ubuntu的nginx环境下，我的是centos的nginx环境，解决方法是一样的。他的nginx用户名是www-data，drupal安装在/var/www/drupal下，于是打开终端输入：
{{{
sudo chown www-data:www-data -R /var/www/drupal
}}}
就可以了。&lt;/p&gt;
&lt;p&gt;我的nginx用户名是www,drupal安装在/home/wwwroot下面，在终端中输入的是：
{{{
chown www:www -R /home/wwwroot
}}}
然后再安装模块，就没有错误提示了。&lt;/p&gt;
&lt;p&gt;好像以前wordpress出现这样的问题也是这么解决的，记在这里备用吧。&lt;/p&gt;</summary></entry><entry><title>在这里详述 linux/lvm kvm 扩容 缩小容量。也适用于host lvm卷调整</title><link href="http://liugehao.github.io/zai-zhe-li-xiang-shu-linuxlvm-kvm-kuo-rong-suo-xiao-rong-liang-ye-gua-yong-yu-host-lvmjuan-diao-zheng.html" rel="alternate"></link><updated>2013-05-22T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-05-22:zai-zhe-li-xiang-shu-linuxlvm-kvm-kuo-rong-suo-xiao-rong-liang-ye-gua-yong-yu-host-lvmjuan-diao-zheng.html</id><summary type="html">&lt;p&gt;== raw 镜像文件增加容量  ==
{{{
qemu-img info xp_4_test.disk01 #查看文件信息
qemu-img resize xp_4_test.disk01 +150M //更改大小
}}}
在windows中，查看磁盘，会出现空余容量。
==== win2003中 ====
　[[windows2003 extpart.exe更改C盘容量]] 无损增加容量，win2008 diskpart.exe
==== linux lvm ====
用free空间建立一个分区，把分区加入卷组，把卷组空间加入lvm。如果是／分区,用光盘引导进入rescue模式
{{{
fdisk /dev/vda
n //建立分区
p //主分区
lvm pvcreate /dev/vda4 //建立物理卷
lvm vgextend vg卷组名 /dev/vda4 //把物理卷添加到已有卷组
e2fsck -f /dev/vg卷组名/逻辑卷
lvm lvextend /dev/vg卷组名/逻辑卷 +1G //增加逻辑卷容量
resize2fs /dev/vg卷组名/逻辑卷
}}}&lt;/p&gt;
&lt;p&gt;== 缩小容量lvm逻辑卷容量 ==
 1. 在使用lvm命令前加lvm： lvm pvscan; lvm vgscan; lvm lvscan;
 1. 此时找不到/dev/VolGroup00/LogVol00（lvscan 逻辑卷状态不是ACTIVE时），需用lvm lvchange -ay /dev/VolGroup00/LogVol00 加载
 1. 在缩减之前需检测缩减之后的容量是否足够：e2fsck -f /dev/VolGroup00/LogVol00
 1. 调整文件系统 resize2fs /dev/VolGroup00/LogVol00 【newsize】
 1. 再调整逻辑卷 lvm lvreduce -L 【newsize】 /dev/VolGroup00/LogVol00
 1. fsck.ext4 /dev/VolGroup00/LogVol00
 1. '''缩小容量查看vg ＰＥ，lv ＬＥ，blocks是否足够，否则会出错。'''最大缩小容量等于(PE-LE)*PE size&lt;/p&gt;
&lt;p&gt;== 增加容量lvm逻辑卷容量 ==
 1. 在使用lvm命令前加lvm： lvm pvscan; lvm vgscan; lvm lvscan;
 1. 此时找不到/dev/VolGroup00/LogVol00（lvscan 逻辑卷状态不是ACTIVE时），需用lvm lvchange -ay /dev/VolGroup00/LogVol00 加载
 1. 在缩减之前需检测缩减之后的容量是否足够：e2fsck -f /dev/VolGroup00/LogVol00
 1. 调整文件系统  lvm lvextend -L +1G /dev/VolGroup00/LogVol00
 1. 再调整逻辑卷 resize2fs /dev/VolGroup00/LogVol00
 1. fsck.ext4 /dev/VolGroup00/LogVol00&lt;/p&gt;
&lt;p&gt;== 根分区调整 ==
 1. 通过安装光盘进入rescue模式。
 1. 询问是否加载根分区时，选择skip。
 1. 参考上面增减&lt;/p&gt;</summary></entry><entry><title>rhel5.7部署twitter storm</title><link href="http://liugehao.github.io/rhel57bu-shu-twitter-storm.html" rel="alternate"></link><updated>2013-04-16T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-04-16:rhel57bu-shu-twitter-storm.html</id><summary type="html">&lt;p&gt;== python install ==&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;wget http://python.org/ftp/python/2.7.4/Python-2.7.4.tgz&lt;/h1&gt;
&lt;h1&gt;tar zxvf Python-2.7.2.tgz&lt;/h1&gt;
&lt;h1&gt;cd Python-2.7.2&lt;/h1&gt;
&lt;h1&gt;./configure&lt;/h1&gt;
&lt;h1&gt;make&lt;/h1&gt;
&lt;h1&gt;make install&lt;/h1&gt;
&lt;h1&gt;vi /etc/ld.so.conf&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;     &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;/sbin/ldconfig&lt;/h1&gt;
&lt;p&gt;no acceptable C compiler found in $PATH&lt;/p&gt;
&lt;h1&gt;rpm -ivh gcc-4.1.2-51.el5.x86_64.rpm glibc-devel-2.5-65.x86_64.rpm glibc-headers-2.5-65.x86_64.rpm kernel-headers-2.6.18-274.el5.x86_64.rpm&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== zookeeper install ==&lt;/p&gt;
&lt;p&gt;{{{
wget http://labs.mop.com/apache-mirror/zookeeper/zookeeper-3.4.5/zookeeper-3.4.5.tar.gz&lt;/p&gt;
&lt;h1&gt;tar zxf zookeeper-3.3.3.tar.gz&lt;/h1&gt;
&lt;h1&gt;cp -R zookeeper-3.3.3 /usr/local/&lt;/h1&gt;
&lt;h1&gt;ln -s /usr/local/zookeeper-3.3.3/ /usr/local/zookeeper&lt;/h1&gt;
&lt;h1&gt;vi ~./bashrc&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;      &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ZOOKEEPER_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/usr/local/zookeeper&amp;quot;&lt;/span&gt;

      &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ZOOKEEPER_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;cp /usr/local/zookeeper/conf/zoo_sample.cfg /usr/local/zookeeper/conf/zoo.cfg&lt;/h1&gt;
&lt;h1&gt;sudo mkdir /tmp/zookeeper&lt;/h1&gt;
&lt;h1&gt;sudo mkdir /var/log/zookeeper&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== zeromq install ==&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;wget http://download.zeromq.org/zeromq-3.2.2.tar.gz&lt;/h1&gt;
&lt;h1&gt;tar zxf zeromq-3.2.2.tar.gz&lt;/h1&gt;
&lt;h1&gt;cd zeromq-3.2.2&lt;/h1&gt;
&lt;h1&gt;./configure&lt;/h1&gt;
&lt;h1&gt;make&lt;/h1&gt;
&lt;h1&gt;make install&lt;/h1&gt;
&lt;h1&gt;/sbin/ldconfig&lt;/h1&gt;
&lt;p&gt;rpm -ivh gcc-c++-4.1.2-51.el5.x86_64.rpm libstdc++-devel-4.1.2-51.el5.x86_64.rpm &lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== git ==&lt;/p&gt;
&lt;p&gt;{{{
rpm -ivh perl-DBI-1.52-2.el5.x86_64.rpm
rpm -ivh git-1.7.8.2-2.el5.rf.x86_64.rpm perl-Git-1.7.8.2-2.el5.rf.x86_64.rpm
}}}&lt;/p&gt;
&lt;p&gt;== jzmq install ==&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;git clone git://github.com/nathanmarz/jzmq.git&lt;/h1&gt;
&lt;h1&gt;cd jzmq&lt;/h1&gt;
&lt;h1&gt;./autogen.sh&lt;/h1&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;p&gt;autogen.sh: error: could not find libtool.  libtool is required to run autogen.sh.&lt;/p&gt;
&lt;h1&gt;yum install uuid-devel&lt;/h1&gt;
&lt;h1&gt;rpm -ivh libtool-1.5.22-7.el5_4.x86_64.rpm autoconf-2.59-12.noarch.rpm  automake-1.9.6-2.3.el5.noarch.rpm imake-1.0.2-3.x86_64.rpm&lt;/h1&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;./configure&lt;/h1&gt;
&lt;p&gt;checking for zmq_init in -lzmq... yes
configure: error: the JAVA_HOME environment variable must be set to your JDK location.&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;jdk install&lt;/h1&gt;
&lt;p&gt;解压jdk.tar.gz到任意目录&lt;/p&gt;
&lt;p&gt;/etc/profile文件   -- 全部用户有效&lt;/p&gt;
&lt;p&gt;在profile 文件的尾部面加入&lt;/p&gt;
&lt;p&gt;JAVA_HOME=/usr/java/jdk1.5.0_16  -- jdk 的安装路径
PATH=$JAVA_HOME/bin:$PATH
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar &lt;/p&gt;
&lt;p&gt;export JAVA_HOME
export PATH
export CLASSPATH
export CATALINA_HOME    &lt;/p&gt;
&lt;p&gt;保存 退出
在shell输入 source /etc/profile&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;hr /&gt;
&lt;h1&gt;make&lt;/h1&gt;
&lt;h1&gt;make install&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== storm install ==&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;git clone git://github.com/nathanmarz/storm.git&lt;/h1&gt;
&lt;p&gt;wget http://cloud.github.com/downloads/nathanmarz/storm/storm-0.8.1.zip
cp -R storm /usr/local/
vi ~/.bashrc
          export STORM_HOME=/usr/local/storm-0.7.1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;      &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;STORM_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;=== lein install ===&lt;/p&gt;
&lt;p&gt;{{{
   1. Make sure you have JDK 6 or later.
   2. Download the script.
   3. Place it on your $PATH. (~/bin is a good choice if it is on your path.)
   4. Set it to be executable. (chmod 755 ~/bin/lein)&lt;/p&gt;
&lt;p&gt;wget https://raw.github.com/technomancy/leiningen/stable/bin/lein&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;== zoo.cfg ==&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;The number of milliseconds of each tick&lt;/h1&gt;
&lt;p&gt;tickTime=2000&lt;/p&gt;
&lt;h1&gt;The number of ticks that the initial&lt;/h1&gt;
&lt;h1&gt;synchronization phase can take&lt;/h1&gt;
&lt;p&gt;initLimit=10&lt;/p&gt;
&lt;h1&gt;The number of ticks that can pass between&lt;/h1&gt;
&lt;h1&gt;sending a request and getting an acknowledgement&lt;/h1&gt;
&lt;p&gt;syncLimit=5&lt;/p&gt;
&lt;h1&gt;the directory where the snapshot is stored.&lt;/h1&gt;
&lt;p&gt;dataDir=/state/partition1/tmp/zookeeper/data
dataLogDir=/state/partition1/tmp/zookeeper/log&lt;/p&gt;
&lt;h1&gt;the port at which the clients will connect&lt;/h1&gt;
&lt;p&gt;clientPort=2181
server.0=cluster:2888:3888
server.1=compute-0-0:2888:3888
server.2=compute-0-1:2888:3888
机器名不好用的话，改为ＩＰ&lt;/p&gt;
&lt;h1&gt;echo 0 &amp;gt; /state/partition1/tmp/zookeeper/data/myid&lt;/h1&gt;
&lt;p&gt;这一步是每台电脑上都不同的。具体的对应关系参见zoo.cfg中的server.x=hostname:portNumber:portNumber。
}}}&lt;/p&gt;
&lt;p&gt;== 监控 ==&lt;/p&gt;
&lt;p&gt;{{{
nimbus上，运行storm ui ,然后浏览器访问http://localhost:8080
}}}&lt;/p&gt;
&lt;p&gt;== 部署任务  ==&lt;/p&gt;
&lt;p&gt;{{{
[root@cluster target]# storm jar storm-starter-0.0.1-SNAPSHOT.jar storm.starter.WordCountTopology wordcountTop
}}}&lt;/p&gt;
&lt;p&gt;vi /etc/sysconfig/network　rhel修改主机名
vi /etc/sysconfig/network-script/ifcfg-eth0 修改ＩＰ　
多台机器，storm.yaml zoo.cfg要一致&lt;/p&gt;</summary></entry><entry><title>nginx php 504</title><link href="http://liugehao.github.io/nginx-php-504.html" rel="alternate"></link><updated>2013-03-14T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-03-14:nginx-php-504.html</id><summary type="html">&lt;p&gt;nginx.conf http段
{{{
fastcgi_connect_timeout 300s;
　　fastcgi_send_timeout 300s;
　　fastcgi_read_timeout 300s;
　　fastcgi_buffer_size 128k;
　　fastcgi_buffers 8 128k;#8 128
　　fastcgi_busy_buffers_size 256k;
　　fastcgi_temp_file_write_size 256k;
　　fastcgi_intercept_errors on;
}}}
　　这里最主要的设置是前三条，即
{{{
　　fastcgi_connect_timeout 300s;
　　fastcgi_send_timeout 300s;
　　fastcgi_read_timeout 300s;
}}}&lt;/p&gt;</summary></entry><entry><title>ubuntu安装xbmc</title><link href="http://liugehao.github.io/ubuntuan-zhuang-xbmc.html" rel="alternate"></link><updated>2013-02-26T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-02-26:ubuntuan-zhuang-xbmc.html</id><summary type="html">&lt;p&gt;{{{
apt-get update
sudo apt-get install xbmc xinit x11-xserver-utils
sudo adduser xbmc --gecos XBMC
sudo usermod --group audio,video,fuse,cdrom,plugdev xbmc&lt;/p&gt;
&lt;p&gt;sudo vi /etc/init/tty1.conf
}}}
把exec /sbin/getty -8 38400 tty1 换成 exec /bin/login -f xbmc &lt;/dev/tty1 &gt; /dev/tty1 2&amp;gt;&amp;amp;1 ，可以自动登录。
{{{&lt;/p&gt;
&lt;h1&gt;exec /sbin/getty -8 38400 tty1&lt;/h1&gt;
&lt;p&gt;exec /bin/login -f xbmc &lt;/dev/tty1 &gt; /dev/tty1 2&amp;gt;&amp;amp;1
}}}
xbmc帐号下  .bash_profile 文件自动运行xbmc.
{{{
$cat .bash_profile &lt;/p&gt;
&lt;p&gt;case "&lt;code&gt;tty&lt;/code&gt;" in
/dev/tty1) clear &amp;amp;&amp;amp; startx &amp;amp;&amp;gt;/dev/null;;
esac&lt;/p&gt;
&lt;p&gt;$cat .xsession&lt;/p&gt;
&lt;p&gt;exec xbmc --standalone&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;http://bbs.htpc1.com/viewthread.php?tid=88605&amp;amp;page=1&amp;amp;highlight=xbmc+nas+%CF%C2%D4%D8#pid1618908&lt;/p&gt;
&lt;p&gt;== MLDonkey下载服务设置 ==&lt;/p&gt;
&lt;p&gt;{{{
ubuntu下安装MLDonkey很简单，更新下安装包信息库，直接安装有可以了：
sudo apt-get update
sudo apt-get install mldonkey-server
复制代码
安装过程提示是否开机启动MLDonkey，我选择了no，不过作为NAS服务器选yes也许更合适。&lt;/p&gt;
&lt;p&gt;既然选择了No，就得手工启动了，让它在后台运行：
mlnet &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
复制代码
注意：如果你安装是选择了开机启动，可以用以下命令停止和启动mldonkey：
sudo /etc/init.d/mldonkey-server stop
sudo /etc/init.d/mldonkey-server start
复制代码
现在先通过telnet进行初步设置：
telnet 127.0.0.1 4000
复制代码
127.0.0.1表示访问本地服务，4000是mldonkey的默认telnet管理端口。进入管理功能后出现&amp;gt;提示符，我们先取得管理权限（现在密码是空）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;auth admin ""&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后设置下管理密码（下面的newpasswd就是密码，用你自己喜欢的代替吧）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;passwd newpasswd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再设置下远程管理的ip范围：
set allowed_ips "127.0.0.1 192.168.255.255"&lt;/p&gt;
&lt;p&gt;这表示本机地址或者局域网内的地址都可访问管理端口。现在可以退出管理了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;quit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;mldonkey启动后，它会在当前用户的home目录创建一个隐藏的配置文件目录（~/.mldonkey），所有配置及工作文件都在里面。其中下载文件存放的临时目录就是~/.mldonkey/temp，由于我的数据磁盘和系统磁盘是两个不同物理盘，而我的home目录是在系统盘上，下载的电影将保存在数据盘上，这样下载完成后又会拷贝一次，太不环保了。而mldonkey对temp目录的定义是相对路径，无法定义到其它位置。咱就用软链接方式来解决它。先在删除~/.mldonkey/temp，然后在我的数据盘建立一个目录/mnt/data1/temp，注意设置目录访问权限，然后用这个命令：
ln -s /mnt/data1/temp ~/.mldonkey/temp
复制代码
这样看起来目录在系统盘，其实文件都存放在数据盘，下载完成就不用再真正的复制一回了。&lt;/p&gt;
&lt;p&gt;注意：如果你使用开机启动或者sudo /etc/init.d/mldonkey-server start命令启动，配置文件在/var/lib/mldonkey/目录中&lt;/p&gt;
&lt;p&gt;现在重启一下mldonkey就可以到任意一台联网的电脑上通过浏览器设置及管理下载了。在浏览器中打开我的nas服务器地址，输入管理员密码：&lt;/p&gt;
&lt;p&gt;先看看我的共享目录设置，这里面incoming_files和incoming_directories类型的共享是必须有的，下载完成的东西都被扔到这里。&lt;/p&gt;
&lt;p&gt;其他配置网上很多教程，就不细说了。尝试下载看看，速度不太稳定，不知道还有什么可以改进的地方。&lt;/p&gt;
&lt;p&gt;MLDonkey优化说明
这段时间一边使用一边调整设置，终于能让mldonkey保持满速运行了，把我的主要设置参数列示如下：
max_hard_upload_rate　40
max_hard_download_rate　200（我是1M宽带，顶天就130几K，你应该根据自己的带宽进行设置，或者设为0表示不限制速度）
max_opened_connections　500（这个参数很重要，网上很多优化教程唯一没提到这个参数，默认值200。我开始一直达不到满速，加大这个值就马上满速了）&lt;/p&gt;
&lt;p&gt;ED2K-force_client_high_id　enable（这两个参数是强制高ID，设置的同时要确保电驴用到的端口在宽带路由器上做了端口映射，需要映射的端口号可通过浏览器管理时到help+－－info界面查询）
ED2K-force_high_id　enable
ED2K-max_connected_servers　10（设置服务器最大连接数，默认为3，其实设太大也没用，一般稳定下来也就三四个左右）&lt;/p&gt;
&lt;p&gt;enable_overnet　enable
enable_kademlia　enable（激活KAD网络）&lt;/p&gt;
&lt;p&gt;client_name　[CHN][VeryCD]taxigps（推荐设置成[CHN][VeryCD]yourname的形式
}}}&lt;/p&gt;</summary></entry><entry><title>ubuntu上配置nfs</title><link href="http://liugehao.github.io/ubuntushang-pei-zhi-nfs.html" rel="alternate"></link><updated>2013-02-21T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-02-21:ubuntushang-pei-zhi-nfs.html</id><summary type="html">&lt;p&gt;本文主要介绍Ubuntu 10.04上NFS服务的安装、配置。&lt;/p&gt;
&lt;p&gt;安装NFS相关的软件包
{{{
$ sudo apt-get install nfs-kernel-server 
}}}
进行配置
与之相关的配置文件有：&lt;/p&gt;
&lt;p&gt;/etc/default/nfs-kernel-server
{{{
NEED_SVCGSSD=no # no is default
}}}
注释： 因为我们并不打算启用NFSv4 安全配置
注意： 如果启用，客户端也必须启用&lt;/p&gt;
&lt;p&gt;/etc/default/nfs-common
这是一个common配置文件，也就是说服务器端和客户端都要有相同的配置。
{{{
NEED_IDMAPD=yes # 此项将打开ID映射
NEED_GSSD=no # no is default
}}}
注释：ID映射用于解决服务器端UID与客户机UID不同，而无法访问资源的情况。通过UID映射，只需要相同的用户名即可。&lt;/p&gt;
&lt;p&gt;/etc/idmapd.conf
既然启用了ID映射，就需要配置：
{{{
[Mapping]&lt;/p&gt;
&lt;p&gt;Nobody-User = nobody
Nobody-Group = nogroup
}}}
/etc/exports
{{{
/home/lesca/ARM 192.168.1.0/24(rw,nohide,insecure,sync,no_root_squash)
}}}
选项解释：&lt;/p&gt;
&lt;p&gt;rw - 可读写
nohide - 如果被挂载的目录下的其他目录也是挂载的，此选项将使它们可见
insecure - 允许客户端不使用保留端口
sync - 每次写操作要同步到物理存储器上（而不是仅写入内存）
no_root_squash - 当客户端以root的UID/GID（=0）挂载时，不会分配一个匿名UID/GID（也就是说它创建的文件将属于root）
重启NFS服务
{{{
$ sudo /etc/init.d/nfs-kernel-server restart
}}}
说明：如果只是更新/etc/exports，只需要运行
{{{
$ sudo exportfs -ra 
}}}
即可生效&lt;/p&gt;
&lt;p&gt;挂载
客户端必须安装nfs-common
{{{
$ sudo apt-get install nfs-common
$ sudo mount -t nfs 192.168.1.101:/home/lesca/ARM /home/lesca/test
}}}&lt;/p&gt;</summary></entry><entry><title>xbmc安装万能声卡驱动</title><link href="http://liugehao.github.io/xbmcan-zhuang-mo-neng-sheng-qia-qu-dong.html" rel="alternate"></link><updated>2013-02-18T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-02-18:xbmcan-zhuang-mo-neng-sheng-qia-qu-dong.html</id><summary type="html">&lt;p&gt;{{{
sudo apt-get install alsa-utils
}}}
然后执行
{{{
sudo alsamixer
}}}
按‘m'，把MM改成00，MM状态是静音。
按上下，调整音量。&lt;/p&gt;</summary></entry><entry><title>Cannot set LC_ALL to default locale: No such file or directory</title><link href="http://liugehao.github.io/cannot-set-lc_all-to-default-locale-no-such-file-or-directory.html" rel="alternate"></link><updated>2013-02-05T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-02-05:cannot-set-lc_all-to-default-locale-no-such-file-or-directory.html</id><summary type="html">&lt;p&gt;{{{
locale: Cannot set LC_CTYPE to default locale: No such file or directory
locale: Cannot set LC_MESSAGES to default locale: No such file or directory
locale: Cannot set LC_ALL to default locale: No such file or directory
}}}
解决办法
{{{
sudo locale-gen --lang zh_CN.UTF-8
}}}&lt;/p&gt;</summary></entry><entry><title>ubuntu 12.10中add-apt-repository的软件包</title><link href="http://liugehao.github.io/ubuntu-1210zhong-add-apt-repositoryde-ruan-jian-bao.html" rel="alternate"></link><updated>2013-02-05T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-02-05:ubuntu-1210zhong-add-apt-repositoryde-ruan-jian-bao.html</id><summary type="html">&lt;p&gt;ubuntu 12.10 中add-apt-repository已经不在python-software-properties包中了。&lt;/p&gt;
&lt;p&gt;它在　software-properties-common中&lt;/p&gt;
&lt;p&gt;{{{
sudo aptitude install software-properties-common
}}}&lt;/p&gt;</summary></entry><entry><title>## page was renamed from linux/redhat上安装nginx和php</title><link href="http://liugehao.github.io/page-was-renamed-from-linuxredhatshang-an-zhuang-nginxhe-php.html" rel="alternate"></link><updated>2013-01-14T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-01-14:page-was-renamed-from-linuxredhatshang-an-zhuang-nginxhe-php.html</id><summary type="html">&lt;p&gt;= redhat上安装nginx和php,mysql =
支持oracle,先安装下面２个包，从oracle网站下载相应版本。
{{{
oracle-instantclient-basic-10.2.0.3-1.x86_64.rpm
oracle-instantclient-devel-10.2.0.3-1.x86_64.rpm 
}}}&lt;/p&gt;
&lt;p&gt;http://vladgh.com/blog/install-nginx-and-php-533-php-fpm-mysql-and-apc
{{{
yum install pcre-devel
./configure    --prefix=/opt/nginx    --conf-path=/etc/nginx/nginx.conf    --pid-path=/var/run/nginx.pid    --lock-path=/var/lock/nginx.lock    --http-log-path=/var/log/nginx/access.log    --error-log-path=/var/log/nginx/error.log    --http-client-body-temp-path=/var/lib/nginx/body    --http-proxy-temp-path=/var/lib/nginx/proxy    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi    --http-scgi-temp-path=/var/lib/nginx/scgi    --with-http_ssl_module    --with-http_stub_status_module    --user=apache    --group=apache    --without-mail_pop3_module    --without-mail_imap_module    --without-mail_smtp_module&lt;/p&gt;
&lt;p&gt;yum install libXpm-devel libX11-devel libXdmcp-devel xorg-x11-proto-devel mesa-ligGl-devel freetype-devel&lt;/p&gt;
&lt;p&gt;./configure    --prefix=/opt/php5    --with-config-file-path=/opt/php5/etc    --with-config-file-scan-dir=/opt/php5/etc/conf.d    --with-curl    --with-pear    --with-gd    --with-jpeg-dir    --with-png-dir    --with-zlib    --with-xpm-dir    --with-freetype-dir    --with-mhash    --with-mysql        --with-pdo-mysql    --with-openssl    --with-xmlrpc    --with-xsl    --with-bz2    --with-gettext    --with-fpm-user=apache    --with-fpm-group=apache    --disable-debug    --enable-fpm    --enable-exif    --enable-wddx    --enable-zip    --enable-bcmath    --enable-calendar    --enable-ftp    --enable-mbstring    --enable-soap    --enable-sockets    --enable-sqlite-utf8    --enable-shmop    --enable-dba    --enable-sysvsem    --enable-sysvshm    --enable-sysvmsg --with-apxs2=/usr/local/apache/bin/apxs  --with-oci8=instantclient,/usr/lib/oracle/11.2/client64/lib --with-iconv&lt;/p&gt;
&lt;h1&gt;php5.4.10 不支持 --enable-sqlite-utf8&lt;/h1&gt;
&lt;p&gt;rpm -ivh libX11-devel-1.0.3-11.el5.x86_64.rpm \
libXpm-devel-3.5.5-3.x86_64.rpm \
libX11-devel-1.0.3-11.el5.x86_64.rpm \
libXdmcp-devel-1.0.1-2.1.x86_64.rpm \
xorg-x11-proto-devel-7.1-13.el5.x86_64.rpm \
mesa-libGL-devel-6.5.1-7.8.el5.x86_64.rpm \
freetype-devel-2.2.1-21.el5_3.x86_64.rpm&lt;/p&gt;
&lt;p&gt;mkdir /var/lib/nginx/
mkdir /var/lib/nginx/body
vi /etc/nginx/nginx.conf&lt;/p&gt;
&lt;h1&gt;user  root;&lt;/h1&gt;
&lt;p&gt;worker_processes  4;&lt;/p&gt;
&lt;h1&gt;error_log  logs/error.log;&lt;/h1&gt;
&lt;h1&gt;error_log  logs/error.log  notice;&lt;/h1&gt;
&lt;h1&gt;error_log  logs/error.log  info;&lt;/h1&gt;
&lt;h1&gt;pid        logs/nginx.pid;&lt;/h1&gt;
&lt;p&gt;events {
    worker_connections  4096;
}&lt;/p&gt;
&lt;p&gt;http {
    include       mime.types;
    default_type  application/octet-stream;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#log_format  main  &amp;#39;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="cp"&gt;#                  &amp;#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="cp"&gt;#                  &amp;#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;#39;;&lt;/span&gt;

&lt;span class="cp"&gt;#access_log  logs/access.log  main;&lt;/span&gt;
&lt;span class="n"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;sendfile&lt;/span&gt;        &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#tcp_nopush     on;&lt;/span&gt;

&lt;span class="cp"&gt;#keepalive_timeout  0;&lt;/span&gt;
&lt;span class="cp"&gt;#keepalive_timeout  650;&lt;/span&gt;
&lt;span class="cp"&gt;#client_header_buffer_size 128k;&lt;/span&gt;
&lt;span class="cp"&gt;#large_client_header_buffers 4 128k;&lt;/span&gt;

&lt;span class="n"&gt;gzip&lt;/span&gt;  &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sites&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;# HTTPS server&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;
&lt;span class="cp"&gt;#server {&lt;/span&gt;
&lt;span class="cp"&gt;#    listen       443;&lt;/span&gt;
&lt;span class="cp"&gt;#    server_name  localhost;&lt;/span&gt;

&lt;span class="cp"&gt;#    ssl                  on;&lt;/span&gt;
&lt;span class="cp"&gt;#    ssl_certificate      cert.pem;&lt;/span&gt;
&lt;span class="cp"&gt;#    ssl_certificate_key  cert.key;&lt;/span&gt;

&lt;span class="cp"&gt;#    ssl_session_timeout  5m;&lt;/span&gt;

&lt;span class="cp"&gt;#    ssl_protocols  SSLv2 SSLv3 TLSv1;&lt;/span&gt;
&lt;span class="cp"&gt;#    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span&gt;
&lt;span class="cp"&gt;#    ssl_prefer_server_ciphers   on;&lt;/span&gt;

&lt;span class="cp"&gt;#    location / {&lt;/span&gt;
&lt;span class="cp"&gt;#        root   html;&lt;/span&gt;
&lt;span class="cp"&gt;#        index  index.html index.htm;&lt;/span&gt;
&lt;span class="cp"&gt;#    }&lt;/span&gt;
&lt;span class="cp"&gt;#}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;mkdir /opt/nginx/sites-enabled
vi /opt/nginx/sites-enabled/default
server {
    listen       80 default;
    #charset koi8-r;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;error_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;index&lt;/span&gt;  &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#error_page  404              /404.html;&lt;/span&gt;

&lt;span class="cp"&gt;# redirect server error pages to the static page /50x.html&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;
&lt;span class="n"&gt;error_page&lt;/span&gt;   &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="mi"&gt;504&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;# proxy the PHP scripts to Apache listening on 127.0.0.1:80&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;
&lt;span class="cp"&gt;#location ~ \.php$ {&lt;/span&gt;
&lt;span class="cp"&gt;#    proxy_pass   http:&lt;/span&gt;&lt;span class="c1"&gt;//127.0.0.1;&lt;/span&gt;
&lt;span class="cp"&gt;#}&lt;/span&gt;

&lt;span class="cp"&gt;# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;
&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~*&lt;/span&gt; &lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;jpg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;request_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;expires&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;fastcgi_pass&lt;/span&gt;   &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;fastcgi_index&lt;/span&gt;  &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;fastcgi_param&lt;/span&gt;  &lt;span class="n"&gt;SCRIPT_FILENAME&lt;/span&gt;  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;fastcgi_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;include&lt;/span&gt;        &lt;span class="n"&gt;fastcgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;# deny access to .htaccess files, if Apache&amp;#39;s document root&lt;/span&gt;
&lt;span class="cp"&gt;# concurs with nginx&amp;#39;s one&lt;/span&gt;
&lt;span class="cp"&gt;#&lt;/span&gt;
&lt;span class="cp"&gt;#location ~ /\.ht {&lt;/span&gt;
&lt;span class="cp"&gt;#    deny  all;&lt;/span&gt;
&lt;span class="cp"&gt;#}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;vi /etc/init.d/nginx&lt;/p&gt;
&lt;h1&gt;!/bin/sh&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;nginx - this script starts and stops the nginx daemin&lt;/h1&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h1&gt;chkconfig:   - 85 15&lt;/h1&gt;
&lt;h1&gt;description:  Nginx is an HTTP(S) server, HTTP(S) reverse \&lt;/h1&gt;
&lt;h1&gt;proxy and IMAP/POP3 proxy server&lt;/h1&gt;
&lt;h1&gt;processname: nginx&lt;/h1&gt;
&lt;h1&gt;config:      /opt/nginx/conf/nginx.conf&lt;/h1&gt;
&lt;h1&gt;pidfile:     /opt/nginx/logs/nginx.pid&lt;/h1&gt;
&lt;h1&gt;Source function library.&lt;/h1&gt;
&lt;p&gt;. /etc/rc.d/init.d/functions&lt;/p&gt;
&lt;h1&gt;Source networking configuration.&lt;/h1&gt;
&lt;p&gt;. /etc/sysconfig/network&lt;/p&gt;
&lt;h1&gt;Check that networking is up.&lt;/h1&gt;
&lt;p&gt;[ "$NETWORKING" = "no" ] &amp;amp;&amp;amp; exit 0&lt;/p&gt;
&lt;p&gt;nginx="/opt/nginx/sbin/nginx"
prog=$(basename $nginx)&lt;/p&gt;
&lt;p&gt;NGINX_CONF_FILE="/etc/nginx/nginx.conf "&lt;/p&gt;
&lt;p&gt;lockfile=/var/run/nginx.pid&lt;/p&gt;
&lt;p&gt;start() {
    [ -x $nginx ] || exit 5
    [ -f $NGINX_CONF_FILE ] || exit 6
    echo -n $"Starting $prog: "
    daemon $nginx -c $NGINX_CONF_FILE
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;amp;&amp;amp; touch $lockfile
    return $retval
}&lt;/p&gt;
&lt;p&gt;stop() {
    echo -n $"Stopping $prog: "
    killproc $prog -QUIT
    retval=$?
    echo
    [ $retval -eq 0 ] &amp;amp;&amp;amp; rm -f $lockfile
    return $retval
}&lt;/p&gt;
&lt;p&gt;restart() {
    configtest || return $?
    stop
    start
}&lt;/p&gt;
&lt;p&gt;reload() {
    configtest || return $?
    echo -n $"Reloading $prog: "
    killproc $nginx -HUP
    RETVAL=$?
    echo
}&lt;/p&gt;
&lt;p&gt;force_reload() {
    restart
}&lt;/p&gt;
&lt;p&gt;configtest() {
  $nginx -t -c $NGINX_CONF_FILE
}&lt;/p&gt;
&lt;p&gt;rh_status() {
    status $prog
}&lt;/p&gt;
&lt;p&gt;rh_status_q() {
    rh_status &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
}&lt;/p&gt;
&lt;p&gt;case "$1" in
    start)
        rh_status_q &amp;amp;&amp;amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart|configtest)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
            ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
        exit 2
esac&lt;/p&gt;
&lt;p&gt;chmod +x /etc/init.d/nginx
/sbin/chkconfig nginx on
/sbin/chkconfig --list nginx&lt;/p&gt;
&lt;p&gt;php-fpm.conf 中的pid设置必须打开和脚本中的一致
vi /etc/init.d/php-fpm&lt;/p&gt;
&lt;h1&gt;! /bin/sh&lt;/h1&gt;
&lt;h3&gt;BEGIN INIT INFO&lt;/h3&gt;
&lt;h1&gt;Provides:          php-fpm&lt;/h1&gt;
&lt;h1&gt;Required-Start:    $remote_fs $network&lt;/h1&gt;
&lt;h1&gt;Required-Stop:     $remote_fs $network&lt;/h1&gt;
&lt;h1&gt;Default-Start:     2 3 4 5&lt;/h1&gt;
&lt;h1&gt;Default-Stop:      0 1 6&lt;/h1&gt;
&lt;h1&gt;Short-Description: starts php-fpm&lt;/h1&gt;
&lt;h1&gt;Description:       starts the PHP FastCGI Process Manager daemon&lt;/h1&gt;
&lt;h3&gt;END INIT INFO&lt;/h3&gt;
&lt;p&gt;prefix=/opt/php5
exec_prefix=${prefix}&lt;/p&gt;
&lt;p&gt;php_fpm_BIN=${exec_prefix}/sbin/php-fpm
php_fpm_CONF=${prefix}/etc/php-fpm.conf
php_fpm_PID=/var/run/php-fpm.pid&lt;/p&gt;
&lt;p&gt;php_opts="--fpm-config $php_fpm_CONF"&lt;/p&gt;
&lt;p&gt;wait_for_pid () {
    try=0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt;
        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
            &lt;span class="n"&gt;try&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;fi&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;

        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;removed&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$2&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
            &lt;span class="n"&gt;try&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;fi&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="n"&gt;esac&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;try&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;case "$1" in
    start)
        echo -n "Starting php-fpm "&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_BIN&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_opts&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; failed&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;wait_for_pid&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$try&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; failed&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; done&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gracefully shutting down php-fpm &amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;warning, no pid file found - php-fpm is not running ?&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;QUIT&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

    &lt;span class="n"&gt;wait_for_pid&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$try&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; failed. Use force-exit&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; done&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="n"&gt;force&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Terminating php-fpm &amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;warning, no pid file found - php-fpm is not running ?&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;TERM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

    &lt;span class="n"&gt;wait_for_pid&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$try&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; failed&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; done&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Reload service php-fpm &amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;then&lt;/span&gt;
        &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;warning, no pid file found - php-fpm is not running ?&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;fi&lt;/span&gt;

    &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;USR2&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;php_fpm_PID&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;

    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; done&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Usage: $0 {start|stop|force-quit|restart|reload}&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;esac&lt;/p&gt;
&lt;p&gt;修改php-fpm.conf.default 
pid = /var/run/php-fpm.pid&lt;/p&gt;
&lt;p&gt;4、编译安装cmakewget http://www.cmake.org/files/v2.8/cmake-2.8.4.tar.gz&lt;/p&gt;
&lt;h1&gt;tar xvzf cmake-2.8.4.tar.gz&lt;/h1&gt;
&lt;h1&gt;cd cmake-2.8.4&lt;/h1&gt;
&lt;h1&gt;./configure&lt;/h1&gt;
&lt;h1&gt;make&amp;amp;make install&lt;/h1&gt;
&lt;p&gt;cd mysql-5.5.11
cmake . -DCMAKE_INSTALL_PREFIX=/opt/mysql55/  -DMYSQL_DATADIR=/opt/mysql55/data  -DWITH_INNOBASE_STORAGE_ENGINE=1  -DMYSQL_TCP_PORT=3306  -DMYSQL_UNIX_ADDR=/var/run/mysql.sock  -DMYSQL_USER=mysql  -DWITH_DEBUG=0&lt;/p&gt;
&lt;p&gt;make &amp;amp;&amp;amp; make install &lt;/p&gt;
&lt;h1&gt;cd /usr/local/mysql55&lt;/h1&gt;
&lt;h1&gt;chown -R mysql .&lt;/h1&gt;
&lt;h1&gt;chgrp -R mysql .&lt;/h1&gt;
&lt;h1&gt;cp support-files/my-huge.cnf /etc/my.cnf&lt;/h1&gt;
&lt;h1&gt;vi /etc/my.cnf&lt;/h1&gt;
&lt;p&gt;将数据目录和套接字文件修改为实际值.&lt;/p&gt;
&lt;h1&gt;scripts/mysql_install_db –user=mysql&lt;/h1&gt;
&lt;h1&gt;chown -R root .&lt;/h1&gt;
&lt;h1&gt;chown -R mysql data&lt;/h1&gt;
&lt;p&gt;以下命令启动mysql&lt;/p&gt;
&lt;h1&gt;bin/mysqld_safe –user=mysql &amp;amp;&lt;/h1&gt;
&lt;p&gt;以下命令测试&lt;/p&gt;
&lt;h1&gt;bin/mysqladmin version&lt;/h1&gt;
&lt;h1&gt;bin/mysqladmin variables&lt;/h1&gt;
&lt;h1&gt;chkconfig –add mysqld&lt;/h1&gt;
&lt;p&gt;到这里就完成了,现在重启电脑进入终端测试&lt;/p&gt;
&lt;h1&gt;cd /usr/local/mysql&lt;/h1&gt;
&lt;h1&gt;bin/mysqlshow&lt;/h1&gt;
&lt;p&gt;如果可以看到数据说明mysql已经自启动了,现在你可以在终端使用
service mysqld stop来停止mysql服务
使用service mysqld start 来启动mysql服务
}}}&lt;/p&gt;</summary></entry><entry><title>redhat用iso做yum源</title><link href="http://liugehao.github.io/redhatyong-isozuo-yumyuan.html" rel="alternate"></link><updated>2013-01-14T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2013-01-14:redhatyong-isozuo-yumyuan.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;挂载ISO文件
  {{{&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;mount -o loop RHEL_5.7\ x86_64.iso /media}}}&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;增加一个REPO文件
  {{{&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;vi /etc/yum.repos.d/abc.repo&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;[Server]
name=rhel6server
baseurl=file:///media/Server
enable=1
gpcheck=1
gpgkey=file:///media/RPM-GPG-KEY-redhat-release
}}}
 1. 更新源
  {{{&lt;/p&gt;
&lt;h1&gt;yum update&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;CategoryRedhat CategoryLinux&lt;/p&gt;</summary></entry><entry><title>ubuntu wine 安装 rtx</title><link href="http://liugehao.github.io/ubuntu-wine-an-zhuang-rtx.html" rel="alternate"></link><updated>2012-12-26T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-12-26:ubuntu-wine-an-zhuang-rtx.html</id><summary type="html">&lt;p&gt;有的不用安装，这是我机器上.cache上所有的东西,下载过程有的软件找不到，google之。
{{{
sudo apt-get install wine
winetricks baekmuk  flash11 ie8   msxml6    unifont  vcrun2008 win2ksp4 corefonts gdiplus msls31 takao    vb6run   vcrun6 dotnet40  ie6   msxml3 track_usage vcrun2005 wenquanyi
}}}&lt;/p&gt;
&lt;p&gt;安装 rtx
regedit 下面的注册表，解决聊天记录乱码
{{{
REGEDIT4
[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]
"Arial"="simsun"
"Arial CE,238"="simsun"
"Arial CYR,204"="simsun"
"Arial Greek,161"="simsun"
"Arial TUR,162"="simsun"
"Courier New"="simsun"
"Courier New CE,238"="simsun"
"Courier New CYR,204"="simsun"
"Courier New Greek,161"="simsun"
"Courier New TUR,162"="simsun"
"FixedSys"="simsun"
"Helv"="simsun"
"Helvetica"="simsun"
"MS Sans Serif"="simsun"
"MS Shell Dlg"="simsun"
"MS Shell Dlg 2"="simsun"
"System"="simsun"
"Tahoma"="simsun"
"Times"="simsun"
"Times New Roman CE,238"="simsun"
"Times New Roman CYR,204"="simsun"
"Times New Roman Greek,161"="simsun"
"Times New Roman TUR,162"="simsun"
"Tms Rmn"="simsun"
}}}&lt;/p&gt;</summary></entry><entry><title>locale错误</title><link href="http://liugehao.github.io/localecuo-wu.html" rel="alternate"></link><updated>2012-12-24T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-12-24:localecuo-wu.html</id><summary type="html">&lt;p&gt;重新设置。
{{{
rm /var/lib/locales/supported.d/en
rm /var/lib/locales/supported.d/zh
cp /usr/share/i18n/SUPPORTED /var/lib/locales/supported.d/local
vi /var/lib/locales/supported.d/local #保留en zh开头的行&lt;/p&gt;
&lt;p&gt;locale-gen --purge
}}}&lt;/p&gt;</summary></entry><entry><title>nginx php 上传文件大小限制</title><link href="http://liugehao.github.io/nginx-php-shang-chuan-wen-jian-da-xiao-xian-zhi.html" rel="alternate"></link><updated>2012-11-15T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-15:nginx-php-shang-chuan-wen-jian-da-xiao-xian-zhi.html</id><summary type="html">&lt;p&gt;在php.ini里面查看如下行：
{{{
upload_max_filesize = 8M
post_max_size = 10M
memory_limit = 20M
}}}&lt;/p&gt;
&lt;p&gt;nginx主配置文件nginx.conf，找到http{}段，添加
{{{
client_max_body_size 20m;
}}}&lt;/p&gt;</summary></entry><entry><title>How can I change 'shmmax'</title><link href="http://liugehao.github.io/how-can-i-change-shmmax.html" rel="alternate"></link><updated>2012-11-14T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-14:how-can-i-change-shmmax.html</id><summary type="html">&lt;p&gt;How can I change 'shmmax'&lt;/p&gt;
&lt;p&gt;I have installed Oracle 9i on RedHat 9.&lt;/p&gt;
&lt;p&gt;Current value of 'shmmax' is 33554432.&lt;/p&gt;
&lt;p&gt;Some people recommend value of appr. 50% of the RAM.&lt;/p&gt;
&lt;p&gt;I tried to change the value of 'shmmax' in two ways:
{{{
    1. cat 268435456 &amp;gt; /proc/sys/kernel/shmmax
    2. sysctl -w kernel.shmmax=268435456
}}}
    After restarting the machine the value of 'shmmax' is 33554432 again ?!?&lt;/p&gt;
&lt;p&gt;=== 重启后恢复无效解决办法(彻底) ===
As root I edited '''/etc/sysctl.conf''' by adding following line at the end of the file:
{{{
kernel.shmmax = 268435456
}}}
After rebooting the machine I found the same value (268435456) in /proc/sys/kernel/shmmax&lt;/p&gt;
&lt;p&gt;So, I guess the things go as follows:&lt;/p&gt;
&lt;p&gt;"/proc/sys/kernel/shmmax" reads the value from the "/etc/sysctl.conf"&lt;/p&gt;
&lt;p&gt;If there's nothing about SHMMAX excplicitly in "/etc/sysctl.conf" then I guess "/proc/sys/kernel/shmmax" accepts the 33554432 which could be the default, I suppose.&lt;/p&gt;
&lt;p&gt;That's Ok. &lt;/p&gt;</summary></entry><entry><title>vmware的linux内核补丁</title><link href="http://liugehao.github.io/vmwarede-linuxnei-he-bu-ding.html" rel="alternate"></link><updated>2012-11-14T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-14:vmwarede-linuxnei-he-bu-ding.html</id><summary type="html">&lt;p&gt;http://pavlinux.ru/vmware/
下载相应的内核的补丁，安装。
{{{&lt;/p&gt;
&lt;h1&gt;cd /usr/lib/vmware/modules;&lt;/h1&gt;
&lt;h1&gt;wget http://pavlinux.ru/vmware/8.0.4/source.tar.lzma;&lt;/h1&gt;
&lt;h1&gt;md5sum source.tar.lzma;&lt;/h1&gt;
&lt;p&gt;e37e41a818a47ec868bdb493197aaf63 source.tar.lzma&lt;/p&gt;
&lt;h1&gt;tar -xf source.tar.lzma;&lt;/h1&gt;
&lt;h1&gt;vmware-modconfig --console --install-all;&lt;/h1&gt;
&lt;p&gt;}}}
vmware版本，差不多就可以，主要是linux内核版本。&lt;/p&gt;
&lt;p&gt;比如vmware 8.0.2, kernel 3.5.0 用&lt;/p&gt;
&lt;p&gt;{{{
Patches for VMware® Workstation 8.0.4 build-744019
Tested with linux kernel 3.2.20 and 3.5.0-rc3+ (updated 17.06.2012) 
}}}&lt;/p&gt;</summary></entry><entry><title>r1.0.4 single node setup</title><link href="http://liugehao.github.io/r104-single-node-setup.html" rel="alternate"></link><updated>2012-11-08T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-08:r104-single-node-setup.html</id><summary type="html">&lt;p&gt;= Single Node Setup =
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Purpose|Purpose]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#PreReqs|Prerequisites]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Supported+Platforms|Supported Platforms]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Required+Software|Required Software]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Installing+Software|Installing Software]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Download|Download]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Prepare+to+Start+the+Hadoop+Cluster|Prepare to Start the Hadoop Cluster]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Local|Standalone Operation]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#PseudoDistributed|Pseudo-Distributed Operation]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Configuration|Configuration]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Setup+passphraseless|Setup passphraseless ssh]]
  * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#Execution|Execution]]
 * [[http://hadoop.apache.org/docs/r1.0.4/single_node_setup.html#FullyDistributed|Fully-Distributed Operation]]&lt;/p&gt;
&lt;p&gt;== Purpose ==
This document describes how to set up and configure a single-node Hadoop       installation so that you can quickly perform simple operations using Hadoop       MapReduce and the Hadoop Distributed File System (HDFS).&lt;/p&gt;
&lt;p&gt;== Prerequisites ==
=== Supported Platforms ===
 * GNU/Linux is supported as a development and production platform.              Hadoop has been demonstrated on GNU/Linux clusters with 2000 nodes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Win32 is supported as a ''development platform''. Distributed              operation has not been well tested on Win32, so it is not              supported as a ''production platform''.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;=== Required Software ===
 . Required software for Linux and Windows include:
  1. Java^TM^ 1.6.x, preferably from Sun, must be installed.
 * '''ssh''' must be installed and '''sshd''' must              be running to use the Hadoop scripts that manage remote Hadoop              daemons. Additional requirements for Windows include:
  1. [[http://www.cygwin.com/|Cygwin]] - Required for shell              support in addition to the required software above.&lt;/p&gt;
&lt;p&gt;=== Installing Software ===
 . If your cluster doesn't have the requisite software you will need to         install it. For example on Ubuntu Linux: $ sudo apt-get install ssh
  . $ sudo apt-get install rsync
 On Windows, if you did not install the required software when you          installed cygwin, start the cygwin installer and select the packages:
  * openssh - the ''Net'' category&lt;/p&gt;
&lt;p&gt;== Download ==
To get a Hadoop distribution, download a recent          [[http://hadoop.apache.org/core/releases.html|stable release]] from one of the Apache Download         Mirrors.&lt;/p&gt;
&lt;p&gt;== Prepare to Start the Hadoop Cluster ==
Unpack the downloaded Hadoop distribution. In the distribution, edit the         file conf/hadoop-env.sh to define at least          JAVA_HOME to be the root of your Java installation.&lt;/p&gt;
&lt;p&gt;. Try the following command:
  . $ bin/hadoop
  . This will display the usage documentation for the '''hadoop'''          script.
 Now you are ready to start your Hadoop cluster in one of the three supported       modes:
  * Local (Standalone) Mode
 * Pseudo-Distributed Mode
 * Fully-Distributed Mode&lt;/p&gt;
&lt;p&gt;== Standalone Operation ==
By default, Hadoop is configured to run in a non-distributed        mode, as a single Java process. This is useful for debugging.&lt;/p&gt;
&lt;p&gt;. The following example copies the unpacked conf directory to          use as input and then finds and displays every match of the given regular          expression. Output is written to the given output directory.
  . $ mkdir input $ cp conf/&lt;em&gt;.xml input
   . $ bin/hadoop jar hadoop-examples-&lt;/em&gt;.jar grep input output 'dfs[a-z.]+'
  $ cat output/*&lt;/p&gt;
&lt;p&gt;== Pseudo-Distributed Operation ==
Hadoop can also be run on a single-node in a pseudo-distributed mode      where each Hadoop daemon runs in a separate Java process.&lt;/p&gt;
&lt;p&gt;=== Configuration ===
 . Use the following:
  . conf/core-site.xml:
 {{{
&lt;configuration&gt;
     &lt;property&gt;
         &lt;name&gt;fs.default.name&lt;/name&gt;
         &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;
     &lt;/property&gt;
&lt;/configuration&gt;
}}}
 conf/hdfs-site.xml:
 {{{
&lt;configuration&gt;
     &lt;property&gt;
         &lt;name&gt;dfs.replication&lt;/name&gt;
         &lt;value&gt;1&lt;/value&gt;
     &lt;/property&gt;
&lt;/configuration&gt;
}}}
 conf/mapred-site.xml:
 {{{
&lt;configuration&gt;
     &lt;property&gt;
         &lt;name&gt;mapred.job.tracker&lt;/name&gt;
         &lt;value&gt;localhost:9001&lt;/value&gt;
     &lt;/property&gt;
&lt;/configuration&gt;
}}}&lt;/p&gt;
&lt;p&gt;=== Setup passphraseless ssh ===
 . Now check that you can ssh to the localhost without a passphrase:
  . $ ssh localhost
 If you cannot ssh to localhost without a passphrase, execute the            following commands:
  . $ ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa $ cat ~/.ssh/id_dsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys ''&lt;/p&gt;
&lt;p&gt;=== Execution ===
 . ''Format a new distributed-filesystem:   . $ bin/hadoop namenode -format
Start the hadoop daemons:   . $ bin/start-all.sh
The hadoop daemon log output is written to the          ${HADOOP_LOG_DIR} directory (defaults to          ${HADOOP_HOME}/logs). Browse the web interface for the NameNode and the JobTracker; by         default they are available at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NameNode -              http://localhost:50070/
''&lt;/li&gt;
&lt;li&gt;''JobTracker -              http://localhost:50030/ Copy the input files into the distributed filesystem: ''
  . ''$ bin/hadoop fs -put conf input ''
 ''Run some of the examples provided:   . $ bin/hadoop jar hadoop-examples-&lt;em&gt;.jar grep input output 'dfs[a-z.]+'
Examine the output files: Copy the output files from the distributed filesystem to the local            filesytem and examine them:   . $ bin/hadoop fs -get output output $ cat output/&lt;/em&gt;
or View the output files on the distributed filesystem:   . $ bin/hadoop fs -cat output/*
When you're done, stop the daemons with:   . $ bin/stop-all.sh
''&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;== Fully-Distributed Operation ==
''For information on setting up fully-distributed, non-trivial clusters     see [[http://hadoop.apache.org/docs/r1.0.4/cluster_setup.html|Cluster Setup]]. ''&lt;/p&gt;
&lt;p&gt;Java and JNI are trademarks or registered trademarks of        Sun Microsystems, Inc. in the United States and other countries.'' ''&lt;/p&gt;</summary></entry><entry><title>bash记忆指令(向上下翻相关指令)</title><link href="http://liugehao.github.io/bashji-yi-zhi-ling-xiang-shang-xia-fan-xiang-guan-zhi-ling.html" rel="alternate"></link><updated>2012-11-06T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-06:bashji-yi-zhi-ling-xiang-shang-xia-fan-xiang-guan-zhi-ling.html</id><summary type="html">&lt;p&gt;在 FreeBSD 裡面，要做到這樣非常方便，當我們在終端機輸入 vi 之後按下 Up 鍵，終端機會顯示之前下過的 vi 指令，這在常常使用 command 的使用者來講相當方便，也非常重要&lt;/p&gt;
&lt;p&gt;在 FreeBSD 底下，只要在 .cshrc 裡面加上
{{{
    bindkey “^W” backward-delete-word
    bindkey -k up history-search-backward
    bindkey -k down history-search-forward
}}}
可是在 linux 底下要如何達到這樣呢，那就是 man bash『history-search-backward』，『history-search-forward』這兩個功能，對我來說非常重要，然而你 要達到這功能，就是利用 showkey 跟 bind 這兩個指令&lt;/p&gt;
&lt;p&gt;首先你要先找到 Up 這個鍵的 16 位元的編碼&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;showkey -a&lt;/h1&gt;
&lt;p&gt;Press any keys – Ctrl-D will terminate this program&lt;/p&gt;
&lt;p&gt;^[[A 27 0033 0x1b
     91 0133 0x5b
     65 0101 0x41
}}}
然後在 bind 上去，寫到 /etc/bashrc 地下就可以了
{{{
    bind ‘”\x1b\x5b\x41″:history-search-backward’
    bind ‘”\x1b\x5b\x42″:history-search-forward’
}}}&lt;/p&gt;
&lt;p&gt;== 我的输入 ==
在.bashrc中增加：
{{{
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'
}}}&lt;/p&gt;</summary></entry><entry><title>ubuntu安装java</title><link href="http://liugehao.github.io/ubuntuan-zhuang-java.html" rel="alternate"></link><updated>2012-11-01T00:00:00+01:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-11-01:ubuntuan-zhuang-java.html</id><summary type="html">&lt;p&gt;到sun下载jdk-7u7-linux-x64.tar.gz&lt;/p&gt;
&lt;p&gt;{{{
tar zxf jdk-7u7-linux-x64.tar.gz
mv jdk1.7.0_07 /usr/lib/jvm
update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.7.0_07/bin/java" 1
update-alternatives --config java
}}}&lt;/p&gt;
&lt;p&gt;=== 参考 ===&lt;/p&gt;
&lt;p&gt;首先将*.tar.gz解压&lt;/p&gt;
&lt;p&gt;具体方法为：tar -xzvf *.tar.gz&lt;/p&gt;
&lt;p&gt;假设得到的文件夹为java&lt;/p&gt;
&lt;p&gt;将其移动到/usr/中&lt;/p&gt;
&lt;p&gt;命令为：sudo mv java /usr/&lt;/p&gt;
&lt;p&gt;然后设置环境变量：&lt;/p&gt;
&lt;p&gt;sudo gedit /etc/profile&lt;/p&gt;
&lt;p&gt;打开文件&lt;/p&gt;
&lt;p&gt;在结尾处umask 022前，输入：
{{{
JAVA_HOME=/usr/java
export JRE_HOME=/usr/java/jre　　
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
}}}
重启生效：source xxxx.bash_profile&lt;/p&gt;
&lt;p&gt;Ubuntu 中修改默认jdk
{{{
update-alternatives --install /usr/bin/java java /usr/java/bin/java 300
update-alternatives --install /usr/bin/javac javac /usr/java/bin/javac 300
}}}
通过这一步将我们安装的jdk加入java选单。
{{{
update-alternatives --config java
}}}
选择默认的jdk
{{{
java -version
}}}&lt;/p&gt;</summary></entry><entry><title>安装python-ldap出错：</title><link href="http://liugehao.github.io/an-zhuang-python-ldapchu-cuo.html" rel="alternate"></link><updated>2012-10-12T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-10-12:an-zhuang-python-ldapchu-cuo.html</id><summary type="html">&lt;p&gt;{{{
gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -DHAVE_SASL -DHAVE_TLS -DHAVE_LIBLDAP_R -DHAVE_LIBLDAP_R -DLDAPMODULE_VERSION=2.4.10 -IModules -I/opt/openldap-RE24/include -I/usr/include/sasl -I/usr/include -I/usr/include/python2.7 -c Modules/LDAPObject.c -o build/temp.linux-x86_64-2.7/Modules/LDAPObject.o&lt;/p&gt;
&lt;p&gt;Modules/LDAPObject.c:18:18: 致命错误： sasl.h：没有那个文件或目录&lt;/p&gt;
&lt;p&gt;}}}
{{{
sudo apt-get install libldap2-dev libsasl2-dev
}}}&lt;/p&gt;</summary></entry><entry><title>linux用apt-get安装软件总出错</title><link href="http://liugehao.github.io/linuxyong-apt-getan-zhuang-ruan-jian-zong-chu-cuo.html" rel="alternate"></link><updated>2012-09-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-27:linuxyong-apt-getan-zhuang-ruan-jian-zong-chu-cuo.html</id><summary type="html">&lt;p&gt;{{{
apt-get install oracle-java7-installer
.....
/usr/bin/dpkg returned an error code (1)
}}}
由于jdk安装时下载地址不对，所以出错。
{{{
apt-get -f install 
dpkg --configure -a
}}}
都无效
{{{
cd /var/lib/dpkg/info
rm oracle*
apt-get autoremove
}}}
问题解决&lt;/p&gt;</summary></entry><entry><title>ubuntu下ssh登录慢</title><link href="http://liugehao.github.io/ubuntuxia-sshdeng-lu-man.html" rel="alternate"></link><updated>2012-09-27T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-27:ubuntuxia-sshdeng-lu-man.html</id><summary type="html">&lt;p&gt;那就是,通过ssh登录到ubuntu,登录认证的时间总要用掉10多秒甚至20多秒30秒,
可能你已经习惯了这个事实,
但是,其实,这个漫长的等待时间完全是可以免掉的,怎么免,且看下面&lt;/p&gt;
&lt;p&gt;步骤一 关闭ssh的gssapi认证
{{{
vi /etc/ssh/ssh_config&lt;/p&gt;
&lt;h1&gt;注释掉如下两行&lt;/h1&gt;
&lt;p&gt;GSSAPIAuthentication yes
GSSAPIDelegateCredentials no
}}}&lt;/p&gt;
&lt;p&gt;步骤二 关闭ssh的UseDNS&lt;/p&gt;
&lt;p&gt;{{{
vi /etc/ssh/sshd_config
}}}
注：ubuntu的sshd_config文件没有UseDNS参数,而据我了解,其它类&lt;em&gt;NIX、&lt;/em&gt;BSD操作系统的sshd_config都有UseDNS参数，且它们缺省都是"UseDNS yes"，
那估计ubuntu的sshd_config虽然没有UseDNS，那它缺省也是"UseDNS yes"了
于是，在sshd_config末尾处插入如下行
{{{
UseDNS no
}}}&lt;/p&gt;
&lt;p&gt;然后执行指令"/etc/init.d/ssh restart"，重启ssh服务，配置生效&lt;/p&gt;</summary></entry><entry><title>在这里详述 linux/moinmoin安装。</title><link href="http://liugehao.github.io/zai-zhe-li-xiang-shu-linuxmoinmoinan-zhuang.html" rel="alternate"></link><updated>2012-09-24T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-24:zai-zhe-li-xiang-shu-linuxmoinmoinan-zhuang.html</id><summary type="html">&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;Install nginx&lt;/h1&gt;
&lt;p&gt;add-apt-repository ppa:nginx/stable
aptitude update
aptitude install nginx&lt;/p&gt;
&lt;h1&gt;Install and activate python virtualenv&lt;/h1&gt;
&lt;p&gt;pip install virtualenv
mkdir -p /srv/www/moin
virtualenv /srv/www/moin/pythonenv
source /srv/www/moin/pythonenv/bin/activate&lt;/p&gt;
&lt;h1&gt;Download and install moinmoin:&lt;/h1&gt;
&lt;p&gt;cd /tmp
wget http://static.moinmo.in/files/moin-1.9.4.tar.gz
tar zxvf moin-1.9.4.tar.gz
cd moin-1.9.4
python setup.py install&lt;/p&gt;
&lt;h1&gt;Deactivate python virtualenv&lt;/h1&gt;
&lt;p&gt;deactivate&lt;/p&gt;
&lt;h1&gt;Copy wiki to /srv/www/moin&lt;/h1&gt;
&lt;p&gt;cp -r ./wiki /srv/www/moin/&lt;/p&gt;
&lt;h1&gt;Copy configs to wiki root directory&lt;/h1&gt;
&lt;p&gt;cd /srv/www/moin/wiki/
cp config/wikiconfig.py ./
cp server/moin.wsgi ./&lt;/p&gt;
&lt;p&gt;vi /srv/www/moin/wiki/moin.wsgi&lt;/p&gt;
&lt;p&gt;sys.path.insert(0, '/srv/www/moin/pythonenv/lib/python2.7/site-packages/')
sys.path.insert(0, '/srv/www/moin/wiki/')&lt;/p&gt;
&lt;p&gt;chown www-data:www-data -R /srv/www/moin
chmod o-rwx -R /srv/www/moin&lt;/p&gt;
&lt;p&gt;aptitude install uwsgi uwsgi-plugin-python&lt;/p&gt;
&lt;p&gt;vi /srv/www/moin/uwsgi.xml&lt;/p&gt;
&lt;p&gt;&lt;uwsgi&gt;
    &lt;uid&gt;www-data&lt;/uid&gt;
    &lt;gid&gt;www-data&lt;/gid&gt;
    &lt;plugin&gt;python&lt;/plugin&gt;
    &lt;socket&gt;/srv/www/moin/moin.sock&lt;/socket&gt;
    &lt;wsgi-file&gt;/srv/www/moin/wiki/moin.wsgi&lt;/wsgi-file&gt;
    &lt;limit-as&gt;256&lt;/limit-as&gt;
    &lt;processes&gt;8&lt;/processes&gt;
    &lt;memory-report/&gt;
    &lt;vhost/&gt;
    &lt;no-site/&gt;
&lt;/uwsgi&gt;&lt;/p&gt;
&lt;p&gt;server {
    server_name wiki.example.com;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;access_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;error_log&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;uwsgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;uwsgi_pass&lt;/span&gt; &lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;///srv/www/moin/moin.sock;&lt;/span&gt;
    &lt;span class="n"&gt;uwsgi_modifier1&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry><entry><title>loadrunner error number list</title><link href="http://liugehao.github.io/loadrunner-error-number-list.html" rel="alternate"></link><updated>2012-09-21T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-21:loadrunner-error-number-list.html</id><summary type="html">&lt;p&gt;http://bbs.51testing.com/thread-8644-1-1.html
{{{
　　sckOutOfMemory 7 内存不足 
　　sckInvalidPropertyValue 380 属性值不效 
　　sckGetNotSupported 394 属性不可读 
　　sckGetNotSupported 383 属性是只读的 
　　sckBadState 40006 所请求的事务或请求本身的错误协议或者错误连接状态 
　　sckInvalidArg 40014 传递给函数的参数格式不确定，或者不在指定范围内 
　　sckSuccess 40017 成功 
　　sckUnsupported 40018 不支持的变量类型 
　　sckInvalidOp 40020 在当前状态下的无效操作 
　　sckOutOfRange 40021 参数越界 
　　sckWrongProtocol 40026 所请求的事务或请求本身的错误协议 
　　sckOpCanceled 10004 取消操作 
　　sckInvalidArgument 10014 所请求的地址是广播地址，但未设置标记 
　　sckWouldBlock 10035 套接字不成块，而指定操作将使之成块 
　　sckInProgress 10036 制造块的Winsock操作在进行之中 
　　sckAlreadyComplete 10037 完成操作。未进行制作块的操作 
　　sckNotSocket 10038 描述符不是套接字 
　　sckMsgTooBig 10040 数据太大，不适于缓冲区的要求，因而被截断 
　　sckPortNotSupported 10043 不支持指定的端口 
　　sckAddressInUse 10048 地址在使用中 
　　sckAddressNotAvailable 10049 来自本地机器的不可用地址 
　　sckNetworkSubsystemFailed 10050 网络子系统失败 
　　sckNetworkUnreachable 10051 当前不能从主机到达网络 
　　sckNetReset 10052 在设置SO_KEEPALIVE时连接超时 
　　sckConnectAborted 10053 由于超时或者其它失败而中止接连 
　　sckConnectionReset 10054 通过远端重新设置连接 
　　sckNoBufferSpace 10055 没有可用的缓存空间 
　　sckAlreadyConnected 10056 已连接的套接字 
　　sckNotConnected 10057 未接连套接字 
　　sckSockedShutdown 10058 已关闭套接字 
　　sckTimedout 10060 套接字超时 
　　sckConnectionRefused 10061 强行拒绝连接 
　　sckNotInitialized 10093 套接字没有初始化 
　　sckHostNotFound 11001 授权应答：未找到主机 
　　sckHostNotFoundTryAgain 11002 非授权应答：未找到主机，重试 
　　sckNonRecoverableError 11003 不可恢复的错误 
　　sckNoData 11004 无效名，对所请求的类型无数据记录&lt;/p&gt;
&lt;p&gt;问题描述   :lr11 BUG？Failed to send data by channels - post message failed.
解决方法 ：http://bbs.51testing.com/thread-527804-1-1.html
HTTP协议的，windows server 2008+lr11+IE7 应该没啥特殊操作，也不是每次跑都出现这个错误，之前也跑过8小时疲劳也正常出结果。
网上搜了一圈，看到个建议把controller中的Diagnotics-configure-Web Page Diagnotics默认的Enable关掉，重新试了几次倒是正常了，现在也不确定是不是真的没问题了。
估计是兼容性的问题吧&lt;/p&gt;
&lt;p&gt;问题描述 :Error -27257: Pending web_reg_save_param/reg_find/create_html_param[_ex] request(s) detected and reset at the end of iteration number 1
http://www.mianwww.com/html/2011/11/11898.html
解决方法： web_reg_save_param位置放错了，应该放到请求页面前面。&lt;/p&gt;
&lt;p&gt;问题描述 : Action.c(19): Error -27796: Failed to connect to server "preprice1.suning.cn:80": [10048] Address already in use
解决方法： Try changing the registry value 
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\tcpip\Parameters\TcpTimedWaitDelay to 30
and HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\tcpip\Parameters\MaxUserPort to 65534
and rebooting the machine
http://blog.csdn.net/alix_zhou/article/details/4488809
2、HKEY_LOCAL_MACHINE/System/CurrentControlSet/Services/tcpip/Parameters/TcpTimedWaitDelay to 30
and HKEY_LOCAL_MACHINE/System/CurrentControlSet/Services/tcpip/Parameters/MaxUserPort to 65534
将TcpTimedWaitDelay to 30设置为5s或者其它，同时增加了think time，需要重启机器。&lt;/p&gt;
&lt;p&gt;LoadRunner错误及解决方法总结
http://wenku.baidu.com/view/2879ff4e2b160b4e767fcf2f.html?from=rec&amp;amp;pos=0&amp;amp;weight=3&amp;amp;lastweight=1&amp;amp;count=5&lt;/p&gt;
&lt;p&gt;LoadRunner SHUNRA\CloudServices
http://dax9527.blog.163.com/blog/static/3764789520100136832542/
在某次重启以后突然发现公司的机器不能上网了,主要症状是无法获取IP,手动指定IP也不起作用,域用户下也没法联网.域防火墙无法连接.系统设备中有一个网卡带叹号,不能正常工作也没法卸载掉.
      经过半天折腾,结果无意中发现本地连接属性中有一个叫SHUNRA\Cloud WAN Emulator的服务是勾选状态.
嘿,这东西跟那个带叹号的网卡是一个名字啊,后来明白这是因为我安装了LoadRunner8.0工业级压力测试软件的原因,LR自动安装并启用了这个服务,不过却是个阉割的东西,导致不能接入到局域网.去掉勾选,完美解决.
}}}&lt;/p&gt;</summary></entry><entry><title>Nginx的一些优化</title><link href="http://liugehao.github.io/nginxde-xie-you-hua.html" rel="alternate"></link><updated>2012-09-21T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-21:nginxde-xie-you-hua.html</id><summary type="html">&lt;p&gt;=== nginx指令中的优化（配置文件） ===&lt;/p&gt;
&lt;p&gt;{{{
worker_processes 8;
}}}
nginx进程数，建议按照cpu数目来指定，一般为它的倍数。&lt;/p&gt;
&lt;p&gt;{{{
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;
}}}
为每个进程分配cpu，上例中将8个进程分配到8个cpu，当然可以写多个，或者将一个进程分配到多个cpu。&lt;/p&gt;
&lt;p&gt;{{{
worker_rlimit_nofile 102400;
}}}
这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n的值保持一致。&lt;/p&gt;
&lt;p&gt;{{{
use epoll;
}}}
使用epoll的I/O模型，这个不用说了吧。&lt;/p&gt;
&lt;p&gt;{{{
worker_connections 102400;
}}}
每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为worker_processes*worker_connections。&lt;/p&gt;
&lt;p&gt;{{{
keepalive_timeout 60;
}}}
keepalive超时时间。&lt;/p&gt;
&lt;p&gt;{{{
client_header_buffer_size 4k;
}}}
客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。&lt;/p&gt;
&lt;p&gt;{{{
open_file_cache max=102400 inactive=20s;
}}}
这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。&lt;/p&gt;
&lt;p&gt;{{{
open_file_cache_valid 30s;
}}}
这个是指多长时间检查一次缓存的有效信息。&lt;/p&gt;
&lt;p&gt;{{{
open_file_cache_min_uses 1;
}}}
open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。&lt;/p&gt;
&lt;p&gt;=== 内核参数的优化 ===
{{{
net.ipv4.tcp_max_tw_buckets = 6000
}}}
timewait的数量，默认是180000。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.ip_local_port_range = 1024    65000
}}}
允许系统打开的端口范围。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_tw_recycle = 1
}}}
启用timewait快速回收。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_tw_reuse = 1
}}}
开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_syncookies = 1
}}}
开启SYN Cookies，当出现SYN等待队列溢出时，启用cookies来处理。&lt;/p&gt;
&lt;p&gt;{{{
net.core.somaxconn = 262144
}}}
web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128，而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。&lt;/p&gt;
&lt;p&gt;{{{
net.core.netdev_max_backlog = 262144
}}}
每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_max_orphans = 262144
}}}
系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。如果超过这个数字，孤儿连接将即刻被复位并打印出警告信息。这个限制仅仅是为了防止简单的DoS攻击，不能过分依靠它或者人为地减小这个值，更应该增加这个值(如果增加了内存之后)。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_max_syn_backlog = 262144
}}}
记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024，小内存的系统则是128。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_timestamps = 0
}}}
时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_synack_retries = 1
}}}
为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_syn_retries = 1
}}}
在内核放弃建立连接之前发送SYN包的数量。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_fin_timeout = 1
}}}
如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是60秒。2.2 内核的通常值是180秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的WEB服务器，也有因为大量的死套接字而内存溢出的风险，FIN- WAIT-2的危险性比FIN-WAIT-1要小，因为它最多只能吃掉1.5K内存，但是它们的生存期长些。&lt;/p&gt;
&lt;p&gt;{{{
net.ipv4.tcp_keepalive_time = 30
}}}
当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时。&lt;/p&gt;
&lt;p&gt;=== 一个完整的内核优化配置 ===
{{{
net.ipv4.ip_forward = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
kernel.sysrq = 0
kernel.core_uses_pid = 1
net.ipv4.tcp_syncookies = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_sack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096        87380   4194304
net.ipv4.tcp_wmem = 4096        16384   4194304
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 262144
net.core.somaxconn = 262144
net.ipv4.tcp_max_orphans = 3276800
net.ipv4.tcp_max_syn_backlog = 262144
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_fin_timeout = 1
net.ipv4.tcp_keepalive_time = 30
net.ipv4.ip_local_port_range = 1024    65000
}}}
=== 一个简单的nginx优化配置文件 ===
{{{
user  www www;
worker_processes 8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000;
error_log  /www/log/nginx_error.log  crit;
pid        /usr/local/nginx/nginx.pid;
worker_rlimit_nofile 204800;&lt;/p&gt;
&lt;p 204800_="204800;
" _="
" epoll_="epoll;
" use="use" worker_connections="worker_connections"&gt;events&lt;/p&gt;
&lt;p&gt;http
{
  include       mime.types;
  default_type  application/octet-stream;&lt;/p&gt;
&lt;p&gt;charset  utf-8;&lt;/p&gt;
&lt;p&gt;server_names_hash_bucket_size 128;
  client_header_buffer_size 2k;
  large_client_header_buffers 4 4k;
  client_max_body_size 8m;&lt;/p&gt;
&lt;p&gt;sendfile on;
  tcp_nopush     on;&lt;/p&gt;
&lt;p&gt;keepalive_timeout 60;&lt;/p&gt;
&lt;p&gt;fastcgi_cache_path /usr/local/nginx/fastcgi_cache levels=1:2
                keys_zone=TEST:10m
                inactive=5m;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 16k;
  fastcgi_buffers 16 16k;
  fastcgi_busy_buffers_size 16k;
  fastcgi_temp_file_write_size 16k;
  fastcgi_cache TEST;
  fastcgi_cache_valid 200 302 1h;
  fastcgi_cache_valid 301 1d;
  fastcgi_cache_valid any 1m;
  fastcgi_cache_min_uses 1;
  fastcgi_cache_use_stale error timeout invalid_header http_500;&lt;/p&gt;
&lt;p&gt;open_file_cache max=204800 inactive=20s;
  open_file_cache_min_uses 1;
  open_file_cache_valid 30s;&lt;/p&gt;
&lt;p&gt;tcp_nodelay on;&lt;/p&gt;
&lt;p&gt;gzip on;
  gzip_min_length  1k;
  gzip_buffers     4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types       text/plain application/x-javascript text/css application/xml;
  gzip_vary on;&lt;/p&gt;
&lt;p&gt;server
  {
    listen       8080;
    server_name  ad.test.com;
    index index.php index.htm;
    root  /www/html/;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;stub_status&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;php5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;fastcgi_index&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;php&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;fcgi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;&lt;span class="n"&gt;gif&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;jpg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;jpeg&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bmp&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;swf&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;expires&lt;/span&gt;      &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;log_format&lt;/span&gt;  &lt;span class="n"&gt;access&lt;/span&gt;  &lt;span class="err"&gt;&amp;#39;$&lt;/span&gt;&lt;span class="n"&gt;remote_addr&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;remote_user&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;time_local&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$request&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
          &lt;span class="err"&gt;&amp;#39;$&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;body_bytes_sent&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;$http_referer&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
          &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;$http_user_agent&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;http_x_forwarded_for&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;access_log&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;  &lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}
}}}
=== 关于FastCGI的几个指令 ===
{{{
fastcgi_cache_path /usr/local/nginx/fastcgi_cache levels=1:2 keys_zone=TEST:10m inactive=5m;
}}}
这个指令为FastCGI缓存指定一个路径，目录结构等级，关键字区域存储时间和非活动删除时间。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_connect_timeout 300;
}}}
指定连接到后端FastCGI的超时时间。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_send_timeout 300;
}}}
向FastCGI传送请求的超时时间，这个值是指已经完成两次握手后向FastCGI传送请求的超时时间。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_read_timeout 300;
}}}
接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_buffer_size 16k;
}}}
指定读取FastCGI应答第一部分需要用多大的缓冲区，这里可以设置为fastcgi_buffers指令指定的缓冲区大小，上面的指令指定它将使用1个16k的缓冲区去读取应答的第一部分，即应答头，其实这个应答头一般情况下都很小（不会超过1k），但是你如果在fastcgi_buffers指令中指定了缓冲区的大小，那么它也会分配一个fastcgi_buffers指定的缓冲区大小去缓存。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_buffers 16 16k;
}}}
指定本地需要用多少和多大的缓冲区来缓冲FastCGI的应答，如上所示，如果一个php脚本所产生的页面大小为256k，则会为其分配16个16k的缓冲区来缓存，如果大于256k，增大于256k的部分会缓存到fastcgi_temp指定的路径中，当然这对服务器负载来说是不明智的方案，因为内存中处理数据速度要快于硬盘，通常这个值的设置应该选择一个你的站点中的php脚本所产生的页面大小的中间值，比如你的站点大部分脚本所产生的页面大小为256k就可以把这个值设置为16 16k，或者4 64k 或者64 4k，但很显然，后两种并不是好的设置方法，因为如果产生的页面只有32k，如果用4 64k它会分配1个64k的缓冲区去缓存，而如果使用64 4k它会分配8个4k的缓冲区去缓存，而如果使用16 16k则它会分配2个16k去缓存页面，这样看起来似乎更加合理。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_busy_buffers_size 32k;
}}}
这个指令我也不知道是做什么用，只知道默认值是fastcgi_buffers的两倍。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_temp_file_write_size 32k;
}}}
在写入fastcgi_temp_path时将用多大的数据块，默认值是fastcgi_buffers的两倍。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_cache TEST
}}}
开启FastCGI缓存并且为其制定一个名称。个人感觉开启缓存非常有用，可以有效降低CPU负载，并且防止502错误。但是这个缓存会引起很多问题，因为它缓存的是动态页面。具体使用还需根据自己的需求。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_cache_valid 200 302 1h;
fastcgi_cache_valid 301 1d;
fastcgi_cache_valid any 1m;
}}}
为指定的应答代码指定缓存时间，如上例中将200，302应答缓存一小时，301应答缓存1天，其他为1分钟。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_cache_min_uses 1;
}}}
缓存在fastcgi_cache_path指令inactive参数值时间内的最少使用次数，如上例，如果在5分钟内某文件1次也没有被使用，那么这个文件将被移除。&lt;/p&gt;
&lt;p&gt;{{{
fastcgi_cache_use_stale error timeout invalid_header http_500;
}}}
不知道这个参数的作用，猜想应该是让nginx知道哪些类型的缓存是没用的。 以上为nginx中FastCGI相关参数，另外，FastCGI自身也有一些配置需要进行优化，如果你使用php-fpm来管理FastCGI，可以修改配置文件中的以下值：&lt;/p&gt;
&lt;p&gt;{{{
&lt;value name="max_children"&gt;60&lt;/value&gt;
}}}
同时处理的并发请求数，即它将开启最多60个子线程来处理并发连接。&lt;/p&gt;
&lt;p&gt;{{{
&lt;value name="rlimit_files"&gt;102400&lt;/value&gt;
}}}
最多打开文件数。&lt;/p&gt;
&lt;p&gt;{{{
&lt;value name="max_requests"&gt;204800&lt;/value&gt;
}}}
每个进程在重置之前能够执行的最多请求数。&lt;/p&gt;</summary></entry><entry><title>bashrc 生效</title><link href="http://liugehao.github.io/bashrc-sheng-xiao.html" rel="alternate"></link><updated>2012-09-13T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-13:bashrc-sheng-xiao.html</id><summary type="html">&lt;p&gt;在配置bashrc文件后，如果想使其立即生效，可以不用采用登出的方法，而直接键入下列命令即可&lt;/p&gt;
&lt;p&gt;{{{&lt;/p&gt;
&lt;h1&gt;source ./.bashrc&lt;/h1&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;CategoryLinux  CategoryBash&lt;/p&gt;</summary></entry><entry><title>iptable端口转发</title><link href="http://liugehao.github.io/iptableduan-kou-zhuan-fa.html" rel="alternate"></link><updated>2012-09-13T00:00:00+02:00</updated><author><name>liugehao</name></author><id>tag:liugehao.github.io,2012-09-13:iptableduan-kou-zhuan-fa.html</id><summary type="html">&lt;p&gt;81服务器上vps商品映射,映射vps上22,80端口到公网&lt;/p&gt;
&lt;p&gt;{{{#!highlight bash
iptables -F
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 11022 -j DNAT --to-destination 10.0.2.39:22
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 12022 -j DNAT --to-destination 10.0.2.35:22
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 13022 -j DNAT --to-destination 10.0.2.40:22
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 14022 -j DNAT --to-destination 10.0.2.41:22
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 15022 -j DNAT --to-destination 10.0.2.42:22&lt;/p&gt;
&lt;p&gt;iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 11080 -j DNAT --to-destination 10.0.2.39:80
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 12080 -j DNAT --to-destination 10.0.2.35:80
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 13080 -j DNAT --to-destination 10.0.2.40:80
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 14080 -j DNAT --to-destination 10.0.2.41:80
iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 15080 -j DNAT --to-destination 10.0.2.42:80&lt;/p&gt;
&lt;p&gt;iptables -A PREROUTING -t nat -p tcp -i eth0 --dport 11432 -j DNAT --to-destination 10.0.2.39:5432&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;</summary></entry></feed>